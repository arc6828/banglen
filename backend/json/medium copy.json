{
    "status": "ok",
    "feed": {
        "url": "https://medium.com/feed/ckartisan",
        "title": "ckartisan - Medium",
        "link": "https://medium.com/ckartisan?source=rss----ee8b7b98cc43---4",
        "author": "",
        "description": "Build anythings - Medium",
        "image": "https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png"
    },
    "items": [
        {
            "title": "Deploy PHP Website on Heroku (No Framework)",
            "pubDate": "2021-06-22 02:56:23",
            "link": "https://medium.com/ckartisan/deploy-php-website-on-heroku-no-framework-db353c3cec5f?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/db353c3cec5f",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/701/0*22idIICE_RTbMX1g.png",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/701/0*22idIICE_RTbMX1g.png\"></figure><p>บทความนี้จะอธิบายข้้นตอนการนำ PHP Script ขึ้น cloud ของ Heroku</p>\n<h3>Program ที่ควรติดตั้งก่อน</h3>\n<ol>\n<li>Xampp</li>\n<li>Composer — <a href=\"https://getcomposer.org/download/\">https://getcomposer.org/download/</a>\n</li>\n<li>Github Desktop</li>\n<li>Git-scm — <a href=\"https://git-scm.com/\">https://git-scm.com/</a>\n</li>\n<li>Heroku Cli — <a href=\"https://devcenter.heroku.com/articles/heroku-cli#download-and-install\">https://devcenter.heroku.com/articles/heroku-cli#download-and-install</a>\n</li>\n</ol>\n<h3>Phase 1 : Prepare your project PHP or HTML</h3>\n<p>เตรียมโปรเจคให้พร้อม อาจเปิดด้วยโปรแกรม VS Code</p>\n<p>หากยังไม่ได้ใช้งานร่วมกับ Git โปรดพิมพ์คำสั่ง</p>\n<pre>git init</pre>\n<p>หากยังไม่ได้ใช้งานร่วมกับ Composer โปรดพิมพ์คำสั่ง แล้วกด Enter รัวๆ</p>\n<pre>composer init</pre>\n<p>จะปรากฏไฟล์ที่ชื่อว่า composer.json ในโฟลเดอร์</p>\n<h3>Phase 2 : Deploying to Heroku</h3>\n<ul><li>เปิด Terminal แล้วพิมพ์ heroku login</li></ul>\n<pre>heroku login</pre>\n<ul><li>เชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)</li></ul>\n<pre>//Connect with existing App</pre>\n<pre>heroku git:remote -a <strong>yourmovieapp</strong></pre>\n<pre>//หรือ<br>//Crate a new Random name Heroku App</pre>\n<pre>heroku create</pre>\n<ul><li>git add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git add .</pre>\n<ul><li>git commit เพื่อบันทึกการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git commit -m \"First Push to Heroku\"</pre>\n<ul><li>git push</li></ul>\n<pre>git push heroku <strong>main<br></strong>//or<strong><br></strong>git push heroku <strong>master<br></strong>//or<strong><br></strong>git push heroku &lt;branch&gt;</pre>\n<p>Run : <a href=\"https://yourmovieapp.herokuapp.com/\">https://<strong>yourmovieapp</strong>.herokuapp.com/</a> เปลี่ยนเป็นชื่อ app ของคุณเอง</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*oYhCtWY61t-O9iSg.png\"></figure><p>Done!!!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=db353c3cec5f\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/deploy-php-website-on-heroku-no-framework-db353c3cec5f\">Deploy PHP Website on Heroku (No Framework)</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/701/0*22idIICE_RTbMX1g.png\"></figure><p>บทความนี้จะอธิบายข้้นตอนการนำ PHP Script ขึ้น cloud ของ Heroku</p>\n<h3>Program ที่ควรติดตั้งก่อน</h3>\n<ol>\n<li>Xampp</li>\n<li>Composer — <a href=\"https://getcomposer.org/download/\">https://getcomposer.org/download/</a>\n</li>\n<li>Github Desktop</li>\n<li>Git-scm — <a href=\"https://git-scm.com/\">https://git-scm.com/</a>\n</li>\n<li>Heroku Cli — <a href=\"https://devcenter.heroku.com/articles/heroku-cli#download-and-install\">https://devcenter.heroku.com/articles/heroku-cli#download-and-install</a>\n</li>\n</ol>\n<h3>Phase 1 : Prepare your project PHP or HTML</h3>\n<p>เตรียมโปรเจคให้พร้อม อาจเปิดด้วยโปรแกรม VS Code</p>\n<p>หากยังไม่ได้ใช้งานร่วมกับ Git โปรดพิมพ์คำสั่ง</p>\n<pre>git init</pre>\n<p>หากยังไม่ได้ใช้งานร่วมกับ Composer โปรดพิมพ์คำสั่ง แล้วกด Enter รัวๆ</p>\n<pre>composer init</pre>\n<p>จะปรากฏไฟล์ที่ชื่อว่า composer.json ในโฟลเดอร์</p>\n<h3>Phase 2 : Deploying to Heroku</h3>\n<ul><li>เปิด Terminal แล้วพิมพ์ heroku login</li></ul>\n<pre>heroku login</pre>\n<ul><li>เชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)</li></ul>\n<pre>//Connect with existing App</pre>\n<pre>heroku git:remote -a <strong>yourmovieapp</strong></pre>\n<pre>//หรือ<br>//Crate a new Random name Heroku App</pre>\n<pre>heroku create</pre>\n<ul><li>git add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git add .</pre>\n<ul><li>git commit เพื่อบันทึกการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git commit -m \"First Push to Heroku\"</pre>\n<ul><li>git push</li></ul>\n<pre>git push heroku <strong>main<br></strong>//or<strong><br></strong>git push heroku <strong>master<br></strong>//or<strong><br></strong>git push heroku &lt;branch&gt;</pre>\n<p>Run : <a href=\"https://yourmovieapp.herokuapp.com/\">https://<strong>yourmovieapp</strong>.herokuapp.com/</a> เปลี่ยนเป็นชื่อ app ของคุณเอง</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*oYhCtWY61t-O9iSg.png\"></figure><p>Done!!!</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=db353c3cec5f\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/deploy-php-website-on-heroku-no-framework-db353c3cec5f\">Deploy PHP Website on Heroku (No Framework)</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "heroku",
                "php"
            ]
        },
        {
            "title": "Deploy PHP Laravel on Heroku",
            "pubDate": "2021-06-12 14:49:30",
            "link": "https://medium.com/ckartisan/deploy-php-laravel-on-heroku-d5350ede4a3b?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/d5350ede4a3b",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*t-KtsSktvBGjojJl44vEHQ.png",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*t-KtsSktvBGjojJl44vEHQ.png\"></figure><p>แนะนำการ Deploy PHP Laravel ขึ้น Heroku Server พร้อม Database Postgres</p>\n<h3>ติดตั้งโปรแกรมอะไรบ้าง</h3>\n<ol>\n<li>Xampp : <a href=\"https://www.apachefriends.org/download.html\">https://www.apachefriends.org/download.html</a>\n</li>\n<li>Composer : <a href=\"https://getcomposer.org/download/\">https://getcomposer.org/download/</a>\n</li>\n<li>Heroku Cli : <a href=\"https://devcenter.heroku.com/articles/heroku-cli#download-and-install\">https://devcenter.heroku.com/articles/heroku-cli#download-and-install</a>\n</li>\n<li>Git Scm : <a href=\"https://git-scm.com/\">https://git-scm.com/</a>\n</li>\n<li>Github Desktop : <a href=\"https://desktop.github.com/\">https://desktop.github.com/</a> (Optional)</li>\n<li>Database Client : <a href=\"https://dbeaver.io/download/\">https://dbeaver.io/download/</a>(Optional)</li>\n</ol>\n<h3>Phase 1 : เตรียมไฟล์โปรเจค Laravel</h3>\n<ul>\n<li>สร้างโปรเจค Larvel หรือ Clone มาจาก Github</li>\n<li>ในกรณีที่ต้องการ Force HTTPS <a href=\"https://laracasts.com/discuss/channels/laravel/laravel-8-force-https-middleware-failed\">อ้างอิง</a> ไปที่ไฟล์ <strong>app/Providers/AppServiceProvider.php</strong>\n</li>\n</ul>\n<pre><strong>use Illuminate\\Support\\Facades\\URL;</strong></pre>\n<pre>...</pre>\n<pre>public function boot()<br>{<br><strong>if($this-&gt;app-&gt;environment('production')) {<br>        URL::forceScheme('https');<br>    }</strong><br>}</pre>\n<h3>Phase 2 : <a href=\"https://devcenter.heroku.com/articles/getting-started-with-laravel#deploying-to-heroku\">Deploying to Heroku</a>\n</h3>\n<ul><li>พิมคำสั่งนี้ลงไปนี้ใน terminal</li></ul>\n<pre>echo \"web: vendor/bin/heroku-php-apache2 public/\" &gt; Procfile</pre>\n<ul><li>เปิดไฟล์ที่ชื่อว่า procfile จากนั้นลบ ฟันหนูหน้าสุดกับหลังสุดออก (ถ้ามี)</li></ul>\n<pre>\"web: vendor/bin/heroku-php-apache2 public/\"   &lt;--ไม่ใช้อันนี้</pre>\n<pre><strong>web: vendor/bin/heroku-php-apache2 public/     &lt;--ใช้อันนี้</strong></pre>\n<ul><li>เปิด Terminal แล้วพิมพ์ heroku login</li></ul>\n<pre>heroku login</pre>\n<ul><li>เชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)</li></ul>\n<pre>//Connect with existing App<br>heroku git:remote -a <strong>yourmovieapp</strong></pre>\n<pre>//หรือ</pre>\n<pre>//Crate a new Random name Heroku App<br>heroku create</pre>\n<ul><li>config APP_KEY และ APP_ENV in heroku เช่น (เอามาจาก .env)</li></ul>\n<pre>heroku config:set APP_KEY=base64:0NtfcbBLZ/Bjh4PgMJTszrtE2VaHroriA6dg2nBKzhA=<br></pre>\n<pre>heroku config:set APP_ENV=production</pre>\n<ul><li>config ASSET_URL in heroku เช่น yourmovieapp</li></ul>\n<pre>heroku config:set ASSET_URL=https://<strong>&lt;yourmovieapp&gt;</strong>.herokuapp.com</pre>\n<ul><li>git add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git add .</pre>\n<ul><li>git commit เพื่อบันทึกการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git commit -m \"First Push to Heroku\"</pre>\n<ul><li>git push</li></ul>\n<pre>git push heroku <strong>main<br></strong>//or<strong><br></strong>git push heroku <strong>master<br></strong>//or<strong><br></strong>git push heroku &lt;branch&gt;</pre>\n<p>Run : <a href=\"https://yourmovieapp.herokuapp.com/\">https://<strong>yourmovieapp</strong>.herokuapp.com/</a> เปลี่ยนเป็นชื่อ app ของคุณเอง</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4LxsttgD3dfSGyf94z-5mw.png\"></figure><h3>Phase 3 : Setup Database : <strong>Postgresql</strong>\n</h3>\n<ul><li>มาหน้า Resource แล้วพิมพ์ค้นหา “Heroku Postgres”</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*53gBxvPElv0fXEXFkhSg9Q.png\"></figure><ul><li>พิมคำสั่ง heroku pg:credentials:url เพื่อดูรหัสเชื่อมต่อฐานข้อมูล จากนั้นให้ copy Connection URL ตามที่</li></ul>\n<pre><strong>heroku pg:credentials:url</strong></pre>\n<pre>Connection information for default credential.<br>Connection info string:<br>   \"dbname=xxxxx host=ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com port=5432 user=xxxxxxx password=xxxxxxxx sslmode=require\"<br>Connection URL:   <br><strong>postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxx</strong></pre>\n<ul><li>add config database (DB_URL ใช้ของส่วนตัวนะครับ)</li></ul>\n<pre>heroku config:add DB_CONNECTION=pgsql</pre>\n<pre>heroku config:add DB_URL=<strong>postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxx</strong></pre>\n<ul><li>migrate</li></ul>\n<pre>heroku run php artisan migrate</pre>\n<p>เรียบร้อย</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d5350ede4a3b\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/deploy-php-laravel-on-heroku-d5350ede4a3b\">Deploy PHP Laravel on Heroku</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*t-KtsSktvBGjojJl44vEHQ.png\"></figure><p>แนะนำการ Deploy PHP Laravel ขึ้น Heroku Server พร้อม Database Postgres</p>\n<h3>ติดตั้งโปรแกรมอะไรบ้าง</h3>\n<ol>\n<li>Xampp : <a href=\"https://www.apachefriends.org/download.html\">https://www.apachefriends.org/download.html</a>\n</li>\n<li>Composer : <a href=\"https://getcomposer.org/download/\">https://getcomposer.org/download/</a>\n</li>\n<li>Heroku Cli : <a href=\"https://devcenter.heroku.com/articles/heroku-cli#download-and-install\">https://devcenter.heroku.com/articles/heroku-cli#download-and-install</a>\n</li>\n<li>Git Scm : <a href=\"https://git-scm.com/\">https://git-scm.com/</a>\n</li>\n<li>Github Desktop : <a href=\"https://desktop.github.com/\">https://desktop.github.com/</a> (Optional)</li>\n<li>Database Client : <a href=\"https://dbeaver.io/download/\">https://dbeaver.io/download/</a>(Optional)</li>\n</ol>\n<h3>Phase 1 : เตรียมไฟล์โปรเจค Laravel</h3>\n<ul>\n<li>สร้างโปรเจค Larvel หรือ Clone มาจาก Github</li>\n<li>ในกรณีที่ต้องการ Force HTTPS <a href=\"https://laracasts.com/discuss/channels/laravel/laravel-8-force-https-middleware-failed\">อ้างอิง</a> ไปที่ไฟล์ <strong>app/Providers/AppServiceProvider.php</strong>\n</li>\n</ul>\n<pre><strong>use Illuminate\\Support\\Facades\\URL;</strong></pre>\n<pre>...</pre>\n<pre>public function boot()<br>{<br><strong>if($this-&gt;app-&gt;environment('production')) {<br>        URL::forceScheme('https');<br>    }</strong><br>}</pre>\n<h3>Phase 2 : <a href=\"https://devcenter.heroku.com/articles/getting-started-with-laravel#deploying-to-heroku\">Deploying to Heroku</a>\n</h3>\n<ul><li>พิมคำสั่งนี้ลงไปนี้ใน terminal</li></ul>\n<pre>echo \"web: vendor/bin/heroku-php-apache2 public/\" &gt; Procfile</pre>\n<ul><li>เปิดไฟล์ที่ชื่อว่า procfile จากนั้นลบ ฟันหนูหน้าสุดกับหลังสุดออก (ถ้ามี)</li></ul>\n<pre>\"web: vendor/bin/heroku-php-apache2 public/\"   &lt;--ไม่ใช้อันนี้</pre>\n<pre><strong>web: vendor/bin/heroku-php-apache2 public/     &lt;--ใช้อันนี้</strong></pre>\n<ul><li>เปิด Terminal แล้วพิมพ์ heroku login</li></ul>\n<pre>heroku login</pre>\n<ul><li>เชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)</li></ul>\n<pre>//Connect with existing App<br>heroku git:remote -a <strong>yourmovieapp</strong></pre>\n<pre>//หรือ</pre>\n<pre>//Crate a new Random name Heroku App<br>heroku create</pre>\n<ul><li>config APP_KEY และ APP_ENV in heroku เช่น (เอามาจาก .env)</li></ul>\n<pre>heroku config:set APP_KEY=base64:0NtfcbBLZ/Bjh4PgMJTszrtE2VaHroriA6dg2nBKzhA=<br></pre>\n<pre>heroku config:set APP_ENV=production</pre>\n<ul><li>config ASSET_URL in heroku เช่น yourmovieapp</li></ul>\n<pre>heroku config:set ASSET_URL=https://<strong>&lt;yourmovieapp&gt;</strong>.herokuapp.com</pre>\n<ul><li>git add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git add .</pre>\n<ul><li>git commit เพื่อบันทึกการเปลี่ยนแปลงใน GIT</li></ul>\n<pre>git commit -m \"First Push to Heroku\"</pre>\n<ul><li>git push</li></ul>\n<pre>git push heroku <strong>main<br></strong>//or<strong><br></strong>git push heroku <strong>master<br></strong>//or<strong><br></strong>git push heroku &lt;branch&gt;</pre>\n<p>Run : <a href=\"https://yourmovieapp.herokuapp.com/\">https://<strong>yourmovieapp</strong>.herokuapp.com/</a> เปลี่ยนเป็นชื่อ app ของคุณเอง</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4LxsttgD3dfSGyf94z-5mw.png\"></figure><h3>Phase 3 : Setup Database : <strong>Postgresql</strong>\n</h3>\n<ul><li>มาหน้า Resource แล้วพิมพ์ค้นหา “Heroku Postgres”</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*53gBxvPElv0fXEXFkhSg9Q.png\"></figure><ul><li>พิมคำสั่ง heroku pg:credentials:url เพื่อดูรหัสเชื่อมต่อฐานข้อมูล จากนั้นให้ copy Connection URL ตามที่</li></ul>\n<pre><strong>heroku pg:credentials:url</strong></pre>\n<pre>Connection information for default credential.<br>Connection info string:<br>   \"dbname=xxxxx host=ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com port=5432 user=xxxxxxx password=xxxxxxxx sslmode=require\"<br>Connection URL:   <br><strong>postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxx</strong></pre>\n<ul><li>add config database (DB_URL ใช้ของส่วนตัวนะครับ)</li></ul>\n<pre>heroku config:add DB_CONNECTION=pgsql</pre>\n<pre>heroku config:add DB_URL=<strong>postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxx</strong></pre>\n<ul><li>migrate</li></ul>\n<pre>heroku run php artisan migrate</pre>\n<p>เรียบร้อย</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=d5350ede4a3b\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/deploy-php-laravel-on-heroku-d5350ede4a3b\">Deploy PHP Laravel on Heroku</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "postgresql",
                "heroku",
                "laravel"
            ]
        },
        {
            "title": "DigitalOcean Setup Nginx Ubuntu 20.04 + PHPMYADMIN + SSL",
            "pubDate": "2021-05-23 07:42:41",
            "link": "https://medium.com/ckartisan/digitalocean-setup-nginx-ubuntu-20-04-phpmyadmin-ssl-8cd0d51c09c8?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/8cd0d51c09c8",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*q-78HIQTiWGB5fhTfOZSdA.png",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q-78HIQTiWGB5fhTfOZSdA.png\"></figure><p>วันนี้เราจะมาลอง Nginx Ubuntu 20.04 จะแตกต่างจาก apache2 เวอร์ชั่น 18.04 อย่างไร เด๋วได้รู้กัน โดย server ตัวนี้เลือกใช้งาน droplet marketplace ที่ชื่อว่า LEMP</p>\n<h3>Prerequisites : เริ่มตั้งแต่เลือก Droplet</h3>\n<p>ผมเลือกแบบ Marketplace : <a href=\"https://marketplace.digitalocean.com/apps/lemp\"><strong>LEMP </strong></a>มีซอฟแวร์ต่อไปนี้ติดมาให้แล้วก็เลยไม่ต้องไปวุ่นวายมาก</p>\n<ul>\n<li>php 7.4</li>\n<li>nginx</li>\n<li>mysql 8</li>\n<li>cerbot</li>\n<li>ฯลฯ</li>\n</ul>\n<p>ซึ่ง Image ตัวนี้จะมีสิ่งที่ต้องติดตั้งเพิ่มด้วย ได้แก่</p>\n<ul>\n<li>PHP Extension บางตัว</li>\n<li>PHPMYMADIN</li>\n<li>ติดตั้ง node และอื่นๆ</li>\n</ul>\n<p>จากนั้นก็เข้าไปใน puty ใส่ password ต่างๆ ให้เรียบร้อย</p>\n<h3>Phase 1.0 : Install</h3>\n<h4>PHP Modules [for Laravel]</h4>\n<pre>sudo apt update<br>sudo apt install php-mbstring php-xml php-bcmath</pre>\n<p>Node Server</p>\n<pre>sudo apt install nodejs</pre>\n<h3>Phase 2.0 : Install your code by git</h3>\n<ul><li>Make a new folder in /var/www</li></ul>\n<pre>sudo mkdir -p /var/www/<strong>example.com</strong></pre>\n<ul><li>go inside your new directory</li></ul>\n<pre>cd /var/www/<strong>example.com</strong></pre>\n<ul><li>clone project from git, assume that my repository name “example”</li></ul>\n<pre>git clone  <a href=\"https://github.com/arc6828/weather\">https://github.com/arc6828/</a><strong>example</strong></pre>\n<h3>Phase 2.1 : For Laravel Project only (skip this step if you are not)</h3>\n<ul><li>set permission the folder name “example”</li></ul>\n<pre>sudo chmod 775 -R <strong>example</strong></pre>\n<ul><li>set permission the folder <strong>example/storage</strong> to <strong>777</strong>\n</li></ul>\n<pre>sudo chmod 777 -R <strong>example/storage</strong></pre>\n<ul><li>go inside your folder</li></ul>\n<pre>cd example</pre>\n<ul><li>refresh vendor folder</li></ul>\n<pre>composer install</pre>\n<ul><li>setup .env</li></ul>\n<pre>cp .env.example .env</pre>\n<ul><li>set key</li></ul>\n<pre>php artisan key:generate</pre>\n<p>change owner</p>\n<pre>sudo chown -R www-data.www-data storage<br>sudo chown -R www-data.www-data bootstrap/cache</pre>\n<h3>Phase 3.1 : How to setup Nginx Server block for laravel …</h3>\n<ul><li>สร้างไฟล์ /etc/nginx/sites-available/<strong>example </strong>ด้วย nano editor</li></ul>\n<pre>nano /etc/nginx/sites-available/<strong>example.com</strong></pre>\n<ul><li>edit with the path of your project [for laravel only]</li></ul>\n<pre>server {<br>    listen 80;<br>    server_name <strong>example.com www.example.com</strong>;<br>    root /var/www/<strong>example.com</strong>/<strong>example</strong>/public;</pre>\n<pre>    add_header X-Frame-Options \"SAMEORIGIN\";<br>    add_header X-XSS-Protection \"1; mode=block\";<br>    add_header X-Content-Type-Options \"nosniff\";</pre>\n<pre>    index index.html index.htm index.php;</pre>\n<pre>    charset utf-8;</pre>\n<pre>    location / {<br>        try_files $uri $uri/ /index.php?$query_string;<br>    }</pre>\n<pre>    location = /favicon.ico { access_log off; log_not_found off; }<br>    location = /robots.txt  { access_log off; log_not_found off; }</pre>\n<pre>    error_page 404 /index.php;</pre>\n<pre>    location ~ \\.php$ {<br>        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;<br>        fastcgi_index index.php;<br>        fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;<br>        include fastcgi_params;<br>    }</pre>\n<pre>    location ~ /\\.(?!well-known).* {<br>        deny all;<br>    }<br>}</pre>\n<ul><li>activate the host</li></ul>\n<pre>sudo ln -s /etc/nginx/sites-available/<strong>example.com </strong>/etc/nginx/sites-enabled/<strong>example.com</strong></pre>\n<ul><li>ตรวจสอบว่า nginx ของคุณทำงานได้</li></ul>\n<pre><strong>sudo nginx -t</strong></pre>\n<pre>//OUTPUT<br>Outputnginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is <strong>successful</strong></pre>\n<ul>\n<li>หากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่</li>\n<li>restart nginx</li>\n</ul>\n<pre>sudo service nginx restart</pre>\n<p>Run browser <a href=\"http://server_domain_or_ip/\">http://</a>example.com</p>\n<h3>Phase 3.2 : How to setup Nginx Server block for node applacation with proxy reverse…</h3>\n<p>ก่อนที่จะทำ server block เช็คสักนิดนึงว่า Application ของคุณรันได้</p>\n<p>ติดตั้ง pm2 และ serve</p>\n<pre>yarn global add pm2<br>yarn global add serve</pre>\n<p>run build in your project folder and run (for reactjs)</p>\n<pre>yarn run build<br>pm2 serve build 3000 --spa</pre>\n<p>หรือบาง app ก็รันแบบนี้ (for node application)</p>\n<pre>pm2 start backend/server.js</pre>\n<p>หรือบาง app ก็รันแบบนี้ (for nextjs) เปลี่ยนชื่อเอาเองนะ</p>\n<pre>pm2 start yarn --name \"<strong>nextjs</strong>\" --interpreter bash -- start</pre>\n<p>SAVE list นี้ในกรณีที่ไฟดับจะได้ start auto</p>\n<pre>pm2 save</pre>\n<p>เช็คว่ามีอะไรรันอยู่</p>\n<pre>pm2 list</pre>\n<p>delete ที่ไม่ต้องการ</p>\n<pre>pm2 delete &lt;process&gt;</pre>\n<p>เช็คว่า app ของคุณรันได้</p>\n<pre>curl http://localhost:3000</pre>\n<p>step ต่อจากนี้เป็นการทำ server block</p>\n<ul><li>สร้างไฟล์ /etc/nginx/sites-available/<strong>example </strong>ด้วย nano editor</li></ul>\n<pre>nano /etc/nginx/sites-available/<strong>example.com</strong></pre>\n<ul><li>edit with the path of your project [for node applacation with proxy reverse…]</li></ul>\n<pre>server {<br>    listen 80;<br>    server_name <strong>example.com </strong><a href=\"http://www.example.com;/\"><strong>www.example.com</strong>;</a></pre>\n<pre>    charset utf-8;</pre>\n<pre>    location / {<br>        proxy_pass <a href=\"http://localhost:3000/\"><strong>http://localhost:3000</strong></a><strong>;</strong><br>        proxy_http_version 1.1;<br>        proxy_set_header Upgrade $http_upgrade;<br>        proxy_set_header Connection 'upgrade';<br>        proxy_set_header Host $host;<br>        proxy_cache_bypass $http_upgrade;<br>    }<br>}</pre>\n<ul><li>activate the host</li></ul>\n<pre>sudo ln -s /etc/nginx/sites-available/<strong>example.com </strong>/etc/nginx/sites-enabled/</pre>\n<ul><li>ตรวจสอบว่า nginx ของคุณทำงานได้</li></ul>\n<pre><strong>sudo nginx -t</strong></pre>\n<pre>//OUTPUT<br>Outputnginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is <strong>successful</strong></pre>\n<ul>\n<li>หากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่</li>\n<li>restart nginx</li>\n</ul>\n<pre>sudo service nginx restart</pre>\n<p>Run browser <a href=\"http://server_domain_or_ip/\">http://</a>example.com</p>\n<h3>Phase 4 ติดตั้ง phpmyadmin</h3>\n<p>install</p>\n<pre>sudo apt update<br>sudo apt install phpmyadmin</pre>\n<p>ในระหว่างขั้นตอนการติดตั้ง phpMyAdmin คุณจะได้รับแจ้งให้เลือกเว็บเซิร์ฟเวอร์ (Apache หรือ Lighttpd) อย่างไรก็ตามเนื่องจากคุณใช้ Nginx เป็นเว็บเซิร์ฟเวอร์คุณจึงไม่ควรเลือกตัวเลือกเหล่านี้ ให้กด TAB เพื่อไฮไลต์ &lt;Ok&gt; จากนั้นกด ENTER เพื่อดำเนินการติดตั้งต่อ</p>\n<p>จากนั้นคุณจะได้รับแจ้งว่าจะใช้ dbconfig-common ในการกำหนดค่าฐานข้อมูลแอปพลิเคชันหรือไม่ เลือก : &lt;ใช่&gt;</p>\n<p>เมื่อติดตั้ง phpmyadmin จะยังใช้ไม่ได้จนว่าจะทำ symbolic link</p>\n<pre>#access phpmyadmin with IP<br>sudo ln -s /usr/share/phpmyadmin /var/www/<strong>html</strong>/phpmyadmin</pre>\n<pre>หรือ</pre>\n<pre>#access phpmyadmin with your larvel domain<br>sudo ln -s /usr/share/phpmyadmin /var/www/<strong>example.com/example/public/</strong>phpmyadmin</pre>\n<p>Run</p>\n<pre><a href=\"https://server_domain_or_ip/phpmyadmin\">https://your_IP/phpmyadmin</a></pre>\n<pre><a href=\"https://server_domain_or_ip/phpmyadmin\">https://server_domain/phpmyadmin</a><br></pre>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/456/0*wwH0NLUNgimAdjhg.png\"></figure><h3>Phase 5 : Adjusting User Authentication and Privileges</h3>\n<p>เข้า Mysql</p>\n<pre>sudo mysql</pre>\n<p>เปลี่ยนแปลง root</p>\n<pre>ALTER USER '<strong>root</strong>'@'localhost' IDENTIFIED WITH <strong>mysql_native_password </strong>BY '<strong>password</strong>';</pre>\n<p>เพิ่ม user</p>\n<pre>CREATE USER '<strong>sammy</strong>'@'localhost' IDENTIFIED WITH <strong>mysql_native_password </strong>BY <strong>'password'</strong>;</pre>\n<pre>หรือ</pre>\n<pre>CREATE USER '<strong>sammy</strong>'@'%' IDENTIFIED WITH <strong>mysql_native_password </strong>BY <strong>'password'</strong>;</pre>\n<p>มอบอำนาจให้หมดเลย ได้แก่ จัดการ user , จัดการ DB, จัดการ table , ฯลฯ</p>\n<pre>GRANT ALL PRIVILEGES ON *.* TO 'sammy'@'localhost' WITH GRANT OPTION;</pre>\n<p>ระบุตารางให้แก่บางคน</p>\n<pre>GRANT USAGE ON *.* TO '<strong>sammy</strong>'@'%';<br>ALTER USER '<strong>sammy</strong>'@'%' REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;<br>GRANT ALL PRIVILEGES ON `<strong>db_name</strong>`.* TO '<strong>sammy</strong>'@'%';</pre>\n<p>That’s all</p>\n<h3>อ้างอิง</h3>\n<h4>ติดตั้งแบบพื้นฐาน</h4>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-laravel-with-nginx-on-ubuntu-20-04\">How To Install and Configure Laravel with Nginx on Ubuntu 20.04 (LEMP) | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-with-nginx-on-an-ubuntu-20-04-server\">How To Install and Secure phpMyAdmin with Nginx on an Ubuntu 20.04 Server | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-20-04\">How To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOcean</a></li>\n</ul>\n<h4>วิธีติดตั้ง SSL ด้วย Let’s Encrypt on Ubuntu 20</h4>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04\">How To Secure Nginx with Let's Encrypt on Ubuntu 20.04 | DigitalOcean</a></p>\n<h4>Server block</h4>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-20-04\">How To Set Up a Node.js Application for Production on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-deploy-a-react-application-with-nginx-on-ubuntu-20-04\">How To Deploy a React Application with Nginx on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://devahoy.com/blog/2019/08/how-to-setup-nodejs-and-react-with-nginx-and-pm2/\">Devahoy | วิธีการ Setup Server สำหรับ Node.js และ React ด้วย NGINX</a></li>\n</ul>\n<h4>Check DSN</h4>\n<p><a href=\"https://www.digitalocean.com/community/tools/dns\">DNS Lookup | DigitalOcean</a></p>\n<h4>Setup Google Mail</h4>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-gmail-with-your-domain-on-digitalocean\">How To Set Up Gmail with Your Domain on DigitalOcean | DigitalOcean</a></p>\n<h4>Create User</h4>\n<ul>\n<li><a href=\"http://mirrors.tripadvisor.com/centos-vault/4.6/docs/html/rhel-sbs-en-4/s1-starting-create-account.html\">Creating a User Account</a></li>\n<li><a href=\"https://www.cyberciti.biz/faq/create-a-user-account-on-ubuntu-linux/\">StackPath</a></li>\n</ul>\n<pre>cut -d: -f1 /etc/passwd</pre>\n<h4>Crontab</h4>\n<p><a href=\"https://tecadmin.net/crontab-in-linux-with-20-examples-of-cron-schedule/\">Crontab in Linux with 20 Useful Examples to Schedule Jobs - TecAdmin</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8cd0d51c09c8\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/digitalocean-setup-nginx-ubuntu-20-04-phpmyadmin-ssl-8cd0d51c09c8\">DigitalOcean Setup Nginx Ubuntu 20.04 + PHPMYADMIN + SSL</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*q-78HIQTiWGB5fhTfOZSdA.png\"></figure><p>วันนี้เราจะมาลอง Nginx Ubuntu 20.04 จะแตกต่างจาก apache2 เวอร์ชั่น 18.04 อย่างไร เด๋วได้รู้กัน โดย server ตัวนี้เลือกใช้งาน droplet marketplace ที่ชื่อว่า LEMP</p>\n<h3>Prerequisites : เริ่มตั้งแต่เลือก Droplet</h3>\n<p>ผมเลือกแบบ Marketplace : <a href=\"https://marketplace.digitalocean.com/apps/lemp\"><strong>LEMP </strong></a>มีซอฟแวร์ต่อไปนี้ติดมาให้แล้วก็เลยไม่ต้องไปวุ่นวายมาก</p>\n<ul>\n<li>php 7.4</li>\n<li>nginx</li>\n<li>mysql 8</li>\n<li>cerbot</li>\n<li>ฯลฯ</li>\n</ul>\n<p>ซึ่ง Image ตัวนี้จะมีสิ่งที่ต้องติดตั้งเพิ่มด้วย ได้แก่</p>\n<ul>\n<li>PHP Extension บางตัว</li>\n<li>PHPMYMADIN</li>\n<li>ติดตั้ง node และอื่นๆ</li>\n</ul>\n<p>จากนั้นก็เข้าไปใน puty ใส่ password ต่างๆ ให้เรียบร้อย</p>\n<h3>Phase 1.0 : Install</h3>\n<h4>PHP Modules [for Laravel]</h4>\n<pre>sudo apt update<br>sudo apt install php-mbstring php-xml php-bcmath</pre>\n<p>Node Server</p>\n<pre>sudo apt install nodejs</pre>\n<h3>Phase 2.0 : Install your code by git</h3>\n<ul><li>Make a new folder in /var/www</li></ul>\n<pre>sudo mkdir -p /var/www/<strong>example.com</strong></pre>\n<ul><li>go inside your new directory</li></ul>\n<pre>cd /var/www/<strong>example.com</strong></pre>\n<ul><li>clone project from git, assume that my repository name “example”</li></ul>\n<pre>git clone  <a href=\"https://github.com/arc6828/weather\">https://github.com/arc6828/</a><strong>example</strong></pre>\n<h3>Phase 2.1 : For Laravel Project only (skip this step if you are not)</h3>\n<ul><li>set permission the folder name “example”</li></ul>\n<pre>sudo chmod 775 -R <strong>example</strong></pre>\n<ul><li>set permission the folder <strong>example/storage</strong> to <strong>777</strong>\n</li></ul>\n<pre>sudo chmod 777 -R <strong>example/storage</strong></pre>\n<ul><li>go inside your folder</li></ul>\n<pre>cd example</pre>\n<ul><li>refresh vendor folder</li></ul>\n<pre>composer install</pre>\n<ul><li>setup .env</li></ul>\n<pre>cp .env.example .env</pre>\n<ul><li>set key</li></ul>\n<pre>php artisan key:generate</pre>\n<p>change owner</p>\n<pre>sudo chown -R www-data.www-data storage<br>sudo chown -R www-data.www-data bootstrap/cache</pre>\n<h3>Phase 3.1 : How to setup Nginx Server block for laravel …</h3>\n<ul><li>สร้างไฟล์ /etc/nginx/sites-available/<strong>example </strong>ด้วย nano editor</li></ul>\n<pre>nano /etc/nginx/sites-available/<strong>example.com</strong></pre>\n<ul><li>edit with the path of your project [for laravel only]</li></ul>\n<pre>server {<br>    listen 80;<br>    server_name <strong>example.com www.example.com</strong>;<br>    root /var/www/<strong>example.com</strong>/<strong>example</strong>/public;</pre>\n<pre>    add_header X-Frame-Options \"SAMEORIGIN\";<br>    add_header X-XSS-Protection \"1; mode=block\";<br>    add_header X-Content-Type-Options \"nosniff\";</pre>\n<pre>    index index.html index.htm index.php;</pre>\n<pre>    charset utf-8;</pre>\n<pre>    location / {<br>        try_files $uri $uri/ /index.php?$query_string;<br>    }</pre>\n<pre>    location = /favicon.ico { access_log off; log_not_found off; }<br>    location = /robots.txt  { access_log off; log_not_found off; }</pre>\n<pre>    error_page 404 /index.php;</pre>\n<pre>    location ~ \\.php$ {<br>        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;<br>        fastcgi_index index.php;<br>        fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;<br>        include fastcgi_params;<br>    }</pre>\n<pre>    location ~ /\\.(?!well-known).* {<br>        deny all;<br>    }<br>}</pre>\n<ul><li>activate the host</li></ul>\n<pre>sudo ln -s /etc/nginx/sites-available/<strong>example.com </strong>/etc/nginx/sites-enabled/<strong>example.com</strong></pre>\n<ul><li>ตรวจสอบว่า nginx ของคุณทำงานได้</li></ul>\n<pre><strong>sudo nginx -t</strong></pre>\n<pre>//OUTPUT<br>Outputnginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is <strong>successful</strong></pre>\n<ul>\n<li>หากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่</li>\n<li>restart nginx</li>\n</ul>\n<pre>sudo service nginx restart</pre>\n<p>Run browser <a href=\"http://server_domain_or_ip/\">http://</a>example.com</p>\n<h3>Phase 3.2 : How to setup Nginx Server block for node applacation with proxy reverse…</h3>\n<p>ก่อนที่จะทำ server block เช็คสักนิดนึงว่า Application ของคุณรันได้</p>\n<p>ติดตั้ง pm2 และ serve</p>\n<pre>yarn global add pm2<br>yarn global add serve</pre>\n<p>run build in your project folder and run (for reactjs)</p>\n<pre>yarn run build<br>pm2 serve build 3000 --spa</pre>\n<p>หรือบาง app ก็รันแบบนี้ (for node application)</p>\n<pre>pm2 start backend/server.js</pre>\n<p>หรือบาง app ก็รันแบบนี้ (for nextjs) เปลี่ยนชื่อเอาเองนะ</p>\n<pre>pm2 start yarn --name \"<strong>nextjs</strong>\" --interpreter bash -- start</pre>\n<p>SAVE list นี้ในกรณีที่ไฟดับจะได้ start auto</p>\n<pre>pm2 save</pre>\n<p>เช็คว่ามีอะไรรันอยู่</p>\n<pre>pm2 list</pre>\n<p>delete ที่ไม่ต้องการ</p>\n<pre>pm2 delete &lt;process&gt;</pre>\n<p>เช็คว่า app ของคุณรันได้</p>\n<pre>curl http://localhost:3000</pre>\n<p>step ต่อจากนี้เป็นการทำ server block</p>\n<ul><li>สร้างไฟล์ /etc/nginx/sites-available/<strong>example </strong>ด้วย nano editor</li></ul>\n<pre>nano /etc/nginx/sites-available/<strong>example.com</strong></pre>\n<ul><li>edit with the path of your project [for node applacation with proxy reverse…]</li></ul>\n<pre>server {<br>    listen 80;<br>    server_name <strong>example.com </strong><a href=\"http://www.example.com;/\"><strong>www.example.com</strong>;</a></pre>\n<pre>    charset utf-8;</pre>\n<pre>    location / {<br>        proxy_pass <a href=\"http://localhost:3000/\"><strong>http://localhost:3000</strong></a><strong>;</strong><br>        proxy_http_version 1.1;<br>        proxy_set_header Upgrade $http_upgrade;<br>        proxy_set_header Connection 'upgrade';<br>        proxy_set_header Host $host;<br>        proxy_cache_bypass $http_upgrade;<br>    }<br>}</pre>\n<ul><li>activate the host</li></ul>\n<pre>sudo ln -s /etc/nginx/sites-available/<strong>example.com </strong>/etc/nginx/sites-enabled/</pre>\n<ul><li>ตรวจสอบว่า nginx ของคุณทำงานได้</li></ul>\n<pre><strong>sudo nginx -t</strong></pre>\n<pre>//OUTPUT<br>Outputnginx: the configuration file /etc/nginx/nginx.conf syntax is ok<br>nginx: configuration file /etc/nginx/nginx.conf test is <strong>successful</strong></pre>\n<ul>\n<li>หากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่</li>\n<li>restart nginx</li>\n</ul>\n<pre>sudo service nginx restart</pre>\n<p>Run browser <a href=\"http://server_domain_or_ip/\">http://</a>example.com</p>\n<h3>Phase 4 ติดตั้ง phpmyadmin</h3>\n<p>install</p>\n<pre>sudo apt update<br>sudo apt install phpmyadmin</pre>\n<p>ในระหว่างขั้นตอนการติดตั้ง phpMyAdmin คุณจะได้รับแจ้งให้เลือกเว็บเซิร์ฟเวอร์ (Apache หรือ Lighttpd) อย่างไรก็ตามเนื่องจากคุณใช้ Nginx เป็นเว็บเซิร์ฟเวอร์คุณจึงไม่ควรเลือกตัวเลือกเหล่านี้ ให้กด TAB เพื่อไฮไลต์ &lt;Ok&gt; จากนั้นกด ENTER เพื่อดำเนินการติดตั้งต่อ</p>\n<p>จากนั้นคุณจะได้รับแจ้งว่าจะใช้ dbconfig-common ในการกำหนดค่าฐานข้อมูลแอปพลิเคชันหรือไม่ เลือก : &lt;ใช่&gt;</p>\n<p>เมื่อติดตั้ง phpmyadmin จะยังใช้ไม่ได้จนว่าจะทำ symbolic link</p>\n<pre>#access phpmyadmin with IP<br>sudo ln -s /usr/share/phpmyadmin /var/www/<strong>html</strong>/phpmyadmin</pre>\n<pre>หรือ</pre>\n<pre>#access phpmyadmin with your larvel domain<br>sudo ln -s /usr/share/phpmyadmin /var/www/<strong>example.com/example/public/</strong>phpmyadmin</pre>\n<p>Run</p>\n<pre><a href=\"https://server_domain_or_ip/phpmyadmin\">https://your_IP/phpmyadmin</a></pre>\n<pre><a href=\"https://server_domain_or_ip/phpmyadmin\">https://server_domain/phpmyadmin</a><br></pre>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/456/0*wwH0NLUNgimAdjhg.png\"></figure><h3>Phase 5 : Adjusting User Authentication and Privileges</h3>\n<p>เข้า Mysql</p>\n<pre>sudo mysql</pre>\n<p>เปลี่ยนแปลง root</p>\n<pre>ALTER USER '<strong>root</strong>'@'localhost' IDENTIFIED WITH <strong>mysql_native_password </strong>BY '<strong>password</strong>';</pre>\n<p>เพิ่ม user</p>\n<pre>CREATE USER '<strong>sammy</strong>'@'localhost' IDENTIFIED WITH <strong>mysql_native_password </strong>BY <strong>'password'</strong>;</pre>\n<pre>หรือ</pre>\n<pre>CREATE USER '<strong>sammy</strong>'@'%' IDENTIFIED WITH <strong>mysql_native_password </strong>BY <strong>'password'</strong>;</pre>\n<p>มอบอำนาจให้หมดเลย ได้แก่ จัดการ user , จัดการ DB, จัดการ table , ฯลฯ</p>\n<pre>GRANT ALL PRIVILEGES ON *.* TO 'sammy'@'localhost' WITH GRANT OPTION;</pre>\n<p>ระบุตารางให้แก่บางคน</p>\n<pre>GRANT USAGE ON *.* TO '<strong>sammy</strong>'@'%';<br>ALTER USER '<strong>sammy</strong>'@'%' REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;<br>GRANT ALL PRIVILEGES ON `<strong>db_name</strong>`.* TO '<strong>sammy</strong>'@'%';</pre>\n<p>That’s all</p>\n<h3>อ้างอิง</h3>\n<h4>ติดตั้งแบบพื้นฐาน</h4>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-laravel-with-nginx-on-ubuntu-20-04\">How To Install and Configure Laravel with Nginx on Ubuntu 20.04 (LEMP) | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-with-nginx-on-an-ubuntu-20-04-server\">How To Install and Secure phpMyAdmin with Nginx on an Ubuntu 20.04 Server | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-20-04\">How To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOcean</a></li>\n</ul>\n<h4>วิธีติดตั้ง SSL ด้วย Let’s Encrypt on Ubuntu 20</h4>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04\">How To Secure Nginx with Let's Encrypt on Ubuntu 20.04 | DigitalOcean</a></p>\n<h4>Server block</h4>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-20-04\">How To Set Up a Node.js Application for Production on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-deploy-a-react-application-with-nginx-on-ubuntu-20-04\">How To Deploy a React Application with Nginx on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://devahoy.com/blog/2019/08/how-to-setup-nodejs-and-react-with-nginx-and-pm2/\">Devahoy | วิธีการ Setup Server สำหรับ Node.js และ React ด้วย NGINX</a></li>\n</ul>\n<h4>Check DSN</h4>\n<p><a href=\"https://www.digitalocean.com/community/tools/dns\">DNS Lookup | DigitalOcean</a></p>\n<h4>Setup Google Mail</h4>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-gmail-with-your-domain-on-digitalocean\">How To Set Up Gmail with Your Domain on DigitalOcean | DigitalOcean</a></p>\n<h4>Create User</h4>\n<ul>\n<li><a href=\"http://mirrors.tripadvisor.com/centos-vault/4.6/docs/html/rhel-sbs-en-4/s1-starting-create-account.html\">Creating a User Account</a></li>\n<li><a href=\"https://www.cyberciti.biz/faq/create-a-user-account-on-ubuntu-linux/\">StackPath</a></li>\n</ul>\n<pre>cut -d: -f1 /etc/passwd</pre>\n<h4>Crontab</h4>\n<p><a href=\"https://tecadmin.net/crontab-in-linux-with-20-examples-of-cron-schedule/\">Crontab in Linux with 20 Useful Examples to Schedule Jobs - TecAdmin</a></p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=8cd0d51c09c8\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/digitalocean-setup-nginx-ubuntu-20-04-phpmyadmin-ssl-8cd0d51c09c8\">DigitalOcean Setup Nginx Ubuntu 20.04 + PHPMYADMIN + SSL</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "nginx",
                "ubuntu-server",
                "phpmyadmin",
                "digitalocean",
                "lemp"
            ]
        },
        {
            "title": "Ubuntu Server",
            "pubDate": "2021-01-13 10:58:15",
            "link": "https://medium.com/ckartisan/ubuntu-server-c6f394fa4e8d?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/c6f394fa4e8d",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*QbPCMt8T-1GrquNHSHIFfg.jpeg",
            "description": "\n<h3>Ubuntu Server and LAMP + PHPMyAdmin</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*QbPCMt8T-1GrquNHSHIFfg.jpeg\"></figure><p>รวบรวมเกี่ยวกับ Config ของ Ubuntu Server and LAMP + PHPMyAdmin</p>\n<h3>Reference</h3>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-20-04\">How To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-20-04\">How To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://serverpilot.io/docs/how-to-downgrade-to-composer-version-1/\">How to Downgrade Composer to Version 1</a></li>\n<li><a href=\"https://www.howtoforge.com/tutorial/install-laravel-on-ubuntu-for-apache/\">How to Install Laravel PHP Web Framework on Ubuntu 20.04</a></li>\n<li><a href=\"https://phoenixnap.com/kb/mysql-remote-connection\">How to Allow Remote MySQL Connections</a></li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c6f394fa4e8d\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/ubuntu-server-c6f394fa4e8d\">Ubuntu Server</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<h3>Ubuntu Server and LAMP + PHPMyAdmin</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*QbPCMt8T-1GrquNHSHIFfg.jpeg\"></figure><p>รวบรวมเกี่ยวกับ Config ของ Ubuntu Server and LAMP + PHPMyAdmin</p>\n<h3>Reference</h3>\n<ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-20-04\">How To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-20-04\">How To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOcean</a></li>\n<li><a href=\"https://serverpilot.io/docs/how-to-downgrade-to-composer-version-1/\">How to Downgrade Composer to Version 1</a></li>\n<li><a href=\"https://www.howtoforge.com/tutorial/install-laravel-on-ubuntu-for-apache/\">How to Install Laravel PHP Web Framework on Ubuntu 20.04</a></li>\n<li><a href=\"https://phoenixnap.com/kb/mysql-remote-connection\">How to Allow Remote MySQL Connections</a></li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c6f394fa4e8d\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/ubuntu-server-c6f394fa4e8d\">Ubuntu Server</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "ubuntu-server"
            ]
        },
        {
            "title": "ระบบกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์ ด้วย Laravel + Using Fetch (no jquery)",
            "pubDate": "2021-01-08 09:10:49",
            "link": "https://medium.com/ckartisan/%E0%B8%A3%E0%B8%B0%E0%B8%9A%E0%B8%9A%E0%B8%81%E0%B8%A3%E0%B8%AD%E0%B8%81%E0%B8%88%E0%B8%B1%E0%B8%87%E0%B8%AB%E0%B8%A7%E0%B8%B1%E0%B8%94-%E0%B8%AD%E0%B8%B3%E0%B9%80%E0%B8%A0%E0%B8%AD-%E0%B8%95%E0%B8%B3%E0%B8%9A%E0%B8%A5-%E0%B8%A3%E0%B8%AB%E0%B8%B1%E0%B8%AA%E0%B9%84%E0%B8%9B%E0%B8%A3%E0%B8%A9%E0%B8%93%E0%B8%B5%E0%B8%A2%E0%B9%8C-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-laravel-using-fetch-no-jquery-bb2643a8fe7a?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/bb2643a8fe7a",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/823/1*OXRqP7vdRp5R6zeB5B9V8A.png",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/823/1*OXRqP7vdRp5R6zeB5B9V8A.png\"></figure><p>จากบทความเก่าที่เคยแนะนำวิธีกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์แบบใช้ Jquery ไปแล้ว คราวนี้จะแนะนำวิธีที่ไม่ใช้ Jquery บ้าง และก็ยกเลิกการใช้ code ของจังหวัด อำเภอ ตำบล แต่จะใช้ชื่อตรงๆ เลย ซึ่งจะดูตรงไปตรงมากว่ามาก โดยระบบที่ทำเป็นตัวอย่างให้ดูนี้ใช ้Javascript Fetch เรียก API จาก Server ซึ่ง Fetch เป็นฟังก์ชันที่ไม่ต้องติดตั้งอะไรเพิ่มเพราะเป็น Library พื้นฐาน ในส่วนของ Server ก็ใช้ PHP Laravel เป็น Server สแตนบายรอการเรียกข้อมูล โดย quey ข้อมูลจาก MySQL</p>\n<h3>Demo</h3>\n<p>ตัวอย่างดูได้ที่นี่</p>\n<p><a href=\"https://laravelck.herokuapp.com/tambon\">https://laravelck.herokuapp.com/tambon</a></p>\n<p><a href=\"http://laravel-project.ckartisan.com/tambon\">ระบบกรอกที่อยู่ไทย จังหวัด อำเภอ ตำบล รหัสไปรษณีย์</a></p>\n<h3>Data</h3>\n<p>หลักๆ คือ มีข้อมูลต่างๆ ครบเลย ได้แก่</p>\n<ul>\n<li>7,493 ตำบล</li>\n<li>928 อำเภอ</li>\n<li>77 จังหวัด</li>\n<li>970 รหัสไปรษณีย์</li>\n</ul>\n<h4>ต้นฉบับข้อมูล ตำบล อำเภอ จังหวัด มาจาก JSON ไฟล์</h4>\n<p>สำหรับฐานข้อมูลก็ได้มาจากไฟล์ JSON นี้เลย <a href=\"https://github.com/earthchie/jquery.Thailand.js/blob/master/jquery.Thailand.js/database/raw_database/raw_database.json\">raw_database.json</a></p>\n<h4>SQL database ก็มีนะ</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/665/1*IdeqGo2APFo3WR47FAibXw.png\"></figure><p>ข้อมูลตำบล ในประเทศไทยหน้าตาประมาณนี้ี้ ใน version เก่า คอลัมน์ ตำบล จะใช้ชื่ออื่น แต่ version ทับศัพท์ไปเลยว่า ตำบลจะได้ไม่งง</p>\n<p>แต่สำหรับใครที่ใช้ SQL อยู่ถ้าอยากได้ไฟล์ SQL ก็มาโหลดตรงๆ ได้เลยที่นี่ <a href=\"https://github.com/arc6828/laravel_project/blob/master/sql/tambons.sql\">tambons.sql</a> ซึ่งแปลงมาจากไฟล์นี้ <a href=\"https://github.com/earthchie/jquery.Thailand.js/blob/master/jquery.Thailand.js/database/raw_database/raw_database.json\">raw_database.json</a></p>\n<h3>Case 1 : Query from DB</h3>\n<h4>Backend + Restful API (PHP Laravel)</h4>\n<ul><li>สร้าง Model : Tambon พร้อมกับไฟล์ Migration</li></ul>\n<pre>php artisan make:model <strong>Tambon -m</strong></pre>\n<ul><li>เติมไฟล์ migration</li></ul>\n<pre>...<br>public function up()<br>{<br>    Schema::create('tambons', function (Blueprint $table) {<br>        $table-&gt;id();<br>        $table-&gt;timestamps();<br><br><strong>$table-&gt;string('tambon')-&gt;nullable();            <br>        $table-&gt;string('amphoe')-&gt;nullable();            <br>        $table-&gt;string('province')-&gt;nullable();            <br>        $table-&gt;string('zipcode')-&gt;nullable();<br>        $table-&gt;string('tambon_code')-&gt;nullable();<br>        $table-&gt;string('amphoe_code')-&gt;nullable();<br>        $table-&gt;string('province_code')-&gt;nullable();</strong><br>    });<br>}<br>...</pre>\n<ul><li>save ไฟล์ Migration (โปรดระวัง อย่าลืม) และ Migrate</li></ul>\n<pre>php artisan migrate</pre>\n<ul>\n<li>ใส่ข้อมูล SQL (เอามาเฉพาะ Insert into … ก็พอ) ลงไปใน Database ดู โค้ดก็ไปเอามาจากนี่ <a href=\"https://github.com/arc6828/laravel_project/blob/master/sql/tambons.sql\">tambons.sql</a>\n</li>\n<li>สร้าง Controller สำหรับ API</li>\n</ul>\n<pre>php artisan make:controller API\\<strong>TambonController</strong></pre>\n<ul><li>เพิ่มโค้ดใน <strong>API\\TambonController</strong>\n</li></ul>\n<pre>&lt;?php</pre>\n<pre><strong>namespace </strong>App\\Http\\Controllers\\API;</pre>\n<pre><strong>use </strong>Illuminate\\Http\\Request;<br><strong>use </strong>App\\Http\\Controllers\\Controller;<br><strong>use App\\Models\\Tambon;</strong></pre>\n<pre><strong>class </strong>TambonController <strong>extends </strong>Controller<br>{</pre>\n<pre>    public function getProvinces()<br>    {<br>        $provinces = Tambon::select('province')<br>            -&gt;distinct()<br>            -&gt;get();<br>        return $provinces;<br>    }<br>    public function getAmphoes(Request $request)<br>    {<br>        $province = $request-&gt;get('province');<br>        $amphoes = Tambon::select('amphoe')<br>            -&gt;where('province', 'like', \"%$province%\")<br>            -&gt;distinct()<br>            -&gt;get();<br>        return $amphoes;<br>    }<br>    public function getTambons(Request $request)<br>    {<br>        $province = $request-&gt;get('province');<br>        $amphoe = $request-&gt;get('amphoe');<br>        $tambons = Tambon::select('tambon')<br>            -&gt;where('province', 'like', \"%$province%\")<br>            -&gt;where('amphoe', 'like', \"%$amphoe%\")<br>            -&gt;distinct()<br>            -&gt;get();<br>        return $tambons;<br>    }<br>    public function getZipcodes(Request $request)<br>    {<br>        $province = $request-&gt;get('province');<br>        $amphoe = $request-&gt;get('amphoe');<br>        $tambon = $request-&gt;get('tambon');<br>        $zipcodes = Tambon::select('zipcode')<br>            -&gt;where('province', $province)<br>            -&gt;where('amphoe', $amphoe)<br>            -&gt;where('tambon', $tambon)<br>            -&gt;get();<br>        return $zipcodes;<br>    }<br>}</pre>\n<ul><li>routes/api.php (สำหรับ laravel 7)</li></ul>\n<pre>Route::get('/provinces','API\\TambonController@getProvinces');</pre>\n<pre>Route::get('/amphoes','API\\TambonController@getAmphoes');</pre>\n<pre>Route::get('/tambons','API\\TambonController@getTambons');</pre>\n<pre>Route::get('/zipcodes','API\\TambonController@getZipcodes');</pre>\n<ul><li>routes/api.php (สำหรับ laravel 8)</li></ul>\n<pre><strong>use App\\Http\\Controllers\\API\\TambonController;</strong><br>...</pre>\n<pre><strong>Route::get('/provinces', [ TambonController::class , 'getProvinces' ]);</strong></pre>\n<pre><strong>Route::get('/amphoes', [TambonController::class , 'getAmphoes' ]);</strong></pre>\n<pre><strong>Route::get('/tambons', [ TambonController::class , 'getTambons' ]);</strong></pre>\n<pre><strong>Route::get('/zipcodes', [TambonController::class, 'getZipcodes'] );</strong></pre>\n<ul><li>routes/web.php</li></ul>\n<pre>Route::get('/tambon', function () {<br>    $provinces = Tambon::select('province')-&gt;distinct()-&gt;get();<br>    $amphoes = Tambon::select('amphoe')-&gt;distinct()-&gt;get();<br>    $tambons = Tambon::select('tambon')-&gt;distinct()-&gt;get();<br>    return view(\"tambon/index\", compact('provinces','amphoes','tambons'));<br>});</pre>\n<h4>Frontend (PHP + BLADE + HTML)</h4>\n<ul>\n<li>สร้าง View : tambon/index.blade.php (แค่สร้างโฟลเดอร์และไฟล์)</li>\n<li>ใส่ HTML ลงไป</li>\n</ul>\n<pre>&lt;div&gt;<br>    &lt;select id=\"input_province\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกจังหวัด&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($provinces as $item)<br>        &lt;option value=\"{{ $item-&gt;province }}\"&gt;{{ $item-&gt;province }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_amphoe\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($amphoes as $item)<br>        &lt;option value=\"{{ $item-&gt;amphoe }}\"&gt;{{ $item-&gt;amphoe }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_tambon\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($tambons as $item)<br>        &lt;option value=\"{{ $item-&gt;tambon }}\"&gt;{{ $item-&gt;tambon }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;input id=\"input_zipcode\" placeholder=\"รหัสไปรษณีย์\" /&gt;<br>&lt;/div&gt;</pre>\n<ul><li>ใส่ Javascript</li></ul>\n<pre>&lt;script&gt;   <br>    function showAmphoes() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let url = \"{{ url('/api/amphoes') }}?province=\" + input_province.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_amphoe = document.querySelector(\"#input_amphoe\");<br>                input_amphoe.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item.amphoe;<br>                    option.value = item.amphoe;<br>                    input_amphoe.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showTambons();<br>            });<br>    }</pre>\n<pre>function showTambons() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let url = \"{{ url('/api/tambons') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value;<br>        console.log(url);        <br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_tambon = document.querySelector(\"#input_tambon\");<br>                input_tambon.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item.tambon;<br>                    option.value = item.tambon;<br>                    input_tambon.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showZipcode();<br>            });<br>    }</pre>\n<pre>function showZipcode() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let input_tambon = document.querySelector(\"#input_tambon\");<br>        let url = \"{{ url('/api/zipcodes') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value + \"&amp;tambon=\" + input_tambon.value;<br>        console.log(url);        <br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;     <br>        // if(input_tambon.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_zipcode = document.querySelector(\"#input_zipcode\");<br>                input_zipcode.value = \"\";<br>                for (let item of result) {<br>                    input_zipcode.value = item.zipcode;<br>                    break;<br>                }<br>            });</pre>\n<pre>}</pre>\n<pre>//EVENTS<br>    document.querySelector('#input_province').addEventListener('change', (event) =&gt; {<br>        showAmphoes();<br>    });<br>    document.querySelector('#input_amphoe').addEventListener('change', (event) =&gt; {<br>        showTambons();<br>    });<br>    document.querySelector('#input_tambon').addEventListener('change', (event) =&gt; {<br>        showZipcode();<br>    });<br>&lt;/script&gt;</pre>\n<h4>Run</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/957/1*30SYZaLYYQuBsujBjPaC0A.png\"></figure><h3>Case 2 : Use just Static file json + Restful API (no database)</h3>\n<h4>ไฟล์ json</h4>\n<p>สำหรับฐานข้อมูลก็ได้มาจากไฟล์ JSON นี้เลย <a href=\"https://github.com/earthchie/jquery.Thailand.js/blob/master/jquery.Thailand.js/database/raw_database/raw_database.json\">raw_database.json</a> นำไฟล์ .json ต่อไปนี้ “<strong>ใส่ไปในโฟลเดอร์ public”</strong></p>\n<h4>routes/api.php</h4>\n<pre><strong>use App\\Http\\Controllers\\API\\TambonController;</strong><br>...</pre>\n<pre><strong>Route::get('/provinces', [ TambonController::class , 'getProvinces' ]);</strong></pre>\n<pre><strong>Route::get('/amphoes', [TambonController::class , 'getAmphoes' ]);</strong></pre>\n<pre><strong>Route::get('/tambons', [ TambonController::class , 'getTambons' ]);</strong></pre>\n<pre><strong>Route::get('/zipcodes', [TambonController::class, 'getZipcodes'] );</strong></pre>\n<h4>controller</h4>\n<ul><li>สร้างไฟล์ controller</li></ul>\n<pre>php artisan make:controller API\\<strong>TambonController</strong></pre>\n<ul><li>เขียนโค้ดใน API\\TambonController.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Http\\Controllers\\API;</pre>\n<pre>use App\\Http\\Controllers\\Controller;<br>use Illuminate\\Http\\Request;</pre>\n<pre>class TambonController extends Controller<br>{<br><br><strong>public $data;</strong></pre>\n<pre><strong>public function __construct()<br>    {<br>        $path = url('/raw_database.json');<br>        $this-&gt;data = json_decode(file_get_contents($path), false);<br>    }</strong></pre>\n<pre><strong>public function getProvinces()<br>    {<br>        $data = $this-&gt;data;<br>        $provinces = array_map(function ($item) {<br>            return $item-&gt;province;<br>        }, $data);<br>        $provinces = array_unique($provinces);<br>        $provinces = array_values($provinces);<br>        return $provinces;<br>    }<br>    public function getAmphoes(Request $request)<br>    {<br>        $data = $this-&gt;data;<br>        $amphoes = array_filter($data, function ($item) use ($request) {<br>            return $item-&gt;province == $request-&gt;get('province');<br>        });<br>        $amphoes = array_map(function ($item) {<br>            return $item-&gt;amphoe;<br>        }, $amphoes);<br>        $amphoes = array_unique($amphoes);        <br>        $amphoes = array_values($amphoes);<br>        return $amphoes;<br>    }<br>    public function getTambons(Request $request)<br>    {<br>        $data = $this-&gt;data;<br>        $districts = array_filter($data, function ($item) use ($request) {<br>            return $item-&gt;amphoe == $request-&gt;get('amphoe') &amp;&amp; $item-&gt;province == $request-&gt;get('province');<br>        });<br>        $districts = array_map(function ($item) {<br>            return $item-&gt;district;<br>        }, $districts);<br>        $districts = array_unique($districts);  <br>        $districts = array_values($districts);<br>        return $districts;<br>    }<br>    public function getZipcodes(Request $request)<br>    {<br>        $data = $this-&gt;data;<br>        $zipcodes = array_filter($data, function ($item) use ($request) {<br>            return $item-&gt;district == $request-&gt;get('tambon') &amp;&amp; $item-&gt;amphoe == $request-&gt;get('amphoe') &amp;&amp; $item-&gt;province == $request-&gt;get('province');<br>        });<br>        $zipcodes = array_map(function ($item) {<br>            return $item-&gt;zipcode;<br>        }, $zipcodes);<br>        $zipcodes = array_values($zipcodes);<br>        return $zipcodes;<br>    }</strong><br>}</pre>\n<ul><li>routes/web.php</li></ul>\n<pre>Route::get('/tambon',function(){<br>    $path = url('/raw_database.json');<br>    $data = json_decode(file_get_contents($path), false);<br>    $provinces = array_map(function ($item) {<br>        return $item-&gt;province;<br>    }, $data);<br>    $provinces = array_unique($provinces);<br>    $provinces = array_values($provinces);<br><br>    $amphoes = [];<br>    $tambons = [];</pre>\n<pre>return view('tambon/index' ,compact('provinces','amphoes','tambons'));<br>});</pre>\n<ul><li>View</li></ul>\n<pre>&lt;head&gt;<br>    &lt;meta charset=\"UTF-8\"&gt;<br>&lt;/head&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_province\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกจังหวัด&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($provinces as $item)<br>        &lt;option value=\"{{ $item }}\"&gt;{{ $item }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_amphoe\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($amphoes as $item)<br>        &lt;option value=\"{{ $item }}\"&gt;{{ $item }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_tambon\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($tambons as $item)<br>        &lt;option value=\"{{ $item }}\"&gt;{{ $item }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;input id=\"input_zipcode\" placeholder=\"รหัสไปรษณีย์\" /&gt;<br>&lt;/div&gt;</pre>\n<pre>&lt;script&gt;<br>    function showAmphoes() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let url = \"{{ url('/api/amphoes') }}?province=\" + input_province.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_amphoe = document.querySelector(\"#input_amphoe\");<br>                input_amphoe.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item;<br>                    option.value = item;<br>                    input_amphoe.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showTambons();<br>            });<br>    }</pre>\n<pre>function showTambons() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let url = \"{{ url('/api/tambons') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_tambon = document.querySelector(\"#input_tambon\");<br>                input_tambon.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item;<br>                    option.value = item;<br>                    input_tambon.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showZipcode();<br>            });<br>    }</pre>\n<pre>function showZipcode() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let input_tambon = document.querySelector(\"#input_tambon\");<br>        let url = \"{{ url('/api/zipcodes') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value + \"&amp;tambon=\" + input_tambon.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;     <br>        // if(input_tambon.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_zipcode = document.querySelector(\"#input_zipcode\");<br>                input_zipcode.value = \"\";<br>                for (let item of result) {<br>                    input_zipcode.value = item;<br>                    break;<br>                }<br>            });<br>    }<br>    //EVENTS<br>    document.querySelector('#input_province').addEventListener('change', (event) =&gt; {<br>        showAmphoes();<br>    });<br>    document.querySelector('#input_amphoe').addEventListener('change', (event) =&gt; {<br>        showTambons();<br>    });<br>    document.querySelector('#input_tambon').addEventListener('change', (event) =&gt; {<br>        showZipcode();<br>    });<br>&lt;/script&gt;</pre>\n<h3>Case 3 : Use just Static file json + Laravel Livewire (no database)</h3>\n<p>Good Luck+++</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=bb2643a8fe7a\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/%E0%B8%A3%E0%B8%B0%E0%B8%9A%E0%B8%9A%E0%B8%81%E0%B8%A3%E0%B8%AD%E0%B8%81%E0%B8%88%E0%B8%B1%E0%B8%87%E0%B8%AB%E0%B8%A7%E0%B8%B1%E0%B8%94-%E0%B8%AD%E0%B8%B3%E0%B9%80%E0%B8%A0%E0%B8%AD-%E0%B8%95%E0%B8%B3%E0%B8%9A%E0%B8%A5-%E0%B8%A3%E0%B8%AB%E0%B8%B1%E0%B8%AA%E0%B9%84%E0%B8%9B%E0%B8%A3%E0%B8%A9%E0%B8%93%E0%B8%B5%E0%B8%A2%E0%B9%8C-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-laravel-using-fetch-no-jquery-bb2643a8fe7a\">ระบบกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์ ด้วย Laravel + Using Fetch (no jquery)</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/823/1*OXRqP7vdRp5R6zeB5B9V8A.png\"></figure><p>จากบทความเก่าที่เคยแนะนำวิธีกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์แบบใช้ Jquery ไปแล้ว คราวนี้จะแนะนำวิธีที่ไม่ใช้ Jquery บ้าง และก็ยกเลิกการใช้ code ของจังหวัด อำเภอ ตำบล แต่จะใช้ชื่อตรงๆ เลย ซึ่งจะดูตรงไปตรงมากว่ามาก โดยระบบที่ทำเป็นตัวอย่างให้ดูนี้ใช ้Javascript Fetch เรียก API จาก Server ซึ่ง Fetch เป็นฟังก์ชันที่ไม่ต้องติดตั้งอะไรเพิ่มเพราะเป็น Library พื้นฐาน ในส่วนของ Server ก็ใช้ PHP Laravel เป็น Server สแตนบายรอการเรียกข้อมูล โดย quey ข้อมูลจาก MySQL</p>\n<h3>Demo</h3>\n<p>ตัวอย่างดูได้ที่นี่</p>\n<p><a href=\"https://laravelck.herokuapp.com/tambon\">https://laravelck.herokuapp.com/tambon</a></p>\n<p><a href=\"http://laravel-project.ckartisan.com/tambon\">ระบบกรอกที่อยู่ไทย จังหวัด อำเภอ ตำบล รหัสไปรษณีย์</a></p>\n<h3>Data</h3>\n<p>หลักๆ คือ มีข้อมูลต่างๆ ครบเลย ได้แก่</p>\n<ul>\n<li>7,493 ตำบล</li>\n<li>928 อำเภอ</li>\n<li>77 จังหวัด</li>\n<li>970 รหัสไปรษณีย์</li>\n</ul>\n<h4>ต้นฉบับข้อมูล ตำบล อำเภอ จังหวัด มาจาก JSON ไฟล์</h4>\n<p>สำหรับฐานข้อมูลก็ได้มาจากไฟล์ JSON นี้เลย <a href=\"https://github.com/earthchie/jquery.Thailand.js/blob/master/jquery.Thailand.js/database/raw_database/raw_database.json\">raw_database.json</a></p>\n<h4>SQL database ก็มีนะ</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/665/1*IdeqGo2APFo3WR47FAibXw.png\"></figure><p>ข้อมูลตำบล ในประเทศไทยหน้าตาประมาณนี้ี้ ใน version เก่า คอลัมน์ ตำบล จะใช้ชื่ออื่น แต่ version ทับศัพท์ไปเลยว่า ตำบลจะได้ไม่งง</p>\n<p>แต่สำหรับใครที่ใช้ SQL อยู่ถ้าอยากได้ไฟล์ SQL ก็มาโหลดตรงๆ ได้เลยที่นี่ <a href=\"https://github.com/arc6828/laravel_project/blob/master/sql/tambons.sql\">tambons.sql</a> ซึ่งแปลงมาจากไฟล์นี้ <a href=\"https://github.com/earthchie/jquery.Thailand.js/blob/master/jquery.Thailand.js/database/raw_database/raw_database.json\">raw_database.json</a></p>\n<h3>Case 1 : Query from DB</h3>\n<h4>Backend + Restful API (PHP Laravel)</h4>\n<ul><li>สร้าง Model : Tambon พร้อมกับไฟล์ Migration</li></ul>\n<pre>php artisan make:model <strong>Tambon -m</strong></pre>\n<ul><li>เติมไฟล์ migration</li></ul>\n<pre>...<br>public function up()<br>{<br>    Schema::create('tambons', function (Blueprint $table) {<br>        $table-&gt;id();<br>        $table-&gt;timestamps();<br><br><strong>$table-&gt;string('tambon')-&gt;nullable();            <br>        $table-&gt;string('amphoe')-&gt;nullable();            <br>        $table-&gt;string('province')-&gt;nullable();            <br>        $table-&gt;string('zipcode')-&gt;nullable();<br>        $table-&gt;string('tambon_code')-&gt;nullable();<br>        $table-&gt;string('amphoe_code')-&gt;nullable();<br>        $table-&gt;string('province_code')-&gt;nullable();</strong><br>    });<br>}<br>...</pre>\n<ul><li>save ไฟล์ Migration (โปรดระวัง อย่าลืม) และ Migrate</li></ul>\n<pre>php artisan migrate</pre>\n<ul>\n<li>ใส่ข้อมูล SQL (เอามาเฉพาะ Insert into … ก็พอ) ลงไปใน Database ดู โค้ดก็ไปเอามาจากนี่ <a href=\"https://github.com/arc6828/laravel_project/blob/master/sql/tambons.sql\">tambons.sql</a>\n</li>\n<li>สร้าง Controller สำหรับ API</li>\n</ul>\n<pre>php artisan make:controller API\\<strong>TambonController</strong></pre>\n<ul><li>เพิ่มโค้ดใน <strong>API\\TambonController</strong>\n</li></ul>\n<pre>&lt;?php</pre>\n<pre><strong>namespace </strong>App\\Http\\Controllers\\API;</pre>\n<pre><strong>use </strong>Illuminate\\Http\\Request;<br><strong>use </strong>App\\Http\\Controllers\\Controller;<br><strong>use App\\Models\\Tambon;</strong></pre>\n<pre><strong>class </strong>TambonController <strong>extends </strong>Controller<br>{</pre>\n<pre>    public function getProvinces()<br>    {<br>        $provinces = Tambon::select('province')<br>            -&gt;distinct()<br>            -&gt;get();<br>        return $provinces;<br>    }<br>    public function getAmphoes(Request $request)<br>    {<br>        $province = $request-&gt;get('province');<br>        $amphoes = Tambon::select('amphoe')<br>            -&gt;where('province', 'like', \"%$province%\")<br>            -&gt;distinct()<br>            -&gt;get();<br>        return $amphoes;<br>    }<br>    public function getTambons(Request $request)<br>    {<br>        $province = $request-&gt;get('province');<br>        $amphoe = $request-&gt;get('amphoe');<br>        $tambons = Tambon::select('tambon')<br>            -&gt;where('province', 'like', \"%$province%\")<br>            -&gt;where('amphoe', 'like', \"%$amphoe%\")<br>            -&gt;distinct()<br>            -&gt;get();<br>        return $tambons;<br>    }<br>    public function getZipcodes(Request $request)<br>    {<br>        $province = $request-&gt;get('province');<br>        $amphoe = $request-&gt;get('amphoe');<br>        $tambon = $request-&gt;get('tambon');<br>        $zipcodes = Tambon::select('zipcode')<br>            -&gt;where('province', $province)<br>            -&gt;where('amphoe', $amphoe)<br>            -&gt;where('tambon', $tambon)<br>            -&gt;get();<br>        return $zipcodes;<br>    }<br>}</pre>\n<ul><li>routes/api.php (สำหรับ laravel 7)</li></ul>\n<pre>Route::get('/provinces','API\\TambonController@getProvinces');</pre>\n<pre>Route::get('/amphoes','API\\TambonController@getAmphoes');</pre>\n<pre>Route::get('/tambons','API\\TambonController@getTambons');</pre>\n<pre>Route::get('/zipcodes','API\\TambonController@getZipcodes');</pre>\n<ul><li>routes/api.php (สำหรับ laravel 8)</li></ul>\n<pre><strong>use App\\Http\\Controllers\\API\\TambonController;</strong><br>...</pre>\n<pre><strong>Route::get('/provinces', [ TambonController::class , 'getProvinces' ]);</strong></pre>\n<pre><strong>Route::get('/amphoes', [TambonController::class , 'getAmphoes' ]);</strong></pre>\n<pre><strong>Route::get('/tambons', [ TambonController::class , 'getTambons' ]);</strong></pre>\n<pre><strong>Route::get('/zipcodes', [TambonController::class, 'getZipcodes'] );</strong></pre>\n<ul><li>routes/web.php</li></ul>\n<pre>Route::get('/tambon', function () {<br>    $provinces = Tambon::select('province')-&gt;distinct()-&gt;get();<br>    $amphoes = Tambon::select('amphoe')-&gt;distinct()-&gt;get();<br>    $tambons = Tambon::select('tambon')-&gt;distinct()-&gt;get();<br>    return view(\"tambon/index\", compact('provinces','amphoes','tambons'));<br>});</pre>\n<h4>Frontend (PHP + BLADE + HTML)</h4>\n<ul>\n<li>สร้าง View : tambon/index.blade.php (แค่สร้างโฟลเดอร์และไฟล์)</li>\n<li>ใส่ HTML ลงไป</li>\n</ul>\n<pre>&lt;div&gt;<br>    &lt;select id=\"input_province\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกจังหวัด&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($provinces as $item)<br>        &lt;option value=\"{{ $item-&gt;province }}\"&gt;{{ $item-&gt;province }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_amphoe\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($amphoes as $item)<br>        &lt;option value=\"{{ $item-&gt;amphoe }}\"&gt;{{ $item-&gt;amphoe }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_tambon\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($tambons as $item)<br>        &lt;option value=\"{{ $item-&gt;tambon }}\"&gt;{{ $item-&gt;tambon }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;input id=\"input_zipcode\" placeholder=\"รหัสไปรษณีย์\" /&gt;<br>&lt;/div&gt;</pre>\n<ul><li>ใส่ Javascript</li></ul>\n<pre>&lt;script&gt;   <br>    function showAmphoes() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let url = \"{{ url('/api/amphoes') }}?province=\" + input_province.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_amphoe = document.querySelector(\"#input_amphoe\");<br>                input_amphoe.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item.amphoe;<br>                    option.value = item.amphoe;<br>                    input_amphoe.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showTambons();<br>            });<br>    }</pre>\n<pre>function showTambons() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let url = \"{{ url('/api/tambons') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value;<br>        console.log(url);        <br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_tambon = document.querySelector(\"#input_tambon\");<br>                input_tambon.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item.tambon;<br>                    option.value = item.tambon;<br>                    input_tambon.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showZipcode();<br>            });<br>    }</pre>\n<pre>function showZipcode() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let input_tambon = document.querySelector(\"#input_tambon\");<br>        let url = \"{{ url('/api/zipcodes') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value + \"&amp;tambon=\" + input_tambon.value;<br>        console.log(url);        <br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;     <br>        // if(input_tambon.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_zipcode = document.querySelector(\"#input_zipcode\");<br>                input_zipcode.value = \"\";<br>                for (let item of result) {<br>                    input_zipcode.value = item.zipcode;<br>                    break;<br>                }<br>            });</pre>\n<pre>}</pre>\n<pre>//EVENTS<br>    document.querySelector('#input_province').addEventListener('change', (event) =&gt; {<br>        showAmphoes();<br>    });<br>    document.querySelector('#input_amphoe').addEventListener('change', (event) =&gt; {<br>        showTambons();<br>    });<br>    document.querySelector('#input_tambon').addEventListener('change', (event) =&gt; {<br>        showZipcode();<br>    });<br>&lt;/script&gt;</pre>\n<h4>Run</h4>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/957/1*30SYZaLYYQuBsujBjPaC0A.png\"></figure><h3>Case 2 : Use just Static file json + Restful API (no database)</h3>\n<h4>ไฟล์ json</h4>\n<p>สำหรับฐานข้อมูลก็ได้มาจากไฟล์ JSON นี้เลย <a href=\"https://github.com/earthchie/jquery.Thailand.js/blob/master/jquery.Thailand.js/database/raw_database/raw_database.json\">raw_database.json</a> นำไฟล์ .json ต่อไปนี้ “<strong>ใส่ไปในโฟลเดอร์ public”</strong></p>\n<h4>routes/api.php</h4>\n<pre><strong>use App\\Http\\Controllers\\API\\TambonController;</strong><br>...</pre>\n<pre><strong>Route::get('/provinces', [ TambonController::class , 'getProvinces' ]);</strong></pre>\n<pre><strong>Route::get('/amphoes', [TambonController::class , 'getAmphoes' ]);</strong></pre>\n<pre><strong>Route::get('/tambons', [ TambonController::class , 'getTambons' ]);</strong></pre>\n<pre><strong>Route::get('/zipcodes', [TambonController::class, 'getZipcodes'] );</strong></pre>\n<h4>controller</h4>\n<ul><li>สร้างไฟล์ controller</li></ul>\n<pre>php artisan make:controller API\\<strong>TambonController</strong></pre>\n<ul><li>เขียนโค้ดใน API\\TambonController.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Http\\Controllers\\API;</pre>\n<pre>use App\\Http\\Controllers\\Controller;<br>use Illuminate\\Http\\Request;</pre>\n<pre>class TambonController extends Controller<br>{<br><br><strong>public $data;</strong></pre>\n<pre><strong>public function __construct()<br>    {<br>        $path = url('/raw_database.json');<br>        $this-&gt;data = json_decode(file_get_contents($path), false);<br>    }</strong></pre>\n<pre><strong>public function getProvinces()<br>    {<br>        $data = $this-&gt;data;<br>        $provinces = array_map(function ($item) {<br>            return $item-&gt;province;<br>        }, $data);<br>        $provinces = array_unique($provinces);<br>        $provinces = array_values($provinces);<br>        return $provinces;<br>    }<br>    public function getAmphoes(Request $request)<br>    {<br>        $data = $this-&gt;data;<br>        $amphoes = array_filter($data, function ($item) use ($request) {<br>            return $item-&gt;province == $request-&gt;get('province');<br>        });<br>        $amphoes = array_map(function ($item) {<br>            return $item-&gt;amphoe;<br>        }, $amphoes);<br>        $amphoes = array_unique($amphoes);        <br>        $amphoes = array_values($amphoes);<br>        return $amphoes;<br>    }<br>    public function getTambons(Request $request)<br>    {<br>        $data = $this-&gt;data;<br>        $districts = array_filter($data, function ($item) use ($request) {<br>            return $item-&gt;amphoe == $request-&gt;get('amphoe') &amp;&amp; $item-&gt;province == $request-&gt;get('province');<br>        });<br>        $districts = array_map(function ($item) {<br>            return $item-&gt;district;<br>        }, $districts);<br>        $districts = array_unique($districts);  <br>        $districts = array_values($districts);<br>        return $districts;<br>    }<br>    public function getZipcodes(Request $request)<br>    {<br>        $data = $this-&gt;data;<br>        $zipcodes = array_filter($data, function ($item) use ($request) {<br>            return $item-&gt;district == $request-&gt;get('tambon') &amp;&amp; $item-&gt;amphoe == $request-&gt;get('amphoe') &amp;&amp; $item-&gt;province == $request-&gt;get('province');<br>        });<br>        $zipcodes = array_map(function ($item) {<br>            return $item-&gt;zipcode;<br>        }, $zipcodes);<br>        $zipcodes = array_values($zipcodes);<br>        return $zipcodes;<br>    }</strong><br>}</pre>\n<ul><li>routes/web.php</li></ul>\n<pre>Route::get('/tambon',function(){<br>    $path = url('/raw_database.json');<br>    $data = json_decode(file_get_contents($path), false);<br>    $provinces = array_map(function ($item) {<br>        return $item-&gt;province;<br>    }, $data);<br>    $provinces = array_unique($provinces);<br>    $provinces = array_values($provinces);<br><br>    $amphoes = [];<br>    $tambons = [];</pre>\n<pre>return view('tambon/index' ,compact('provinces','amphoes','tambons'));<br>});</pre>\n<ul><li>View</li></ul>\n<pre>&lt;head&gt;<br>    &lt;meta charset=\"UTF-8\"&gt;<br>&lt;/head&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_province\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกจังหวัด&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($provinces as $item)<br>        &lt;option value=\"{{ $item }}\"&gt;{{ $item }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_amphoe\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($amphoes as $item)<br>        &lt;option value=\"{{ $item }}\"&gt;{{ $item }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;select id=\"input_tambon\"&gt;<br>        &lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;<br><a href=\"http://twitter.com/foreach\">@foreach</a>($tambons as $item)<br>        &lt;option value=\"{{ $item }}\"&gt;{{ $item }}&lt;/option&gt;<br><a href=\"http://twitter.com/endforeach\">@endforeach</a><br>    &lt;/select&gt;<br>&lt;/div&gt;<br>&lt;div&gt;<br>    &lt;input id=\"input_zipcode\" placeholder=\"รหัสไปรษณีย์\" /&gt;<br>&lt;/div&gt;</pre>\n<pre>&lt;script&gt;<br>    function showAmphoes() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let url = \"{{ url('/api/amphoes') }}?province=\" + input_province.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_amphoe = document.querySelector(\"#input_amphoe\");<br>                input_amphoe.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item;<br>                    option.value = item;<br>                    input_amphoe.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showTambons();<br>            });<br>    }</pre>\n<pre>function showTambons() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let url = \"{{ url('/api/tambons') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_tambon = document.querySelector(\"#input_tambon\");<br>                input_tambon.innerHTML = '&lt;option value=\"\"&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;';<br>                for (let item of result) {<br>                    let option = document.createElement(\"option\");<br>                    option.text = item;<br>                    option.value = item;<br>                    input_tambon.appendChild(option);<br>                }<br>                //QUERY AMPHOES<br>                showZipcode();<br>            });<br>    }</pre>\n<pre>function showZipcode() {<br>        let input_province = document.querySelector(\"#input_province\");<br>        let input_amphoe = document.querySelector(\"#input_amphoe\");<br>        let input_tambon = document.querySelector(\"#input_tambon\");<br>        let url = \"{{ url('/api/zipcodes') }}?province=\" + input_province.value + \"&amp;amphoe=\" + input_amphoe.value + \"&amp;tambon=\" + input_tambon.value;<br>        console.log(url);<br>        // if(input_province.value == \"\") return;        <br>        // if(input_amphoe.value == \"\") return;     <br>        // if(input_tambon.value == \"\") return;<br>        fetch(url)<br>            .then(response =&gt; response.json())<br>            .then(result =&gt; {<br>                console.log(result);<br>                //UPDATE SELECT OPTION<br>                let input_zipcode = document.querySelector(\"#input_zipcode\");<br>                input_zipcode.value = \"\";<br>                for (let item of result) {<br>                    input_zipcode.value = item;<br>                    break;<br>                }<br>            });<br>    }<br>    //EVENTS<br>    document.querySelector('#input_province').addEventListener('change', (event) =&gt; {<br>        showAmphoes();<br>    });<br>    document.querySelector('#input_amphoe').addEventListener('change', (event) =&gt; {<br>        showTambons();<br>    });<br>    document.querySelector('#input_tambon').addEventListener('change', (event) =&gt; {<br>        showZipcode();<br>    });<br>&lt;/script&gt;</pre>\n<h3>Case 3 : Use just Static file json + Laravel Livewire (no database)</h3>\n<p>Good Luck+++</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=bb2643a8fe7a\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/%E0%B8%A3%E0%B8%B0%E0%B8%9A%E0%B8%9A%E0%B8%81%E0%B8%A3%E0%B8%AD%E0%B8%81%E0%B8%88%E0%B8%B1%E0%B8%87%E0%B8%AB%E0%B8%A7%E0%B8%B1%E0%B8%94-%E0%B8%AD%E0%B8%B3%E0%B9%80%E0%B8%A0%E0%B8%AD-%E0%B8%95%E0%B8%B3%E0%B8%9A%E0%B8%A5-%E0%B8%A3%E0%B8%AB%E0%B8%B1%E0%B8%AA%E0%B9%84%E0%B8%9B%E0%B8%A3%E0%B8%A9%E0%B8%93%E0%B8%B5%E0%B8%A2%E0%B9%8C-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-laravel-using-fetch-no-jquery-bb2643a8fe7a\">ระบบกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์ ด้วย Laravel + Using Fetch (no jquery)</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "asynchronous",
                "javascript",
                "laravel",
                "fetch-api",
                "thailand"
            ]
        },
        {
            "title": "Python 101",
            "pubDate": "2020-12-29 13:00:54",
            "link": "https://medium.com/ckartisan/python-101-b0e57af2f00a?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/b0e57af2f00a",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*KsSE7tjH2fa7qWX1mrnaMA.jpeg",
            "description": "\n<h3>Python 101 for beginner</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*KsSE7tjH2fa7qWX1mrnaMA.jpeg\"></figure><p>สำหรับคนเริ่มใช้ Python ควรเริ่มต้นจากอะไรบ้าง ในบทความนี้จะเล่าในส่วนที่ใช้งานกันบ่อยๆ เนื้องานอาจจะไม่ได้ละเอียดเน้นการใช้งานเป็นหลัก</p>\n<h3>Step 1 : Create Project &amp; Environment</h3>\n<p>Create project and virtual environement : <strong>tutorial-env</strong></p>\n<pre>python -m venv <strong>tutorial-env</strong></pre>\n<p>Choose directory <strong>tutorial-env</strong></p>\n<pre>cd <strong>tutorial-env</strong></pre>\n<p>On Windows, run:</p>\n<pre>Scripts\\activate</pre>\n<p>On Unix or MacOS, run:</p>\n<pre>source Scripts\\activate</pre>\n<h3>Step 2 : Requirement.txt</h3>\n<p>เมื่อต้องการบันทึก dependency ลงไฟล์ requirements.txt</p>\n<pre>pip freeze &gt; requirements.txt</pre>\n<p>เมื่อต้องการ install dependency จาก requirement.txt</p>\n<pre>pip install -r requirements.txt</pre>\n<p>dependency ที่พื้นฐานที่จำเป็นต้องใช้งาน</p>\n<pre>pip install numpy<br>pip install pandas<br>pip install notebook<br>#run<br>jupyter notebook</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b0e57af2f00a\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/python-101-b0e57af2f00a\">Python 101</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<h3>Python 101 for beginner</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*KsSE7tjH2fa7qWX1mrnaMA.jpeg\"></figure><p>สำหรับคนเริ่มใช้ Python ควรเริ่มต้นจากอะไรบ้าง ในบทความนี้จะเล่าในส่วนที่ใช้งานกันบ่อยๆ เนื้องานอาจจะไม่ได้ละเอียดเน้นการใช้งานเป็นหลัก</p>\n<h3>Step 1 : Create Project &amp; Environment</h3>\n<p>Create project and virtual environement : <strong>tutorial-env</strong></p>\n<pre>python -m venv <strong>tutorial-env</strong></pre>\n<p>Choose directory <strong>tutorial-env</strong></p>\n<pre>cd <strong>tutorial-env</strong></pre>\n<p>On Windows, run:</p>\n<pre>Scripts\\activate</pre>\n<p>On Unix or MacOS, run:</p>\n<pre>source Scripts\\activate</pre>\n<h3>Step 2 : Requirement.txt</h3>\n<p>เมื่อต้องการบันทึก dependency ลงไฟล์ requirements.txt</p>\n<pre>pip freeze &gt; requirements.txt</pre>\n<p>เมื่อต้องการ install dependency จาก requirement.txt</p>\n<pre>pip install -r requirements.txt</pre>\n<p>dependency ที่พื้นฐานที่จำเป็นต้องใช้งาน</p>\n<pre>pip install numpy<br>pip install pandas<br>pip install notebook<br>#run<br>jupyter notebook</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b0e57af2f00a\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/python-101-b0e57af2f00a\">Python 101</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "python"
            ]
        },
        {
            "title": "กำจัด Wordpress Redirect ไปหน้าโฆษณาเมื่อคลิกเว็บไซต์ผ่านการ search ด้วย Google",
            "pubDate": "2020-03-11 14:25:19",
            "link": "https://medium.com/ckartisan/%E0%B8%81%E0%B8%B3%E0%B8%88%E0%B8%B1%E0%B8%94-wordpress-redirect-%E0%B9%84%E0%B8%9B%E0%B8%AB%E0%B8%99%E0%B9%89%E0%B8%B2%E0%B9%82%E0%B8%86%E0%B8%A9%E0%B8%93%E0%B8%B2%E0%B9%80%E0%B8%A1%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%84%E0%B8%A5%E0%B8%B4%E0%B8%81%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B9%84%E0%B8%8B%E0%B8%95%E0%B9%8C%E0%B8%9C%E0%B9%88%E0%B8%B2%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3-search-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-google-4f7567533ea?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/4f7567533ea",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*XuHjBYTTIUVL2pY6eW7fCg.jpeg",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*XuHjBYTTIUVL2pY6eW7fCg.jpeg\"></figure><p>เคยไหมเมื่อคุณทดลอง search google เว็บไซต์ที่คุณพัฒนาขึ้นมาจาก wordpress และเมื่อคุณเจอมันแล้วคลิกที่ลิงค์ แต่แทนที่คุณจะได้เห็นเว็บไซต์ที่คุณพัฒนา คุณกลับได้หน้าโฆษณาขึ้นมาแทน</p>\n<p>ไม่เพียงแค่เข้าเว็บไซต์ผ่าน Google บางทีเข้าผ่าน Facebook เข้าผ่านไลน์ เข้าผ่านอีเมล์ก็เจอปัญหานี้กันถ้วนหน้า</p>\n<p>ปัญหานี้ตอนแรกผมก็คิดว่ามันเป็นที่ theme WordPress ที่เราไปโหลดมา แต่จริงๆแล้วไม่ใช่ เมื่อได้รู้ความจริงว่ามีใครบางคนจงใจเพิ่มโค้ดบางบรรทัดให้กับระบบของเราเพื่อเปลี่ยนรูปแบบการทำงานให้แปลกไปจากปกติ แน่นอนมันกวนใจเราและทำลายความน่าเชื่อถือของเว็บไซต์ด้วย</p>\n<blockquote>แต่ไม่ต้องกังวล วันนี้เรามาพร้อมกับทางแก้ปัญหาเหล่านี้</blockquote>\n<h4>ไฟล์ที่น่าจะมีปัญหาและส่งผลกับระบบงานของคุณ</h4>\n<ol>\n<li>index.php</li>\n<li>wp-setting.php</li>\n</ol>\n<p>สำหรับท่านอื่นๆ ก็อาจจะโดนไฟล์อื่นๆ ด้วยแตกต่างกันไป</p>\n<h3>index.php</h3>\n<p>จากรูปข้างล่างจะพบว่าในรูปแรกมีโค้ดแปลกปลอม ซึ่งเพิ่มขึ้นมาจากโค้ด index.php แบบปกติ และเราต้องทำการลบหรือคอมเม้นท์ทิ้งไป</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/967/1*ZZaOvO8j1fTXeIUcnnKEuw.png\"><figcaption>โค้ดแปลกปลอมที่อยู่ในไฟล์ index.php</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/719/1*rAxue_a7Im6y7a18bLknNQ.png\"><figcaption>หน้าตาปกติของ index.php ก็จะประมาณนี้</figcaption></figure><h3>wp-setting.php</h3>\n<p>เช่นเดียวกันกับ index.php ที่ไฟล์ wp-setting.php ก็มีบันทัดแปลกปลอมเช่นกัน เมื่อเจอก็ลบหรือ คอมเม้นท์ ทิ้งไปเช่นกัน โดยหน้าตาของโค้ดก็จะประมาณว่า include อะไรสักอย่าง ซึ่งดูไม่น่าไว้ใจสักเท่าไหร่นัก</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/744/1*60RBHnUIIjl8bY8HL1e3Ag.png\"><figcaption>โค้ดแปลกปลอมที่ถูกเพิ่มเข้ามาและต้องกำจัด</figcaption></figure><h3>เรียบร้อย!!!</h3>\n<p>หลังจากนี้ก็ใช้งานได้ปกติ เข้าผ่าน Google ได้แล้ว</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=4f7567533ea\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/%E0%B8%81%E0%B8%B3%E0%B8%88%E0%B8%B1%E0%B8%94-wordpress-redirect-%E0%B9%84%E0%B8%9B%E0%B8%AB%E0%B8%99%E0%B9%89%E0%B8%B2%E0%B9%82%E0%B8%86%E0%B8%A9%E0%B8%93%E0%B8%B2%E0%B9%80%E0%B8%A1%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%84%E0%B8%A5%E0%B8%B4%E0%B8%81%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B9%84%E0%B8%8B%E0%B8%95%E0%B9%8C%E0%B8%9C%E0%B9%88%E0%B8%B2%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3-search-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-google-4f7567533ea\">กำจัด Wordpress Redirect ไปหน้าโฆษณาเมื่อคลิกเว็บไซต์ผ่านการ search ด้วย Google</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*XuHjBYTTIUVL2pY6eW7fCg.jpeg\"></figure><p>เคยไหมเมื่อคุณทดลอง search google เว็บไซต์ที่คุณพัฒนาขึ้นมาจาก wordpress และเมื่อคุณเจอมันแล้วคลิกที่ลิงค์ แต่แทนที่คุณจะได้เห็นเว็บไซต์ที่คุณพัฒนา คุณกลับได้หน้าโฆษณาขึ้นมาแทน</p>\n<p>ไม่เพียงแค่เข้าเว็บไซต์ผ่าน Google บางทีเข้าผ่าน Facebook เข้าผ่านไลน์ เข้าผ่านอีเมล์ก็เจอปัญหานี้กันถ้วนหน้า</p>\n<p>ปัญหานี้ตอนแรกผมก็คิดว่ามันเป็นที่ theme WordPress ที่เราไปโหลดมา แต่จริงๆแล้วไม่ใช่ เมื่อได้รู้ความจริงว่ามีใครบางคนจงใจเพิ่มโค้ดบางบรรทัดให้กับระบบของเราเพื่อเปลี่ยนรูปแบบการทำงานให้แปลกไปจากปกติ แน่นอนมันกวนใจเราและทำลายความน่าเชื่อถือของเว็บไซต์ด้วย</p>\n<blockquote>แต่ไม่ต้องกังวล วันนี้เรามาพร้อมกับทางแก้ปัญหาเหล่านี้</blockquote>\n<h4>ไฟล์ที่น่าจะมีปัญหาและส่งผลกับระบบงานของคุณ</h4>\n<ol>\n<li>index.php</li>\n<li>wp-setting.php</li>\n</ol>\n<p>สำหรับท่านอื่นๆ ก็อาจจะโดนไฟล์อื่นๆ ด้วยแตกต่างกันไป</p>\n<h3>index.php</h3>\n<p>จากรูปข้างล่างจะพบว่าในรูปแรกมีโค้ดแปลกปลอม ซึ่งเพิ่มขึ้นมาจากโค้ด index.php แบบปกติ และเราต้องทำการลบหรือคอมเม้นท์ทิ้งไป</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/967/1*ZZaOvO8j1fTXeIUcnnKEuw.png\"><figcaption>โค้ดแปลกปลอมที่อยู่ในไฟล์ index.php</figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/719/1*rAxue_a7Im6y7a18bLknNQ.png\"><figcaption>หน้าตาปกติของ index.php ก็จะประมาณนี้</figcaption></figure><h3>wp-setting.php</h3>\n<p>เช่นเดียวกันกับ index.php ที่ไฟล์ wp-setting.php ก็มีบันทัดแปลกปลอมเช่นกัน เมื่อเจอก็ลบหรือ คอมเม้นท์ ทิ้งไปเช่นกัน โดยหน้าตาของโค้ดก็จะประมาณว่า include อะไรสักอย่าง ซึ่งดูไม่น่าไว้ใจสักเท่าไหร่นัก</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/744/1*60RBHnUIIjl8bY8HL1e3Ag.png\"><figcaption>โค้ดแปลกปลอมที่ถูกเพิ่มเข้ามาและต้องกำจัด</figcaption></figure><h3>เรียบร้อย!!!</h3>\n<p>หลังจากนี้ก็ใช้งานได้ปกติ เข้าผ่าน Google ได้แล้ว</p>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=4f7567533ea\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/%E0%B8%81%E0%B8%B3%E0%B8%88%E0%B8%B1%E0%B8%94-wordpress-redirect-%E0%B9%84%E0%B8%9B%E0%B8%AB%E0%B8%99%E0%B9%89%E0%B8%B2%E0%B9%82%E0%B8%86%E0%B8%A9%E0%B8%93%E0%B8%B2%E0%B9%80%E0%B8%A1%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%84%E0%B8%A5%E0%B8%B4%E0%B8%81%E0%B9%80%E0%B8%A7%E0%B9%87%E0%B8%9A%E0%B9%84%E0%B8%8B%E0%B8%95%E0%B9%8C%E0%B8%9C%E0%B9%88%E0%B8%B2%E0%B8%99%E0%B8%81%E0%B8%B2%E0%B8%A3-search-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-google-4f7567533ea\">กำจัด Wordpress Redirect ไปหน้าโฆษณาเมื่อคลิกเว็บไซต์ผ่านการ search ด้วย Google</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "google",
                "wordpress",
                "redirect"
            ]
        },
        {
            "title": "Laravel Sending Mail",
            "pubDate": "2020-01-21 04:12:15",
            "link": "https://medium.com/ckartisan/laravel-sending-mail-1e9eb9a9af23?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/1e9eb9a9af23",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*IfrQTF7Aa59Yinjvw6AwJg.jpeg",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*IfrQTF7Aa59Yinjvw6AwJg.jpeg\"></figure><p>เคยกังวลว่าการส่งเมล์เป็นเรื่องยาก แต่พอมาใช้ Laravel จึงรู้สึกว่ามันง่ายดายมากๆ จะมีขั้นตอนอะไรเด๋วมาดูกันในบทความนี้</p>\n<p>ผมจะขอข้ามการสร้างโปรเจค Laravel ไปเลยละกัน สมมติว่าเรามี Project Laravel อยู่ก่อนแล้วจะต้องทำไงบ้าง ในตัวอย่างนี้ผมจะขอใช้เป็น smtp ของ gmail ละกัน</p>\n<h3>Outline</h3>\n<ul>\n<li>config ใน Gmail</li>\n<li>config ใน .env</li>\n<li>สร้าง App/Mail</li>\n<li>config App/Mail</li>\n<li>view (blade ตัวอย่าง)</li>\n<li>เรียกใช้งานใน Controller (ตัวอย่าง)</li>\n</ul>\n<h3>มาเริ่มกันเลย</h3>\n<ul><li>config ใน Gmail ก่อนอื่นต้องมีบัญชี Gmail ก่อน &gt; คลิกที่ icon &gt; คลิกที่ Manage Your Google Account</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/357/1*FSFieTQI4K2BGfFtD_T2fg.png\"></figure><ul><li>จากนั้น security &gt; 2 step verification ต้องเป็น “on” จากนั้นคลิกที่ App passwords</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cZ6OqZMGgs3KcSRUToOCdw.png\"></figure><ul><li>จากนั้นเลือก Mail เท่านั้น และเลือก Other (Custom name)</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*JJlmlHbGtADIEDR_YidFfw.png\"></figure><ul><li>กรอกชืื่อ server และกดปุ่ม Generate เราจะได้รหัส 16 หลักซึ่งแน่นอนเราจะใช้รหัสนี้ “แทน Password” (เก็บดีๆ และเป็นความลับ)</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/795/0*9HwhXFayqapwudID.png\"></figure><ul><li>config ใน .env (ตรงไหนตัวหนาก็เปลี่ยนเป็นของคุณเอง) encryption=tls และ port=587 ซึ่งเป็นเทคโนโลยีที่ใหม่กว่าแบบ ssl (Recommended) โดยตรง password เราจะใช้รหัส 16 หลักแทน password ปกติ</li></ul>\n<pre>MAIL_DRIVER=smtp</pre>\n<pre>MAIL_HOST=smtp.gmail.com</pre>\n<pre>MAIL_PORT=587   </pre>\n<pre>MAIL_USERNAME=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_PASSWORD=<strong>xxxxxxxxxxxx</strong></pre>\n<pre>MAIL_ENCRYPTION=tls</pre>\n<pre>MAIL_FROM_ADDRESS=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_FROM_NAME=\"<strong>IRONMAN</strong>\"</pre>\n<ul><li>ถ้าคุณใช้ xampp server จะแนะนำให้ใช้ encryption=ssl และ port=465</li></ul>\n<pre>MAIL_DRIVER=smtp</pre>\n<pre>MAIL_HOST=smtp.gmail.com</pre>\n<pre>MAIL_PORT=465</pre>\n<pre>MAIL_USERNAME=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_PASSWORD=<strong>xxxxxxxxxxxx</strong></pre>\n<pre>MAIL_ENCRYPTION=ssl</pre>\n<pre>MAIL_FROM_ADDRESS=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_FROM_NAME=\"<strong>IRONMAN</strong>\"</pre>\n<ul><li>สร้าง App/Mail ขั้นตอนนี้เราจะได้ File สำหรับการส่งเมล์ สมมติมีเมล์ 5 รูปแบบที่ต้องส่งก็ต้องสร้าง 5 ไฟล์</li></ul>\n<pre>php artisan make:mail TestMail</pre>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/231/1*NEs0m_lMpPR-n_fx9EZmUg.png\"><figcaption>TestMail</figcaption></figure><ul><li>config App/Mail/TestMail.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Mail;<br>use App\\Article;</pre>\n<pre>...</pre>\n<pre>class TestMail extends Mailable<br>{<br>    use Queueable, SerializesModels;</pre>\n<pre> <br>    public function __construct(<strong>Article $article</strong>)<br>    {<br>        //เราสามารถส่ง Parameter มาจากที่อื่นได้โดยใช้ Constructor รับค่า</pre>\n<pre>        <strong>$this-&gt;article = $article;</strong><br>    }</pre>\n<pre> <br>    public function build()<br>    {<br>        //เวลาใช้งานดึงการแสดงผลจาก View เหมือนกับ Controller ทั่วไป</pre>\n<pre>        $article = $this-&gt;article;<br>        return $this-&gt;subject('This is my Test Mail Subject')<br>                    -&gt;view('<strong>article.testmail</strong>', compact('article') );<br>    }<br>}</pre>\n<ul><li>view (blade ตัวอย่าง): <strong>article.testmail</strong>\n</li></ul>\n<pre>&lt;h1&gt;Hi,  Everyone {{ $article-&gt;user_id }}&lt;/h1&gt;</pre>\n<pre>&lt;p&gt;This is template of the mail&lt;/p&gt;</pre>\n<ul><li>เรียกใช้งานใน Controller (ตัวอย่าง) สมมติเรามีการ Submit Form โดยใน Controller เรามี create กับ store อยู่ก่อนแล้ว</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Http\\Controllers;</pre>\n<pre>use App\\Http\\Requests;<br>use App\\Http\\Controllers\\Controller;</pre>\n<pre><strong>use App\\Article;<br>use App\\Mail\\TestMail;</strong></pre>\n<pre><strong>use Illuminate\\Support\\Facades\\Mail;</strong><br><br>use Illuminate\\Http\\Request;</pre>\n<pre>use Illuminate\\Support\\Facades\\Auth;</pre>\n<pre>class ArticleController extends Controller<br>{<br>    public function create()<br>    {<br>        return view('article.create');<br><br>    }</pre>\n<pre>    public function store(Request $request)<br>    {<br><br>        $requestData = $request-&gt;all();<br><br>        $article = Article::create($requestData);</pre>\n<pre>        //ส่งเมล์หลังจากสร้าง Article <br><strong>$this-&gt;testmail($article-&gt;id);</strong></pre>\n<pre>        return redirect('article');<br>    }</pre>\n<pre><strong>    public function testmail($id)<br>    {<br>        $article = Article::findOrFail($id);<br>        $email = \"yyyyy@gmail.com\";</strong></pre>\n<pre><strong>        //หรือ ใช้ relationship เรียกจากตาราง user<br>        //$email = $article-&gt;user-&gt;email; <br><br>        Mail::to($email)-&gt;send(new TestMail($article));<br>    }</strong><br>}</pre>\n<h3>ผลลัพธ์</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/617/1*l56qNPoFNW1sdYoCbQcrEA.png\"></figure><h3>อ้างอิง</h3>\n<ul>\n<li><a href=\"https://medium.com/graymatrix/using-gmail-smtp-server-to-send-email-in-laravel-91c0800f9662\">Using Gmail SMTP Server to send Email in Laravel</a></li>\n<li><a href=\"https://laravel.com/docs/5.8/mail\">Mail</a></li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=1e9eb9a9af23\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/laravel-sending-mail-1e9eb9a9af23\">Laravel Sending Mail</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*IfrQTF7Aa59Yinjvw6AwJg.jpeg\"></figure><p>เคยกังวลว่าการส่งเมล์เป็นเรื่องยาก แต่พอมาใช้ Laravel จึงรู้สึกว่ามันง่ายดายมากๆ จะมีขั้นตอนอะไรเด๋วมาดูกันในบทความนี้</p>\n<p>ผมจะขอข้ามการสร้างโปรเจค Laravel ไปเลยละกัน สมมติว่าเรามี Project Laravel อยู่ก่อนแล้วจะต้องทำไงบ้าง ในตัวอย่างนี้ผมจะขอใช้เป็น smtp ของ gmail ละกัน</p>\n<h3>Outline</h3>\n<ul>\n<li>config ใน Gmail</li>\n<li>config ใน .env</li>\n<li>สร้าง App/Mail</li>\n<li>config App/Mail</li>\n<li>view (blade ตัวอย่าง)</li>\n<li>เรียกใช้งานใน Controller (ตัวอย่าง)</li>\n</ul>\n<h3>มาเริ่มกันเลย</h3>\n<ul><li>config ใน Gmail ก่อนอื่นต้องมีบัญชี Gmail ก่อน &gt; คลิกที่ icon &gt; คลิกที่ Manage Your Google Account</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/357/1*FSFieTQI4K2BGfFtD_T2fg.png\"></figure><ul><li>จากนั้น security &gt; 2 step verification ต้องเป็น “on” จากนั้นคลิกที่ App passwords</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*cZ6OqZMGgs3KcSRUToOCdw.png\"></figure><ul><li>จากนั้นเลือก Mail เท่านั้น และเลือก Other (Custom name)</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*JJlmlHbGtADIEDR_YidFfw.png\"></figure><ul><li>กรอกชืื่อ server และกดปุ่ม Generate เราจะได้รหัส 16 หลักซึ่งแน่นอนเราจะใช้รหัสนี้ “แทน Password” (เก็บดีๆ และเป็นความลับ)</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/795/0*9HwhXFayqapwudID.png\"></figure><ul><li>config ใน .env (ตรงไหนตัวหนาก็เปลี่ยนเป็นของคุณเอง) encryption=tls และ port=587 ซึ่งเป็นเทคโนโลยีที่ใหม่กว่าแบบ ssl (Recommended) โดยตรง password เราจะใช้รหัส 16 หลักแทน password ปกติ</li></ul>\n<pre>MAIL_DRIVER=smtp</pre>\n<pre>MAIL_HOST=smtp.gmail.com</pre>\n<pre>MAIL_PORT=587   </pre>\n<pre>MAIL_USERNAME=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_PASSWORD=<strong>xxxxxxxxxxxx</strong></pre>\n<pre>MAIL_ENCRYPTION=tls</pre>\n<pre>MAIL_FROM_ADDRESS=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_FROM_NAME=\"<strong>IRONMAN</strong>\"</pre>\n<ul><li>ถ้าคุณใช้ xampp server จะแนะนำให้ใช้ encryption=ssl และ port=465</li></ul>\n<pre>MAIL_DRIVER=smtp</pre>\n<pre>MAIL_HOST=smtp.gmail.com</pre>\n<pre>MAIL_PORT=465</pre>\n<pre>MAIL_USERNAME=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_PASSWORD=<strong>xxxxxxxxxxxx</strong></pre>\n<pre>MAIL_ENCRYPTION=ssl</pre>\n<pre>MAIL_FROM_ADDRESS=<strong>xxxx@gmail.com</strong></pre>\n<pre>MAIL_FROM_NAME=\"<strong>IRONMAN</strong>\"</pre>\n<ul><li>สร้าง App/Mail ขั้นตอนนี้เราจะได้ File สำหรับการส่งเมล์ สมมติมีเมล์ 5 รูปแบบที่ต้องส่งก็ต้องสร้าง 5 ไฟล์</li></ul>\n<pre>php artisan make:mail TestMail</pre>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/231/1*NEs0m_lMpPR-n_fx9EZmUg.png\"><figcaption>TestMail</figcaption></figure><ul><li>config App/Mail/TestMail.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Mail;<br>use App\\Article;</pre>\n<pre>...</pre>\n<pre>class TestMail extends Mailable<br>{<br>    use Queueable, SerializesModels;</pre>\n<pre> <br>    public function __construct(<strong>Article $article</strong>)<br>    {<br>        //เราสามารถส่ง Parameter มาจากที่อื่นได้โดยใช้ Constructor รับค่า</pre>\n<pre>        <strong>$this-&gt;article = $article;</strong><br>    }</pre>\n<pre> <br>    public function build()<br>    {<br>        //เวลาใช้งานดึงการแสดงผลจาก View เหมือนกับ Controller ทั่วไป</pre>\n<pre>        $article = $this-&gt;article;<br>        return $this-&gt;subject('This is my Test Mail Subject')<br>                    -&gt;view('<strong>article.testmail</strong>', compact('article') );<br>    }<br>}</pre>\n<ul><li>view (blade ตัวอย่าง): <strong>article.testmail</strong>\n</li></ul>\n<pre>&lt;h1&gt;Hi,  Everyone {{ $article-&gt;user_id }}&lt;/h1&gt;</pre>\n<pre>&lt;p&gt;This is template of the mail&lt;/p&gt;</pre>\n<ul><li>เรียกใช้งานใน Controller (ตัวอย่าง) สมมติเรามีการ Submit Form โดยใน Controller เรามี create กับ store อยู่ก่อนแล้ว</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Http\\Controllers;</pre>\n<pre>use App\\Http\\Requests;<br>use App\\Http\\Controllers\\Controller;</pre>\n<pre><strong>use App\\Article;<br>use App\\Mail\\TestMail;</strong></pre>\n<pre><strong>use Illuminate\\Support\\Facades\\Mail;</strong><br><br>use Illuminate\\Http\\Request;</pre>\n<pre>use Illuminate\\Support\\Facades\\Auth;</pre>\n<pre>class ArticleController extends Controller<br>{<br>    public function create()<br>    {<br>        return view('article.create');<br><br>    }</pre>\n<pre>    public function store(Request $request)<br>    {<br><br>        $requestData = $request-&gt;all();<br><br>        $article = Article::create($requestData);</pre>\n<pre>        //ส่งเมล์หลังจากสร้าง Article <br><strong>$this-&gt;testmail($article-&gt;id);</strong></pre>\n<pre>        return redirect('article');<br>    }</pre>\n<pre><strong>    public function testmail($id)<br>    {<br>        $article = Article::findOrFail($id);<br>        $email = \"yyyyy@gmail.com\";</strong></pre>\n<pre><strong>        //หรือ ใช้ relationship เรียกจากตาราง user<br>        //$email = $article-&gt;user-&gt;email; <br><br>        Mail::to($email)-&gt;send(new TestMail($article));<br>    }</strong><br>}</pre>\n<h3>ผลลัพธ์</h3>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/617/1*l56qNPoFNW1sdYoCbQcrEA.png\"></figure><h3>อ้างอิง</h3>\n<ul>\n<li><a href=\"https://medium.com/graymatrix/using-gmail-smtp-server-to-send-email-in-laravel-91c0800f9662\">Using Gmail SMTP Server to send Email in Laravel</a></li>\n<li><a href=\"https://laravel.com/docs/5.8/mail\">Mail</a></li>\n</ul>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=1e9eb9a9af23\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/laravel-sending-mail-1e9eb9a9af23\">Laravel Sending Mail</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "laravel",
                "email",
                "crud"
            ]
        },
        {
            "title": "Simple Crud Laravel 5.8 [no theme]",
            "pubDate": "2019-09-05 04:03:46",
            "link": "https://medium.com/ckartisan/simple-crud-laravel-5-8-no-theme-39977b8e37c3?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/39977b8e37c3",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/1*-vlL-aERjdqkdjRauxT26Q.jpeg",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-vlL-aERjdqkdjRauxT26Q.jpeg\"></figure><p>สำหรับโพสต์นี้ก็อยากจะเล่าเรื่องของการทำ CRUD ย่อมาจาก Create / Read / Update / Delete ซึ่งเป็นหลักการพื้นฐานของการสร้างเว็บ โดยในโพสต์นี้จะขอตัด Theme สวยๆ ออก เพื่อให้โค้ดใน CRUD นี้ slim ที่สุด และจะพยายามให้ง่ายต่อการเข้าใจที่สุด เรามาเริ่มกันเลย</p>\n<h3>สิ่งที่ต้องเตรียมก่อนเริ่มทำ CRUD</h3>\n<ul>\n<li>เตรียมโปรเจค Laravel</li>\n<li>config ไฟล์<strong> .env</strong>\n</li>\n<li>config ไฟล์ <strong>app/Providers/AppServiceProvider.php </strong>สำหรับผู้ใช้งานต่ำกว่า MySQL 5.7.7 release หรือต่ำกว่า MariaDB 10.2.2 release</li>\n<li>สร้างฐานข้อมูล ยกตัวอย่างเช่น <strong>mydb</strong>\n</li>\n<li>migration เพื่อสร้างตาราง (Schema) ในฐานข้อมูล ยกตัวอย่างเช่น <strong>vehicles</strong>\n</li>\n<li>คำสั่งสร้างไฟล์ migration</li>\n</ul>\n<pre>php artisan make:migration <strong>create_vehicles_table </strong>--create=<strong>vehicles</strong></pre>\n<ul><li>ยกอย่างโค้ด Migration</li></ul>\n<p>ไฟล์migration มีไว้สำหรับกำหนดลักษณะของตารางในฐานข้อมูล</p>\n<pre>&lt;?php</pre>\n<pre>use Illuminate\\Database\\Migrations\\Migration;<br>use Illuminate\\Database\\Schema\\Blueprint;</pre>\n<pre>class <strong>CreateVehiclesTable</strong> extends Migration<br>{<br>    public function up()<br>    {<br>        Schema::create(<strong>'vehicles'</strong>, function (Blueprint $table) {<br>            $table-&gt;increments('id');<br>            $table-&gt;timestamps();<strong><br>            $table-&gt;string('brand')-&gt;nullable();<br>            $table-&gt;string('series')-&gt;nullable();<br>            $table-&gt;string('colour')-&gt;nullable();<br>            $table-&gt;integer('year')-&gt;nullable();<br>            $table-&gt;float('mileage')-&gt;nullable();</strong><br>            });<br>    }</pre>\n<pre>    public function down()<br>    {<br>        Schema::drop(<strong>'vehicles'</strong>);<br>    }<br>}</pre>\n<ul><li>พิมพ์คำสั่ง Migrate เพื่อดำเนินการสร้างตาราง</li></ul>\n<pre>php artisan migrate</pre>\n<ul><li>สร้างไฟล์ Controller ด้วยคำสั่ง ยกตัวอย่างเช่น <strong>VehicleController</strong>\n</li></ul>\n<pre>php artisan make:controller <strong>VehicleController </strong>--resource</pre>\n<ul><li>สร้างไฟล์ Model ยกตัวอย่างเช่น <strong>Vehicle</strong>\n</li></ul>\n<pre>php artisan make:model <strong>Vehicle</strong></pre>\n<ul><li>เตรียมไฟล์ Views ให้พร้อมโดยคุณจะต้องมีโฟลเดอร์ และไฟล์ที่เกี่ยวข้องกับการทำ CRUD ดังรูปตัวอย่าง</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/265/1*IeVOzgJUhGBXVldImDvi_A.png\"></figure><ul><li>เปิดเรียงไฟล์ใน Editor รอไว้เลย เมื่อพร้อมก็ลุยได้เลย</li></ul>\n<p>— routes/web.php</p>\n<p>—app/Http/Controllers/VehicleController.php</p>\n<p>— app/Vehicle.php</p>\n<p>— resources/views/vehicle/index.blade.php</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YCW9_IVndgCfJu8_D50LDg.png\"></figure><h3>Lets’s Start the crud</h3>\n<h4>Route</h4>\n<ul><li>[route] routes/web.php</li></ul>\n<pre>Route::<strong>get</strong>('/<strong>vehicle</strong>', '<strong>VehicleController</strong>@<strong>index</strong>');<br>Route::<strong>get</strong>('/<strong>vehicle</strong>/create', '<strong>VehicleController</strong>@<strong>create</strong>');<br>Route::<strong>post</strong>('/<strong>vehicle</strong>', '<strong>VehicleController</strong>@<strong>store</strong>');<br>Route::<strong>get</strong>('/<strong>vehicle</strong>/{id}', '<strong>VehicleController</strong>@<strong>show</strong>');<br>Route::<strong>get</strong>('/<strong>vehicle</strong>/{id}/edit', '<strong>VehicleController</strong>@<strong>edit</strong>');<br>Route::<strong>put</strong>('/<strong>vehicle</strong>/{id}', '<strong>VehicleController</strong>@<strong>update</strong>');<br>Route::<strong>delete</strong>('/<strong>vehicle</strong>/{id}', '<strong>VehicleController</strong>@<strong>destroy</strong>');</pre>\n<h4>Controller</h4>\n<ul><li>[controller] app/Http/Controllers/VehicleController.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Http\\Controllers;<br>use Illuminate\\Http\\Request;</pre>\n<pre>use App\\<strong>Vehicle</strong>;</pre>\n<pre>class <strong>VehicleController </strong>extends Controller<br>{    <br>    public function <strong>index</strong>(Request $request)<br>    {<br>        $keyword = $request-&gt;input('search');</pre>\n<pre>        if (!empty($keyword)) {<br>            $<strong>vehicles </strong>= <strong>Vehicle</strong>::search($keyword);<br>        } else {<br>            $<strong>vehicles </strong>= <strong>Vehicle</strong>::getAll();<br>        }</pre>\n<pre>        $data = [<br>          \"<strong>vehicles</strong>\" =&gt; $<strong>vehicles</strong>,<br>        ];</pre>\n<pre>        return view('<strong>vehicle</strong>.index', $data);<br>    }</pre>\n<pre> <br>    public function <strong>create</strong>()<br>    {<br>        return view('<strong>vehicle</strong>.create');<br>    }</pre>\n<pre> <br>    public function <strong>store</strong>(Request $request)<br>    {<br><strong> </strong>$newItem = $request-&gt;all();<br>        $<strong>vehicle </strong>= <strong>Vehicle</strong>::storeItem($newItem);<br>        return redirect('<strong>vehicle</strong>');<br>    }</pre>\n<pre><br>    public function <strong>show</strong>($id)<br>    {<br><strong>  </strong>$<strong>vehicle </strong>= <strong>Vehicle</strong>::findOrFail($id);<br>        $data = [<br>          \"<strong>vehicle</strong>\" =&gt; $<strong>vehicle</strong>,<br>        ];<br>        return view('<strong>vehicle</strong>.show', $data);<br>    }</pre>\n<pre> <br>    public function <strong>edit</strong>($id)<br>    {<br>      $vehicle = <strong>Vehicle</strong>::findOrFail($id);<br>      $data = [<br>        \"<strong>vehicle</strong>\" =&gt; $<strong>vehicle</strong>,<br>      ];<br>      return view('<strong>vehicle</strong>.edit', $data);<br>    }</pre>\n<pre> <br>    public function <strong>update</strong>(Request $request, $id)<br>    {<br>        $item = $request-&gt;all();<br><strong>Vehicle</strong>::updateItem($id,$item);<br>        return redirect('<strong>vehicle</strong>');<br>    }</pre>\n<pre><br>    public function <strong>destroy</strong>($id)<br>    {<br><strong> Vehicle</strong>::destroyItem($id);<br>        return redirect('<strong>vehicle</strong>');<br>    }<br>}</pre>\n<h4>Model</h4>\n<ul><li>[model] Vehicle.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App;</pre>\n<pre>use Illuminate\\Database\\Eloquent\\Model;</pre>\n<pre>class <strong>Vehicle </strong>extends Model<br>{<br><strong>protected $table = 'vehicles';<br>    protected $primaryKey = 'id';<br>    protected $fillable = ['brand', 'series', 'colour', 'year', 'mileage'];</strong></pre>\n<pre>    public static function <strong>getAll</strong>()<br>    {<br><strong> </strong>return self::get();<br>    }</pre>\n<pre>    public static function <strong>getItem</strong>($id)<br>    {<br>        return self::findOrFail($id);<br>    }</pre>\n<pre>    public static function <strong>search</strong>($keyword)<br>    {<br><strong>return self::where('brand', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('series', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('colour', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('year', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('mileage', 'LIKE', \"%$keyword%\")<br>            -&gt;get();</strong><br>    }</pre>\n<pre>    public static function <strong>storeItem</strong>($newItem)<br>    {<br>        return self::create($newItem);<strong>  </strong><br>    }</pre>\n<pre>    public static function <strong>updateItem</strong>($id,$item)<br>    {<br>        self::findOrFail($id)-&gt;update($item);<br>    }</pre>\n<pre>    public static function <strong>destroyItem</strong>($id)<br>    {<br>        self::findOrFail($id)-&gt;delete();<br>    }<br>}</pre>\n<h4>Views</h4>\n<ul><li>[view] views/vehicle/create.blade.php</li></ul>\n<pre>&lt;h1&gt;Create New <strong>Vehicle</strong>&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;Back&lt;/a&gt;</pre>\n<pre>&lt;form method=\"POST\" action=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;<br>    {{ csrf_field() }}<br>    {{ method_field('POST') }}</pre>\n<pre>    @include ('<strong>vehicle</strong>.form')</pre>\n<pre>    &lt;input type=\"submit\" value=\"Save\"&gt;<br>&lt;/form&gt;</pre>\n<ul><li>[view] views/vehicle/edit.blade.php</li></ul>\n<pre>&lt;h1&gt;Edit Vehicle #{{ $<strong>vehicle</strong>-&gt;id }}&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;Back&lt;/a&gt;</pre>\n<pre>&lt;form method=\"POST\" <br>      action=\"{{ url('/') }}/<strong>vehicle</strong>/{{$<strong>vehicle</strong>-&gt;id}}\" &gt;<br>    {{ method_field('PUT') }}<br>    {{ csrf_field() }}</pre>\n<pre>    @include ('<strong>vehicle</strong>.form')</pre>\n<pre>    &lt;input type=\"submit\" value=\"Save\"&gt;<br>&lt;/form&gt;</pre>\n<ul><li>[view] views/vehicle/form.blade.php</li></ul>\n<pre>&lt;div&gt;<br><strong> &lt;label&gt;Brand / ยี่ห้อ&lt;/label&gt;<br>    &lt;input  name=\"brand\" type=\"text\"<br>            value=\"{{ isset($vehicle-&gt;brand) ? $vehicle-&gt;brand : '' }}\"<br>            /&gt;</strong><br>&lt;/div&gt;<br>&lt;div&gt;<br><strong>&lt;label&gt;Series / รุ่น&lt;/label&gt;<br>    &lt;input   name=\"series\" type=\"text\"<br>             value=\"{{ isset($vehicle-&gt;series) ? $vehicle-&gt;series : '' }}\"<br>             /&gt;</strong><br>&lt;/div&gt;<br>&lt;div&gt;<br><strong>&lt;label&gt;Colour / สี&lt;/label&gt;<br>    &lt;input  name=\"colour\" type=\"text\"<br>            value=\"{{ isset($vehicle-&gt;colour) ? $vehicle-&gt;colour : '' }}\"<br>            /&gt;</strong><br>&lt;/div&gt;<br>&lt;div &gt;<br><strong>&lt;label&gt;Year / ปี&lt;/label&gt;<br>    &lt;input name=\"year\" type=\"number\"<br>           value=\"{{ isset($vehicle-&gt;year) ? $vehicle-&gt;year : '' }}\"<br>           /&gt;</strong><br>&lt;/div&gt;<br>&lt;div&gt;<br><strong>&lt;label&gt;Mileage / เลขไมล์&lt;/label&gt;<br>    &lt;input  name=\"mileage\" type=\"number\"<br>            value=\"{{ isset($vehicle-&gt;mileage) ? $vehicle-&gt;mileage : '' }}\"<br>            /&gt;</strong><br>&lt;/div&gt;</pre>\n<ul><li>[view] views/vehicle/index.blade.php</li></ul>\n<pre>&lt;h1&gt;Vehicles&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>/create\"   &gt; Add New &lt;/a&gt;</pre>\n<pre>&lt;form method=\"GET\"<br>      action=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;<br>    &lt;div&gt;<br>        &lt;input  name=\"search\"<br>                placeholder=\"Search...\"<br>                value=\"{{ request('search') }}\"<br>                /&gt;<br>        &lt;button type=\"submit\"&gt;Search&lt;/button&gt;<br>    &lt;/div&gt;<br>&lt;/form&gt;<br>&lt;table border=\"1\"&gt;<br>    &lt;thead&gt;<br>        &lt;tr&gt;<br><strong>&lt;th&gt;#&lt;/th&gt;<br>            &lt;th&gt;Brand&lt;/th&gt;<br>            &lt;th&gt;Series&lt;/th&gt;<br>            &lt;th&gt;Colour&lt;/th&gt;<br>            &lt;th&gt;Actions&lt;/th&gt;</strong><br>        &lt;/tr&gt;<br>    &lt;/thead&gt;<br>    &lt;tbody&gt;<br>    @foreach($vehicles as $vehicle)<br>        &lt;tr&gt;<br><strong>&lt;td&gt;{{ $vehicle-&gt;id }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;brand }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;series }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;colour }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;mileage }}&lt;/td&gt;</strong><br>            &lt;td&gt;<br>                &lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}\"  &gt;<br>                  &lt;button&gt;View&lt;/button&gt;<br>                &lt;/a&gt;<br>                &lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}/edit\"  &gt;<br>                  &lt;button&gt;Edit&lt;/button&gt;<br>                &lt;/a&gt;</pre>\n<pre>                &lt;form method=\"POST\"<br>                      action=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}\"<br>                      style=\"display:inline\"&gt;<br>                    {{ method_field('DELETE') }}<br>                    {{ csrf_field() }}<br>                    &lt;button type=\"submit\"<br>                            onclick=\"return confirm(&amp;quot;Confirm delete?&amp;quot;)\"&gt;<br>                      Delete<br>                    &lt;/button&gt;<br>                &lt;/form&gt;<br>            &lt;/td&gt;<br>        &lt;/tr&gt;<br>    @endforeach<br>    &lt;/tbody&gt;<br>&lt;/table&gt;</pre>\n<ul><li>[view] views/vehicle/show.blade.php</li></ul>\n<pre>&lt;h1&gt;Vehicle {{ $<strong>vehicle</strong>-&gt;id }}&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>\"&gt;&lt;button&gt;Back&lt;/button&gt;&lt;/a&gt;<br>&lt;a href=\"{{ url('/') }}/{{ $<strong>vehicle</strong>-&gt;id }}/edit\"&gt;&lt;button&gt; Edit&lt;/button&gt;&lt;/a&gt;</pre>\n<pre>&lt;form method=\"POST\"<br>    action=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}\"<br>    style=\"display:inline\"&gt;<br>    {{ method_field('DELETE') }}<br>    {{ csrf_field() }}<br>    &lt;button type=\"submit\"<br>            onclick=\"return confirm(&amp;quot;Confirm delete?&amp;quot;)\"&gt;<br>      Delete<br>    &lt;/button&gt;<br>&lt;/form&gt;</pre>\n<pre>&lt;table border=\"1\"&gt;<br>    &lt;tbody&gt;<br><strong>&lt;tr&gt;&lt;th&gt;ID&lt;/th&gt;&lt;td&gt;{{ $vehicle-&gt;id }}&lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Brand&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;brand }} &lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Series&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;series }} &lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Colour&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;colour }} &lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Mileage&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;mileage }} &lt;/td&gt;&lt;/tr&gt;</strong><br>    &lt;/tbody&gt;<br>&lt;/table&gt;</pre>\n<h3>ผลลัพธ์</h3>\n<p>หน้าจอก็จะประมาณนี้ โดยที่สามารถ Create / Read / Update / Delete ได้ตามชื่อเลย</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/409/1*krRpqBRSeeQXhQzS2WQeYA.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle\">http://localhost/crud/public/vehicle</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/411/1*HfqRgWrbjTUn9pUGAHH-DQ.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle/create\">http://localhost/crud/public/vehicle/create</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/434/1*iP6ccIYPcTKRjVEZqFnakw.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle/1/edit\">http://localhost/crud/public/vehicle/1/edit</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/404/1*Oqc0d0kr5APHdLiVCrGCjg.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle/1\">http://localhost/crud/public/vehicle/1</a></figcaption></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=39977b8e37c3\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/simple-crud-laravel-5-8-no-theme-39977b8e37c3\">Simple Crud Laravel 5.8 [no theme]</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-vlL-aERjdqkdjRauxT26Q.jpeg\"></figure><p>สำหรับโพสต์นี้ก็อยากจะเล่าเรื่องของการทำ CRUD ย่อมาจาก Create / Read / Update / Delete ซึ่งเป็นหลักการพื้นฐานของการสร้างเว็บ โดยในโพสต์นี้จะขอตัด Theme สวยๆ ออก เพื่อให้โค้ดใน CRUD นี้ slim ที่สุด และจะพยายามให้ง่ายต่อการเข้าใจที่สุด เรามาเริ่มกันเลย</p>\n<h3>สิ่งที่ต้องเตรียมก่อนเริ่มทำ CRUD</h3>\n<ul>\n<li>เตรียมโปรเจค Laravel</li>\n<li>config ไฟล์<strong> .env</strong>\n</li>\n<li>config ไฟล์ <strong>app/Providers/AppServiceProvider.php </strong>สำหรับผู้ใช้งานต่ำกว่า MySQL 5.7.7 release หรือต่ำกว่า MariaDB 10.2.2 release</li>\n<li>สร้างฐานข้อมูล ยกตัวอย่างเช่น <strong>mydb</strong>\n</li>\n<li>migration เพื่อสร้างตาราง (Schema) ในฐานข้อมูล ยกตัวอย่างเช่น <strong>vehicles</strong>\n</li>\n<li>คำสั่งสร้างไฟล์ migration</li>\n</ul>\n<pre>php artisan make:migration <strong>create_vehicles_table </strong>--create=<strong>vehicles</strong></pre>\n<ul><li>ยกอย่างโค้ด Migration</li></ul>\n<p>ไฟล์migration มีไว้สำหรับกำหนดลักษณะของตารางในฐานข้อมูล</p>\n<pre>&lt;?php</pre>\n<pre>use Illuminate\\Database\\Migrations\\Migration;<br>use Illuminate\\Database\\Schema\\Blueprint;</pre>\n<pre>class <strong>CreateVehiclesTable</strong> extends Migration<br>{<br>    public function up()<br>    {<br>        Schema::create(<strong>'vehicles'</strong>, function (Blueprint $table) {<br>            $table-&gt;increments('id');<br>            $table-&gt;timestamps();<strong><br>            $table-&gt;string('brand')-&gt;nullable();<br>            $table-&gt;string('series')-&gt;nullable();<br>            $table-&gt;string('colour')-&gt;nullable();<br>            $table-&gt;integer('year')-&gt;nullable();<br>            $table-&gt;float('mileage')-&gt;nullable();</strong><br>            });<br>    }</pre>\n<pre>    public function down()<br>    {<br>        Schema::drop(<strong>'vehicles'</strong>);<br>    }<br>}</pre>\n<ul><li>พิมพ์คำสั่ง Migrate เพื่อดำเนินการสร้างตาราง</li></ul>\n<pre>php artisan migrate</pre>\n<ul><li>สร้างไฟล์ Controller ด้วยคำสั่ง ยกตัวอย่างเช่น <strong>VehicleController</strong>\n</li></ul>\n<pre>php artisan make:controller <strong>VehicleController </strong>--resource</pre>\n<ul><li>สร้างไฟล์ Model ยกตัวอย่างเช่น <strong>Vehicle</strong>\n</li></ul>\n<pre>php artisan make:model <strong>Vehicle</strong></pre>\n<ul><li>เตรียมไฟล์ Views ให้พร้อมโดยคุณจะต้องมีโฟลเดอร์ และไฟล์ที่เกี่ยวข้องกับการทำ CRUD ดังรูปตัวอย่าง</li></ul>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/265/1*IeVOzgJUhGBXVldImDvi_A.png\"></figure><ul><li>เปิดเรียงไฟล์ใน Editor รอไว้เลย เมื่อพร้อมก็ลุยได้เลย</li></ul>\n<p>— routes/web.php</p>\n<p>—app/Http/Controllers/VehicleController.php</p>\n<p>— app/Vehicle.php</p>\n<p>— resources/views/vehicle/index.blade.php</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YCW9_IVndgCfJu8_D50LDg.png\"></figure><h3>Lets’s Start the crud</h3>\n<h4>Route</h4>\n<ul><li>[route] routes/web.php</li></ul>\n<pre>Route::<strong>get</strong>('/<strong>vehicle</strong>', '<strong>VehicleController</strong>@<strong>index</strong>');<br>Route::<strong>get</strong>('/<strong>vehicle</strong>/create', '<strong>VehicleController</strong>@<strong>create</strong>');<br>Route::<strong>post</strong>('/<strong>vehicle</strong>', '<strong>VehicleController</strong>@<strong>store</strong>');<br>Route::<strong>get</strong>('/<strong>vehicle</strong>/{id}', '<strong>VehicleController</strong>@<strong>show</strong>');<br>Route::<strong>get</strong>('/<strong>vehicle</strong>/{id}/edit', '<strong>VehicleController</strong>@<strong>edit</strong>');<br>Route::<strong>put</strong>('/<strong>vehicle</strong>/{id}', '<strong>VehicleController</strong>@<strong>update</strong>');<br>Route::<strong>delete</strong>('/<strong>vehicle</strong>/{id}', '<strong>VehicleController</strong>@<strong>destroy</strong>');</pre>\n<h4>Controller</h4>\n<ul><li>[controller] app/Http/Controllers/VehicleController.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App\\Http\\Controllers;<br>use Illuminate\\Http\\Request;</pre>\n<pre>use App\\<strong>Vehicle</strong>;</pre>\n<pre>class <strong>VehicleController </strong>extends Controller<br>{    <br>    public function <strong>index</strong>(Request $request)<br>    {<br>        $keyword = $request-&gt;input('search');</pre>\n<pre>        if (!empty($keyword)) {<br>            $<strong>vehicles </strong>= <strong>Vehicle</strong>::search($keyword);<br>        } else {<br>            $<strong>vehicles </strong>= <strong>Vehicle</strong>::getAll();<br>        }</pre>\n<pre>        $data = [<br>          \"<strong>vehicles</strong>\" =&gt; $<strong>vehicles</strong>,<br>        ];</pre>\n<pre>        return view('<strong>vehicle</strong>.index', $data);<br>    }</pre>\n<pre> <br>    public function <strong>create</strong>()<br>    {<br>        return view('<strong>vehicle</strong>.create');<br>    }</pre>\n<pre> <br>    public function <strong>store</strong>(Request $request)<br>    {<br><strong> </strong>$newItem = $request-&gt;all();<br>        $<strong>vehicle </strong>= <strong>Vehicle</strong>::storeItem($newItem);<br>        return redirect('<strong>vehicle</strong>');<br>    }</pre>\n<pre><br>    public function <strong>show</strong>($id)<br>    {<br><strong>  </strong>$<strong>vehicle </strong>= <strong>Vehicle</strong>::findOrFail($id);<br>        $data = [<br>          \"<strong>vehicle</strong>\" =&gt; $<strong>vehicle</strong>,<br>        ];<br>        return view('<strong>vehicle</strong>.show', $data);<br>    }</pre>\n<pre> <br>    public function <strong>edit</strong>($id)<br>    {<br>      $vehicle = <strong>Vehicle</strong>::findOrFail($id);<br>      $data = [<br>        \"<strong>vehicle</strong>\" =&gt; $<strong>vehicle</strong>,<br>      ];<br>      return view('<strong>vehicle</strong>.edit', $data);<br>    }</pre>\n<pre> <br>    public function <strong>update</strong>(Request $request, $id)<br>    {<br>        $item = $request-&gt;all();<br><strong>Vehicle</strong>::updateItem($id,$item);<br>        return redirect('<strong>vehicle</strong>');<br>    }</pre>\n<pre><br>    public function <strong>destroy</strong>($id)<br>    {<br><strong> Vehicle</strong>::destroyItem($id);<br>        return redirect('<strong>vehicle</strong>');<br>    }<br>}</pre>\n<h4>Model</h4>\n<ul><li>[model] Vehicle.php</li></ul>\n<pre>&lt;?php</pre>\n<pre>namespace App;</pre>\n<pre>use Illuminate\\Database\\Eloquent\\Model;</pre>\n<pre>class <strong>Vehicle </strong>extends Model<br>{<br><strong>protected $table = 'vehicles';<br>    protected $primaryKey = 'id';<br>    protected $fillable = ['brand', 'series', 'colour', 'year', 'mileage'];</strong></pre>\n<pre>    public static function <strong>getAll</strong>()<br>    {<br><strong> </strong>return self::get();<br>    }</pre>\n<pre>    public static function <strong>getItem</strong>($id)<br>    {<br>        return self::findOrFail($id);<br>    }</pre>\n<pre>    public static function <strong>search</strong>($keyword)<br>    {<br><strong>return self::where('brand', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('series', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('colour', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('year', 'LIKE', \"%$keyword%\")<br>            -&gt;orWhere('mileage', 'LIKE', \"%$keyword%\")<br>            -&gt;get();</strong><br>    }</pre>\n<pre>    public static function <strong>storeItem</strong>($newItem)<br>    {<br>        return self::create($newItem);<strong>  </strong><br>    }</pre>\n<pre>    public static function <strong>updateItem</strong>($id,$item)<br>    {<br>        self::findOrFail($id)-&gt;update($item);<br>    }</pre>\n<pre>    public static function <strong>destroyItem</strong>($id)<br>    {<br>        self::findOrFail($id)-&gt;delete();<br>    }<br>}</pre>\n<h4>Views</h4>\n<ul><li>[view] views/vehicle/create.blade.php</li></ul>\n<pre>&lt;h1&gt;Create New <strong>Vehicle</strong>&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;Back&lt;/a&gt;</pre>\n<pre>&lt;form method=\"POST\" action=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;<br>    {{ csrf_field() }}<br>    {{ method_field('POST') }}</pre>\n<pre>    @include ('<strong>vehicle</strong>.form')</pre>\n<pre>    &lt;input type=\"submit\" value=\"Save\"&gt;<br>&lt;/form&gt;</pre>\n<ul><li>[view] views/vehicle/edit.blade.php</li></ul>\n<pre>&lt;h1&gt;Edit Vehicle #{{ $<strong>vehicle</strong>-&gt;id }}&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;Back&lt;/a&gt;</pre>\n<pre>&lt;form method=\"POST\" <br>      action=\"{{ url('/') }}/<strong>vehicle</strong>/{{$<strong>vehicle</strong>-&gt;id}}\" &gt;<br>    {{ method_field('PUT') }}<br>    {{ csrf_field() }}</pre>\n<pre>    @include ('<strong>vehicle</strong>.form')</pre>\n<pre>    &lt;input type=\"submit\" value=\"Save\"&gt;<br>&lt;/form&gt;</pre>\n<ul><li>[view] views/vehicle/form.blade.php</li></ul>\n<pre>&lt;div&gt;<br><strong> &lt;label&gt;Brand / ยี่ห้อ&lt;/label&gt;<br>    &lt;input  name=\"brand\" type=\"text\"<br>            value=\"{{ isset($vehicle-&gt;brand) ? $vehicle-&gt;brand : '' }}\"<br>            /&gt;</strong><br>&lt;/div&gt;<br>&lt;div&gt;<br><strong>&lt;label&gt;Series / รุ่น&lt;/label&gt;<br>    &lt;input   name=\"series\" type=\"text\"<br>             value=\"{{ isset($vehicle-&gt;series) ? $vehicle-&gt;series : '' }}\"<br>             /&gt;</strong><br>&lt;/div&gt;<br>&lt;div&gt;<br><strong>&lt;label&gt;Colour / สี&lt;/label&gt;<br>    &lt;input  name=\"colour\" type=\"text\"<br>            value=\"{{ isset($vehicle-&gt;colour) ? $vehicle-&gt;colour : '' }}\"<br>            /&gt;</strong><br>&lt;/div&gt;<br>&lt;div &gt;<br><strong>&lt;label&gt;Year / ปี&lt;/label&gt;<br>    &lt;input name=\"year\" type=\"number\"<br>           value=\"{{ isset($vehicle-&gt;year) ? $vehicle-&gt;year : '' }}\"<br>           /&gt;</strong><br>&lt;/div&gt;<br>&lt;div&gt;<br><strong>&lt;label&gt;Mileage / เลขไมล์&lt;/label&gt;<br>    &lt;input  name=\"mileage\" type=\"number\"<br>            value=\"{{ isset($vehicle-&gt;mileage) ? $vehicle-&gt;mileage : '' }}\"<br>            /&gt;</strong><br>&lt;/div&gt;</pre>\n<ul><li>[view] views/vehicle/index.blade.php</li></ul>\n<pre>&lt;h1&gt;Vehicles&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>/create\"   &gt; Add New &lt;/a&gt;</pre>\n<pre>&lt;form method=\"GET\"<br>      action=\"{{ url('/') }}/<strong>vehicle</strong>\" &gt;<br>    &lt;div&gt;<br>        &lt;input  name=\"search\"<br>                placeholder=\"Search...\"<br>                value=\"{{ request('search') }}\"<br>                /&gt;<br>        &lt;button type=\"submit\"&gt;Search&lt;/button&gt;<br>    &lt;/div&gt;<br>&lt;/form&gt;<br>&lt;table border=\"1\"&gt;<br>    &lt;thead&gt;<br>        &lt;tr&gt;<br><strong>&lt;th&gt;#&lt;/th&gt;<br>            &lt;th&gt;Brand&lt;/th&gt;<br>            &lt;th&gt;Series&lt;/th&gt;<br>            &lt;th&gt;Colour&lt;/th&gt;<br>            &lt;th&gt;Actions&lt;/th&gt;</strong><br>        &lt;/tr&gt;<br>    &lt;/thead&gt;<br>    &lt;tbody&gt;<br>    @foreach($vehicles as $vehicle)<br>        &lt;tr&gt;<br><strong>&lt;td&gt;{{ $vehicle-&gt;id }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;brand }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;series }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;colour }}&lt;/td&gt;<br>            &lt;td&gt;{{ $vehicle-&gt;mileage }}&lt;/td&gt;</strong><br>            &lt;td&gt;<br>                &lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}\"  &gt;<br>                  &lt;button&gt;View&lt;/button&gt;<br>                &lt;/a&gt;<br>                &lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}/edit\"  &gt;<br>                  &lt;button&gt;Edit&lt;/button&gt;<br>                &lt;/a&gt;</pre>\n<pre>                &lt;form method=\"POST\"<br>                      action=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}\"<br>                      style=\"display:inline\"&gt;<br>                    {{ method_field('DELETE') }}<br>                    {{ csrf_field() }}<br>                    &lt;button type=\"submit\"<br>                            onclick=\"return confirm(&amp;quot;Confirm delete?&amp;quot;)\"&gt;<br>                      Delete<br>                    &lt;/button&gt;<br>                &lt;/form&gt;<br>            &lt;/td&gt;<br>        &lt;/tr&gt;<br>    @endforeach<br>    &lt;/tbody&gt;<br>&lt;/table&gt;</pre>\n<ul><li>[view] views/vehicle/show.blade.php</li></ul>\n<pre>&lt;h1&gt;Vehicle {{ $<strong>vehicle</strong>-&gt;id }}&lt;/h1&gt;</pre>\n<pre>&lt;a href=\"{{ url('/') }}/<strong>vehicle</strong>\"&gt;&lt;button&gt;Back&lt;/button&gt;&lt;/a&gt;<br>&lt;a href=\"{{ url('/') }}/{{ $<strong>vehicle</strong>-&gt;id }}/edit\"&gt;&lt;button&gt; Edit&lt;/button&gt;&lt;/a&gt;</pre>\n<pre>&lt;form method=\"POST\"<br>    action=\"{{ url('/') }}/<strong>vehicle</strong>/{{ $<strong>vehicle</strong>-&gt;id }}\"<br>    style=\"display:inline\"&gt;<br>    {{ method_field('DELETE') }}<br>    {{ csrf_field() }}<br>    &lt;button type=\"submit\"<br>            onclick=\"return confirm(&amp;quot;Confirm delete?&amp;quot;)\"&gt;<br>      Delete<br>    &lt;/button&gt;<br>&lt;/form&gt;</pre>\n<pre>&lt;table border=\"1\"&gt;<br>    &lt;tbody&gt;<br><strong>&lt;tr&gt;&lt;th&gt;ID&lt;/th&gt;&lt;td&gt;{{ $vehicle-&gt;id }}&lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Brand&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;brand }} &lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Series&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;series }} &lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Colour&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;colour }} &lt;/td&gt;&lt;/tr&gt;<br>        &lt;tr&gt;&lt;th&gt;Mileage&lt;/th&gt;&lt;td&gt; {{ $vehicle-&gt;mileage }} &lt;/td&gt;&lt;/tr&gt;</strong><br>    &lt;/tbody&gt;<br>&lt;/table&gt;</pre>\n<h3>ผลลัพธ์</h3>\n<p>หน้าจอก็จะประมาณนี้ โดยที่สามารถ Create / Read / Update / Delete ได้ตามชื่อเลย</p>\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/409/1*krRpqBRSeeQXhQzS2WQeYA.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle\">http://localhost/crud/public/vehicle</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/411/1*HfqRgWrbjTUn9pUGAHH-DQ.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle/create\">http://localhost/crud/public/vehicle/create</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/434/1*iP6ccIYPcTKRjVEZqFnakw.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle/1/edit\">http://localhost/crud/public/vehicle/1/edit</a></figcaption></figure><figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/404/1*Oqc0d0kr5APHdLiVCrGCjg.png\"><figcaption><a href=\"http://localhost/crud/public/vehicle/1\">http://localhost/crud/public/vehicle/1</a></figcaption></figure><img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=39977b8e37c3\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/simple-crud-laravel-5-8-no-theme-39977b8e37c3\">Simple Crud Laravel 5.8 [no theme]</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "laravel",
                "crud"
            ]
        },
        {
            "title": "Laravel Terminal Command",
            "pubDate": "2019-08-21 12:46:10",
            "link": "https://medium.com/ckartisan/laravel-terminal-command-21b08951b24c?source=rss----ee8b7b98cc43---4",
            "guid": "https://medium.com/p/21b08951b24c",
            "author": "Chavalit Koweerawong",
            "thumbnail": "https://cdn-images-1.medium.com/max/1024/0*VntephkOMvH0tXNf.png",
            "description": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*VntephkOMvH0tXNf.png\"></figure><p>รวมคำสั่งของ Laravel ที่ใช้บ่อยมากๆ ไม่เคยจำได้จะใช้แต่ละครั้งก็ต้องมานั่งหา รวมมาไว้ที่นี่ที่เดียว</p>\n<h3>คำสั่ง composer ที่ใช้บ่อยทั่วไป</h3>\n<ul><li>Create project (version ล่าสุด) :</li></ul>\n<pre>composer create-project --prefer-dist laravel/laravel <strong>blog</strong></pre>\n<p>หรือ หากต้องการระบุ Version</p>\n<pre>composer create-project --prefer-dist laravel/laravel <strong>blog </strong>\"5.8\"</pre>\n<h3>คำสั่ง php artisan ที่ใช้บ่อยทั่วไป</h3>\n<ul><li>Create controller :</li></ul>\n<pre>php artisan make:controller <strong>ExampleController</strong></pre>\n<p>หรือ หากต้องการใช้ resource <strong>(Reccommend)</strong></p>\n<pre>php artisan make:controller <strong>ExampleController</strong> --resource</pre>\n<ul><li>Create model :<strong>(Reccommend)</strong>\n</li></ul>\n<pre>php artisan make:model <strong>Example</strong></pre>\n<ul><li>Check Laravel current version</li></ul>\n<pre>php artisan --version</pre>\n<ul><li>For Database Migration</li></ul>\n<pre>php artisan migrate</pre>\n<ul><li>Create Auth Views</li></ul>\n<pre>php artisan make:auth</pre>\n<ul><li>คำสั่งสร้าง Symbolic storage link</li></ul>\n<pre>php artisan storage:link</pre>\n<h3>คำสั่งที่ใช้บ่อย : Clone Laravel จาก Github</h3>\n<ul><li>Reinstall vendor folder</li></ul>\n<pre>composer install</pre>\n<ul><li>Copy .env from .env.example (for window)</li></ul>\n<pre>copy .env.example <strong>.env</strong></pre>\n<p>หรือในกรณี Linx / Max</p>\n<pre>cp .env.example <strong>.env</strong></pre>\n<ul><li>Create application key</li></ul>\n<pre>php artisan key:generate</pre>\n<h3>Error ที่พบตอน Deploy ครั้งแรก</h3>\n<h4>- เจอตอน Migrate</h4>\n<pre>Illuminate\\Database\\QueryException  : SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes (SQL: alter table `users` add unique `users_email_unique`(`email`))</pre>\n<ul><li>ถ้าคุณกำลังใช้ งานต่ำกว่า MySQL 5.7.7 release หรือต่ำกว่า MariaDB 10.2.2 release คุณต้อง config default string length ซึ่งสร้างจาก migrations มีหน้าที่ สร้างอักษร indexes ซึ่ง Configuration ที่ว่านี้สามารถทำได้โดย เพิ่มโค้ด <strong>Schema::defaultStringLength(191);</strong> ในไฟล์ <strong>app/Providers/AppServiceProvider.php </strong>ดังตัวอย่างด้านล่าง</li></ul>\n<pre>//FILE : app/Providers/AppServiceProvider.php</pre>\n<pre><strong>use Illuminate\\Support\\Facades\\Schema;</strong></pre>\n<pre>class AppServiceProvider extends ServiceProvider<br>{<br>    ...</pre>\n<pre>    public function boot()<br>    {<br><strong>        Schema::defaultStringLength(191);<br></strong>}<br>}</pre>\n<h4>- ปัญหา Permission แก้ได้ด้วยคำสั่งข้างล่าง เปลี่ยนชื่อโฟลเดอร์โปรเจคกันเอาเอง</h4>\n<pre>sudo chmod 775 -R <strong>project</strong><br>sudo chmod 777 -R <strong>project</strong>/storage</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=21b08951b24c\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/laravel-terminal-command-21b08951b24c\">Laravel Terminal Command</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "content": "\n<figure><img alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/0*VntephkOMvH0tXNf.png\"></figure><p>รวมคำสั่งของ Laravel ที่ใช้บ่อยมากๆ ไม่เคยจำได้จะใช้แต่ละครั้งก็ต้องมานั่งหา รวมมาไว้ที่นี่ที่เดียว</p>\n<h3>คำสั่ง composer ที่ใช้บ่อยทั่วไป</h3>\n<ul><li>Create project (version ล่าสุด) :</li></ul>\n<pre>composer create-project --prefer-dist laravel/laravel <strong>blog</strong></pre>\n<p>หรือ หากต้องการระบุ Version</p>\n<pre>composer create-project --prefer-dist laravel/laravel <strong>blog </strong>\"5.8\"</pre>\n<h3>คำสั่ง php artisan ที่ใช้บ่อยทั่วไป</h3>\n<ul><li>Create controller :</li></ul>\n<pre>php artisan make:controller <strong>ExampleController</strong></pre>\n<p>หรือ หากต้องการใช้ resource <strong>(Reccommend)</strong></p>\n<pre>php artisan make:controller <strong>ExampleController</strong> --resource</pre>\n<ul><li>Create model :<strong>(Reccommend)</strong>\n</li></ul>\n<pre>php artisan make:model <strong>Example</strong></pre>\n<ul><li>Check Laravel current version</li></ul>\n<pre>php artisan --version</pre>\n<ul><li>For Database Migration</li></ul>\n<pre>php artisan migrate</pre>\n<ul><li>Create Auth Views</li></ul>\n<pre>php artisan make:auth</pre>\n<ul><li>คำสั่งสร้าง Symbolic storage link</li></ul>\n<pre>php artisan storage:link</pre>\n<h3>คำสั่งที่ใช้บ่อย : Clone Laravel จาก Github</h3>\n<ul><li>Reinstall vendor folder</li></ul>\n<pre>composer install</pre>\n<ul><li>Copy .env from .env.example (for window)</li></ul>\n<pre>copy .env.example <strong>.env</strong></pre>\n<p>หรือในกรณี Linx / Max</p>\n<pre>cp .env.example <strong>.env</strong></pre>\n<ul><li>Create application key</li></ul>\n<pre>php artisan key:generate</pre>\n<h3>Error ที่พบตอน Deploy ครั้งแรก</h3>\n<h4>- เจอตอน Migrate</h4>\n<pre>Illuminate\\Database\\QueryException  : SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes (SQL: alter table `users` add unique `users_email_unique`(`email`))</pre>\n<ul><li>ถ้าคุณกำลังใช้ งานต่ำกว่า MySQL 5.7.7 release หรือต่ำกว่า MariaDB 10.2.2 release คุณต้อง config default string length ซึ่งสร้างจาก migrations มีหน้าที่ สร้างอักษร indexes ซึ่ง Configuration ที่ว่านี้สามารถทำได้โดย เพิ่มโค้ด <strong>Schema::defaultStringLength(191);</strong> ในไฟล์ <strong>app/Providers/AppServiceProvider.php </strong>ดังตัวอย่างด้านล่าง</li></ul>\n<pre>//FILE : app/Providers/AppServiceProvider.php</pre>\n<pre><strong>use Illuminate\\Support\\Facades\\Schema;</strong></pre>\n<pre>class AppServiceProvider extends ServiceProvider<br>{<br>    ...</pre>\n<pre>    public function boot()<br>    {<br><strong>        Schema::defaultStringLength(191);<br></strong>}<br>}</pre>\n<h4>- ปัญหา Permission แก้ได้ด้วยคำสั่งข้างล่าง เปลี่ยนชื่อโฟลเดอร์โปรเจคกันเอาเอง</h4>\n<pre>sudo chmod 775 -R <strong>project</strong><br>sudo chmod 777 -R <strong>project</strong>/storage</pre>\n<img src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=21b08951b24c\" width=\"1\" height=\"1\" alt=\"\"><hr>\n<p><a href=\"https://medium.com/ckartisan/laravel-terminal-command-21b08951b24c\">Laravel Terminal Command</a> was originally published in <a href=\"https://medium.com/ckartisan\">ckartisan</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>\n",
            "enclosure": {},
            "categories": [
                "terminal",
                "laravel",
                "composer",
                "artisan"
            ]
        }
    ]
}