[
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "Laravel 8 Course",
      "link": "https://medium.com/cs-vru/laravel-8-course-e1fbad5fdcfd?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1625142437000,
      "created": 1625142437000,
      "category": "course",
      "content": "บทความรวบรวมสไลด์ที่เกี่ยวกับการเขียนโปรแกรม PHP บน Framework Laravel 8 (2021) โดยอธิบายตั้งแต่การติดตั้งโปรแกรมไปจนถึงพัฒนาเป็น Application ง่ายๆ ได้ รวมทั้งเกร็ดความรู้เล็กๆ น้อยๆ เพื่อให้ทุกคนสามารถเรียนรู้และพัฒนา Laravel ได้แต่เดี๋ยวปลายปี Laravel 9 จะออกแล้วเตรียมตัวรอ featureสิ่งที่ต้องเรียนรู้มาก่อนIntroduction to GitHub [slide]GitHub Workshop [บทความ]โปรแกรมที่ต้องติดตั้งมาก่อนXampp (Google : xampp) [PHP &gt;= 7.3.x]Composer (Google : composer)Nodejs (Google : nodejs)Visual Studio Code (Google : visual studio code)Download และติดตั้งโปรแกรม Xampp / Composerเนื้่อหาที่สอน 2021[2021–07–25] Introduction to GitHub [slide]GitHub Workshop [บทความ][2021–06–25] Let’s Start with PHP — [slide][2021–06–25] Start with Laravel 8 — [slide][2021–07–02] Laravel 8 Route + View — [slide][2021–07–09] Laravel 8 x Bootstrap : Template Engine — [slide][2021–07–16] Laravel 8 Controller —[slide][2021–07–09] Laravel 8 การใช้ View ขั้นสูง — [slide][2021–07–23] Laravel 8 Migration — [slide][2021–07–23] Laravel 8 Model —[slide][2021–07–30] Laravel 8 CRUD and database : (Covid19s) —[slide][2021–08–06] Practice CRUD[2021–08–13] Midterm[2021–08–20] Laravel 6 Crud Generator — Laravel Farewell : Upload + Barcode —[2021–08–27] Laravel 6 Authentication &amp; Middleware —[2021–09–03] Laravel 6 Database Relationship (Table Join) —[2021–09–10] Laravel 6 Case Study : Shop Online —[2021–09–17] Project[2021–09–24] Laravel Deployment on Real Server (Heroku) —ReferenceLaravel 6 (LTS) CourseLaravel 8 Course was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "บทความรวบรวมสไลด์ที่เกี่ยวกับการเขียนโปรแกรม PHP บน Framework Laravel 8 (2021) โดยอธิบายตั้งแต่การติดตั้งโปรแกรมไปจนถึงพัฒนาเป็น Application ง่ายๆ ได้ รวมทั้งเกร็ดความรู้เล็กๆ น้อยๆ เพื่อให้ทุกคนสามารถเรียนรู้และพัฒนา Laravel ได้แต่เดี๋ยวปลายปี Laravel 9 จะออกแล้วเตรียมตัวรอ featureสิ่งที่ต้องเรียนรู้มาก่อนIntroduction to GitHub [slide]GitHub Workshop [บทความ]โปรแกรมที่ต้องติดตั้งมาก่อนXampp (Google : xampp) [PHP &gt;= 7.3.x]Composer (Google : composer)Nodejs (Google : nodejs)Visual Studio Code (Google : visual studio code)Download และติดตั้งโปรแกรม Xampp / Composerเนื้่อหาที่สอน 2021[2021–07–25] Introduction to GitHub [slide]GitHub Workshop [บทความ][2021–06–25] Let’s Start with PHP — [slide][2021–06–25] Start with Laravel 8 — [slide][2021–07–02] Laravel 8 Route + View — [slide][2021–07–09] Laravel 8 x Bootstrap : Template Engine — [slide][2021–07–16] Laravel 8 Controller —[slide][2021–07–09] Laravel 8 การใช้ View ขั้นสูง — [slide][2021–07–23] Laravel 8 Migration — [slide][2021–07–23] Laravel 8 Model —[slide][2021–07–30] Laravel 8 CRUD and database : (Covid19s) —[slide][2021–08–06] Practice CRUD[2021–08–13] Midterm[2021–08–20] Laravel 6 Crud Generator — Laravel Farewell : Upload + Barcode —[2021–08–27] Laravel 6 Authentication &amp; Middleware —[2021–09–03] Laravel 6 Database Relationship (Table Join) —[2021–09–10] Laravel 6 Case Study : Shop Online —[2021–09–17] Project[2021–09–24] Laravel Deployment on Real Server (Heroku) —ReferenceLaravel 6 (LTS) CourseLaravel 8 Course was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "Deploy PHP Website on Heroku (No Framework)",
      "link": "https://medium.com/ckartisan/deploy-php-website-on-heroku-no-framework-db353c3cec5f?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1624330582000,
      "created": 1624330582000,
      "category": [
         "heroku",
         "php"
      ],
      "content": "บทความนี้จะอธิบายข้้นตอนการนำ PHP Script ขึ้น cloud ของ HerokuProgram ที่ควรติดตั้งก่อนXamppComposer — https://getcomposer.org/download/Github DesktopGit-scm — https://git-scm.com/Heroku Cli — https://devcenter.heroku.com/articles/heroku-cli#download-and-installPhase 1 : Prepare your project PHP or HTMLเตรียมโปรเจคให้พร้อม อาจเปิดด้วยโปรแกรม VS Codeหากยังไม่ได้ใช้งานร่วมกับ Git โปรดพิมพ์คำสั่งgit initหากยังไม่ได้ใช้งานร่วมกับ Composer โปรดพิมพ์คำสั่ง แล้วกด Enter รัวๆcomposer initจะปรากฏไฟล์ที่ชื่อว่า composer.json ในโฟลเดอร์Phase 2 : Deploying to Herokuเปิด Terminal แล้วพิมพ์ heroku loginheroku loginเชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)//Connect with existing Appheroku git:remote -a yourmovieapp//หรือ//Crate a new Random name Heroku Appheroku creategit add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GITgit add .git commit เพื่อบันทึกการเปลี่ยนแปลงใน GITgit commit -m &quot;First Push to Heroku&quot;git pushgit push heroku main//orgit push heroku master//orgit push heroku &lt;branch&gt;Run : https://yourmovieapp.herokuapp.com/ เปลี่ยนเป็นชื่อ app ของคุณเองDone!!!Deploy PHP Website on Heroku (No Framework) was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "บทความนี้จะอธิบายข้้นตอนการนำ PHP Script ขึ้น cloud ของ HerokuProgram ที่ควรติดตั้งก่อนXamppComposer — https://getcomposer.org/download/Github DesktopGit-scm — https://git-scm.com/Heroku Cli — https://devcenter.heroku.com/articles/heroku-cli#download-and-installPhase 1 : Prepare your project PHP or HTMLเตรียมโปรเจคให้พร้อม อาจเปิดด้วยโปรแกรม VS Codeหากยังไม่ได้ใช้งานร่วมกับ Git โปรดพิมพ์คำสั่งgit initหากยังไม่ได้ใช้งานร่วมกับ Composer โปรดพิมพ์คำสั่ง แล้วกด Enter รัวๆcomposer initจะปรากฏไฟล์ที่ชื่อว่า composer.json ในโฟลเดอร์Phase 2 : Deploying to Herokuเปิด Terminal แล้วพิมพ์ heroku loginheroku loginเชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)//Connect with existing Appheroku git:remote -a yourmovieapp//หรือ//Crate a new Random name Heroku Appheroku creategit add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GITgit add .git commit เพื่อบันทึกการเปลี่ยนแปลงใน GITgit commit -m &quot;First Push to Heroku&quot;git pushgit push heroku main//orgit push heroku master//orgit push heroku &lt;branch&gt;Run : https://yourmovieapp.herokuapp.com/ เปลี่ยนเป็นชื่อ app ของคุณเองDone!!!Deploy PHP Website on Heroku (No Framework) was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "Cloud Computing",
      "link": "https://medium.com/cs-vru/cloud-computing-f9ff3f474ac0?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1624265535000,
      "created": 1624265535000,
      "category": [],
      "content": "เนื้อหาวิชา Cloud Computingหัวข้อที่สอนIntroduction to Cloud / Website and Cloud (2021–06–22)— slideCloud PAAS : Deploy web applicationUbuntu Server (2021–06–29)— slideCloud IAAS : Deploy NGINX and SSLScale Server with cloud infrastucture (2021–07–06) — slideLine Chatbot and Javascript server (2021–07–13)— slideCollect Chat data with Cloud Firestore (2021–07–20) — slideAPI and Application : Covid (2021–07–27) — slideGoogle OCRMidtermFrontend Server with ReactJS v.s. NextJS v.s. BootstrapScraping WebAuthentication with JWTAuthentication single sign onCronjobเวลาอิสระเวลาอิสระเวลาอิสระเวลาอิสระสอบปลายภาคCloud Computing was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "เนื้อหาวิชา Cloud Computingหัวข้อที่สอนIntroduction to Cloud / Website and Cloud (2021–06–22)— slideCloud PAAS : Deploy web applicationUbuntu Server (2021–06–29)— slideCloud IAAS : Deploy NGINX and SSLScale Server with cloud infrastucture (2021–07–06) — slideLine Chatbot and Javascript server (2021–07–13)— slideCollect Chat data with Cloud Firestore (2021–07–20) — slideAPI and Application : Covid (2021–07–27) — slideGoogle OCRMidtermFrontend Server with ReactJS v.s. NextJS v.s. BootstrapScraping WebAuthentication with JWTAuthentication single sign onCronjobเวลาอิสระเวลาอิสระเวลาอิสระเวลาอิสระสอบปลายภาคCloud Computing was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "Deploy PHP Laravel on Heroku",
      "link": "https://medium.com/ckartisan/deploy-php-laravel-on-heroku-d5350ede4a3b?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1623509369000,
      "created": 1623509369000,
      "category": [
         "postgresql",
         "heroku",
         "laravel"
      ],
      "content": "แนะนำการ Deploy PHP Laravel ขึ้น Heroku Server พร้อม Database Postgresติดตั้งโปรแกรมอะไรบ้างXampp : https://www.apachefriends.org/download.htmlComposer : https://getcomposer.org/download/Heroku Cli : https://devcenter.heroku.com/articles/heroku-cli#download-and-installGit Scm : https://git-scm.com/Github Desktop : https://desktop.github.com/ (Optional)Database Client : https://dbeaver.io/download/(Optional)Phase 1 : เตรียมไฟล์โปรเจค Laravelสร้างโปรเจค Larvel หรือ Clone มาจาก GithubPhase 2 : Deploying to Herokuพิมคำสั่งนี้ลงไปนี้ใน terminalecho &quot;web: vendor/bin/heroku-php-apache2 public/&quot; &gt; Procfileเปิดไฟล์ที่ชื่อว่า procfile จากนั้นลบ ฟันหนูหน้าสุดกับหลังสุดออก (ถ้ามี)&quot;web: vendor/bin/heroku-php-apache2 public/&quot;   &lt;--ไม่ใช้อันนี้web: vendor/bin/heroku-php-apache2 public/     &lt;--ใช้อันนี้เปิด Terminal แล้วพิมพ์ heroku loginheroku loginเชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)//Connect with existing Appheroku git:remote -a yourmovieapp//หรือ//Crate a new Random name Heroku Appheroku createconfig APP_KEY in heroku เช่น (เอามาจาก .env)heroku config:set APP_KEY=base64:0NtfcbBLZ/Bjh4PgMJTszrtE2VaHroriA6dg2nBKzhA=config ASSET_URL in heroku เช่น yourmovieappheroku config:set ASSET_URL=https://&lt;yourmovieapp&gt;.herokuapp.comgit add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GITgit add .git commit เพื่อบันทึกการเปลี่ยนแปลงใน GITgit commit -m &quot;First Push to Heroku&quot;git pushgit push heroku main//orgit push heroku master//orgit push heroku &lt;branch&gt;Run : https://yourmovieapp.herokuapp.com/ เปลี่ยนเป็นชื่อ app ของคุณเองPhase 3 : Setup Database : Postgresqlมาหน้า Resource แล้วพิมพ์ค้นหา “Heroku Postgres”พิมคำสั่ง heroku pg:credentials:url เพื่อดูรหัสเชื่อมต่อฐานข้อมูล จากนั้นให้ copy Connection URL ตามที่heroku pg:credentials:urlConnection information for default credential.Connection info string:   &quot;dbname=xxxxx host=ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com port=5432 user=xxxxxxx password=xxxxxxxx sslmode=require&quot;Connection URL:   postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxxadd config database (DB_URL ใช้ของส่วนตัวนะครับ)heroku config:add DB_CONNECTION=pgsqlheroku config:add DB_URL=postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxxmigrateheroku run php artisan migrateเรียบร้อยDeploy PHP Laravel on Heroku was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "แนะนำการ Deploy PHP Laravel ขึ้น Heroku Server พร้อม Database Postgresติดตั้งโปรแกรมอะไรบ้างXampp : https://www.apachefriends.org/download.htmlComposer : https://getcomposer.org/download/Heroku Cli : https://devcenter.heroku.com/articles/heroku-cli#download-and-installGit Scm : https://git-scm.com/Github Desktop : https://desktop.github.com/ (Optional)Database Client : https://dbeaver.io/download/(Optional)Phase 1 : เตรียมไฟล์โปรเจค Laravelสร้างโปรเจค Larvel หรือ Clone มาจาก GithubPhase 2 : Deploying to Herokuพิมคำสั่งนี้ลงไปนี้ใน terminalecho &quot;web: vendor/bin/heroku-php-apache2 public/&quot; &gt; Procfileเปิดไฟล์ที่ชื่อว่า procfile จากนั้นลบ ฟันหนูหน้าสุดกับหลังสุดออก (ถ้ามี)&quot;web: vendor/bin/heroku-php-apache2 public/&quot;   &lt;--ไม่ใช้อันนี้web: vendor/bin/heroku-php-apache2 public/     &lt;--ใช้อันนี้เปิด Terminal แล้วพิมพ์ heroku loginheroku loginเชื่อมต่อกับ Heroku App ที่คุณสร้าง ด้วยคำสั่งนี้ (เช่น yourmovieapp) หรือสร้าง Heroku app ใหม่ (Random name)//Connect with existing Appheroku git:remote -a yourmovieapp//หรือ//Crate a new Random name Heroku Appheroku createconfig APP_KEY in heroku เช่น (เอามาจาก .env)heroku config:set APP_KEY=base64:0NtfcbBLZ/Bjh4PgMJTszrtE2VaHroriA6dg2nBKzhA=config ASSET_URL in heroku เช่น yourmovieappheroku config:set ASSET_URL=https://&lt;yourmovieapp&gt;.herokuapp.comgit add เพื่อเลือกที่ต้องการให้มีการเปลี่ยนแปลงใน GITgit add .git commit เพื่อบันทึกการเปลี่ยนแปลงใน GITgit commit -m &quot;First Push to Heroku&quot;git pushgit push heroku main//orgit push heroku master//orgit push heroku &lt;branch&gt;Run : https://yourmovieapp.herokuapp.com/ เปลี่ยนเป็นชื่อ app ของคุณเองPhase 3 : Setup Database : Postgresqlมาหน้า Resource แล้วพิมพ์ค้นหา “Heroku Postgres”พิมคำสั่ง heroku pg:credentials:url เพื่อดูรหัสเชื่อมต่อฐานข้อมูล จากนั้นให้ copy Connection URL ตามที่heroku pg:credentials:urlConnection information for default credential.Connection info string:   &quot;dbname=xxxxx host=ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com port=5432 user=xxxxxxx password=xxxxxxxx sslmode=require&quot;Connection URL:   postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxxadd config database (DB_URL ใช้ของส่วนตัวนะครับ)heroku config:add DB_CONNECTION=pgsqlheroku config:add DB_URL=postgres://zfyherpawptwhn:xxxxxxxxxxxf@ec2-xx-xxx-xxx-xxx.compute-1.amazonaws.com:5432/xxxxxxxxxxxmigrateheroku run php artisan migrateเรียบร้อยDeploy PHP Laravel on Heroku was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "DigitalOcean Setup Nginx Ubuntu 20.04 + PHPMYADMIN + SSL",
      "link": "https://medium.com/ckartisan/digitalocean-setup-nginx-ubuntu-20-04-phpmyadmin-ssl-8cd0d51c09c8?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1621755761000,
      "created": 1621755761000,
      "category": [
         "nginx",
         "ubuntu-server",
         "phpmyadmin",
         "digitalocean",
         "lemp"
      ],
      "content": "วันนี้เราจะมาลอง Nginx Ubuntu 20.04 จะแตกต่างจาก apache2 เวอร์ชั่น 18.04 อย่างไร เด๋วได้รู้กัน โดย server ตัวนี้เลือกใช้งาน droplet marketplace ที่ชื่อว่า LEMPPrerequisites : เริ่มตั้งแต่เลือก Dropletผมเลือกแบบ Marketplace : LEMP มีซอฟแวร์ต่อไปนี้ติดมาให้แล้วก็เลยไม่ต้องไปวุ่นวายมากphp 7.4nginxmysql 8cerbotฯลฯซึ่ง Image ตัวนี้จะมีสิ่งที่ต้องติดตั้งเพิ่มด้วย ได้แก่PHP Extension บางตัวPHPMYMADINติดตั้ง node และอื่นๆจากนั้นก็เข้าไปใน puty ใส่ password ต่างๆ ให้เรียบร้อยPhase 1.0 : InstallPHP Modules [for Laravel]sudo apt updatesudo apt install php-mbstring php-xml php-bcmathNode Serversudo apt install nodejsPhase 2.0 : Install your code by gitMake a new folder in /var/wwwsudo mkdir -p /var/www/example.comgo inside your new directorycd /var/www/example.comclone project from git, assume that my repository name “example”git clone  https://github.com/arc6828/examplePhase 2.1 : For Laravel Project only (skip this step if you are not)set permission the folder name “example”sudo chmod 775 -R exampleset permission the folder example/storage to 777sudo chmod 777 -R example/storagego inside your foldercd examplerefresh vendor foldercomposer installsetup .envcp .env.example .envset keyphp artisan key:generatechange ownersudo chown -R www-data.www-data storagesudo chown -R www-data.www-data bootstrap/cachePhase 3.1 : How to setup Nginx Server block for laravel …สร้างไฟล์ /etc/nginx/sites-available/example ด้วย nano editornano /etc/nginx/sites-available/example.comedit with the path of your project [for laravel only]server {    listen 80;    server_name example.com www.example.com;    root /var/www/example.com/example/public;    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;    add_header X-XSS-Protection &quot;1; mode=block&quot;;    add_header X-Content-Type-Options &quot;nosniff&quot;;    index index.html index.htm index.php;    charset utf-8;    location / {        try_files $uri $uri/ /index.php?$query_string;    }    location = /favicon.ico { access_log off; log_not_found off; }    location = /robots.txt  { access_log off; log_not_found off; }    error_page 404 /index.php;    location ~ \\.php$ {        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;        include fastcgi_params;    }    location ~ /\\.(?!well-known).* {        deny all;    }}activate the hostsudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/example.comตรวจสอบว่า nginx ของคุณทำงานได้sudo nginx -t//OUTPUTOutputnginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successfulหากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่restart nginxsudo service nginx restartRun browser http://example.comPhase 3.2 : How to setup Nginx Server block for node applacation with proxy reverse…ก่อนที่จะทำ server block เช็คสักนิดนึงว่า Application ของคุณรันได้ติดตั้ง pm2 และ serveyarn global add pm2yarn global add serverun build in your project folder and run (for reactjs)yarn run buildpm2 serve build 3000 --spaหรือบาง app ก็รันแบบนี้ (for node application)pm2 start backend/server.jsหรือบาง app ก็รันแบบนี้ (for nextjs) เปลี่ยนชื่อเอาเองนะpm2 start yarn --name &quot;nextjs&quot; --interpreter bash -- startเช็คว่ามีอะไรรันอยู่pm2 listdelete ที่ไม่ต้องการpm2 delete &lt;process&gt;เช็คว่า app ของคุณรันได้curl http://localhost:3000step ต่อจากนี้เป็นการทำ server blockสร้างไฟล์ /etc/nginx/sites-available/example ด้วย nano editornano /etc/nginx/sites-available/example.comedit with the path of your project [for node applacation with proxy reverse…]server {    listen 80;    server_name example.com www.example.com;    charset utf-8;    location / {        proxy_pass http://localhost:3000;        proxy_http_version 1.1;        proxy_set_header Upgrade $http_upgrade;        proxy_set_header Connection &#39;upgrade&#39;;        proxy_set_header Host $host;        proxy_cache_bypass $http_upgrade;    }}activate the hostsudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/ตรวจสอบว่า nginx ของคุณทำงานได้sudo nginx -t//OUTPUTOutputnginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successfulหากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่restart nginxsudo service nginx restartRun browser http://example.comPhase 4 ติดตั้ง phpmyadmininstallsudo apt updatesudo apt install phpmyadminในระหว่างขั้นตอนการติดตั้ง phpMyAdmin คุณจะได้รับแจ้งให้เลือกเว็บเซิร์ฟเวอร์ (Apache หรือ Lighttpd) อย่างไรก็ตามเนื่องจากคุณใช้ Nginx เป็นเว็บเซิร์ฟเวอร์คุณจึงไม่ควรเลือกตัวเลือกเหล่านี้ ให้กด TAB เพื่อไฮไลต์ &lt;Ok&gt; จากนั้นกด ENTER เพื่อดำเนินการติดตั้งต่อจากนั้นคุณจะได้รับแจ้งว่าจะใช้ dbconfig-common ในการกำหนดค่าฐานข้อมูลแอปพลิเคชันหรือไม่ เลือก : &lt;ใช่&gt;เมื่อติดตั้ง phpmyadmin จะยังใช้ไม่ได้จนว่าจะทำ symbolic link#access phpmyadmin with IPsudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadminหรือ#access phpmyadmin with your larvel domainsudo ln -s /usr/share/phpmyadmin /var/www/example.com/example/public/phpmyadminRunhttps://your_IP/phpmyadminhttps://server_domain/phpmyadminPhase 5 : Adjusting User Authentication and Privilegesเข้า Mysqlsudo mysqlเปลี่ยนแปลง rootALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;เพิ่ม userCREATE USER &#39;sammy&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;หรือCREATE USER &#39;sammy&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;มอบอำนาจให้หมดเลย ได้แก่ จัดการ user , จัดการ DB, จัดการ table , ฯลฯGRANT ALL PRIVILEGES ON *.* TO &#39;sammy&#39;@&#39;localhost&#39; WITH GRANT OPTION;ระบุตารางให้แก่บางคนGRANT USAGE ON *.* TO &#39;sammy&#39;@&#39;%&#39;;ALTER USER &#39;sammy&#39;@&#39;%&#39; REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;GRANT ALL PRIVILEGES ON `db_name`.* TO &#39;sammy&#39;@&#39;%&#39;;That’s allอ้างอิงติดตั้งแบบพื้นฐานHow To Install and Configure Laravel with Nginx on Ubuntu 20.04 (LEMP) | DigitalOceanHow To Install and Secure phpMyAdmin with Nginx on an Ubuntu 20.04 Server | DigitalOceanHow To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOceanวิธีติดตั้ง SSL ด้วย Let’s Encrypt on Ubuntu 20How To Secure Nginx with Let&#39;s Encrypt on Ubuntu 20.04 | DigitalOceanServer blockHow To Set Up a Node.js Application for Production on Ubuntu 20.04 | DigitalOceanHow To Deploy a React Application with Nginx on Ubuntu 20.04 | DigitalOceanDevahoy | วิธีการ Setup Server สำหรับ Node.js และ React ด้วย NGINXCheck DSNDNS Lookup | DigitalOceanSetup Google MailHow To Set Up Gmail with Your Domain on DigitalOcean | DigitalOceanCreate UserCreating a User AccountStackPathcut -d: -f1 /etc/passwdCrontabCrontab in Linux with 20 Useful Examples to Schedule Jobs - TecAdminDigitalOcean Setup Nginx Ubuntu 20.04 + PHPMYADMIN + SSL was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "วันนี้เราจะมาลอง Nginx Ubuntu 20.04 จะแตกต่างจาก apache2 เวอร์ชั่น 18.04 อย่างไร เด๋วได้รู้กัน โดย server ตัวนี้เลือกใช้งาน droplet marketplace ที่ชื่อว่า LEMPPrerequisites : เริ่มตั้งแต่เลือก Dropletผมเลือกแบบ Marketplace : LEMP มีซอฟแวร์ต่อไปนี้ติดมาให้แล้วก็เลยไม่ต้องไปวุ่นวายมากphp 7.4nginxmysql 8cerbotฯลฯซึ่ง Image ตัวนี้จะมีสิ่งที่ต้องติดตั้งเพิ่มด้วย ได้แก่PHP Extension บางตัวPHPMYMADINติดตั้ง node และอื่นๆจากนั้นก็เข้าไปใน puty ใส่ password ต่างๆ ให้เรียบร้อยPhase 1.0 : InstallPHP Modules [for Laravel]sudo apt updatesudo apt install php-mbstring php-xml php-bcmathNode Serversudo apt install nodejsPhase 2.0 : Install your code by gitMake a new folder in /var/wwwsudo mkdir -p /var/www/example.comgo inside your new directorycd /var/www/example.comclone project from git, assume that my repository name “example”git clone  https://github.com/arc6828/examplePhase 2.1 : For Laravel Project only (skip this step if you are not)set permission the folder name “example”sudo chmod 775 -R exampleset permission the folder example/storage to 777sudo chmod 777 -R example/storagego inside your foldercd examplerefresh vendor foldercomposer installsetup .envcp .env.example .envset keyphp artisan key:generatechange ownersudo chown -R www-data.www-data storagesudo chown -R www-data.www-data bootstrap/cachePhase 3.1 : How to setup Nginx Server block for laravel …สร้างไฟล์ /etc/nginx/sites-available/example ด้วย nano editornano /etc/nginx/sites-available/example.comedit with the path of your project [for laravel only]server {    listen 80;    server_name example.com www.example.com;    root /var/www/example.com/example/public;    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;    add_header X-XSS-Protection &quot;1; mode=block&quot;;    add_header X-Content-Type-Options &quot;nosniff&quot;;    index index.html index.htm index.php;    charset utf-8;    location / {        try_files $uri $uri/ /index.php?$query_string;    }    location = /favicon.ico { access_log off; log_not_found off; }    location = /robots.txt  { access_log off; log_not_found off; }    error_page 404 /index.php;    location ~ \\.php$ {        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;        include fastcgi_params;    }    location ~ /\\.(?!well-known).* {        deny all;    }}activate the hostsudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/example.comตรวจสอบว่า nginx ของคุณทำงานได้sudo nginx -t//OUTPUTOutputnginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successfulหากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่restart nginxsudo service nginx restartRun browser http://example.comPhase 3.2 : How to setup Nginx Server block for node applacation with proxy reverse…ก่อนที่จะทำ server block เช็คสักนิดนึงว่า Application ของคุณรันได้ติดตั้ง pm2 และ serveyarn global add pm2yarn global add serverun build in your project folder and run (for reactjs)yarn run buildpm2 serve build 3000 --spaหรือบาง app ก็รันแบบนี้ (for node application)pm2 start backend/server.jsหรือบาง app ก็รันแบบนี้ (for nextjs) เปลี่ยนชื่อเอาเองนะpm2 start yarn --name &quot;nextjs&quot; --interpreter bash -- startเช็คว่ามีอะไรรันอยู่pm2 listdelete ที่ไม่ต้องการpm2 delete &lt;process&gt;เช็คว่า app ของคุณรันได้curl http://localhost:3000step ต่อจากนี้เป็นการทำ server blockสร้างไฟล์ /etc/nginx/sites-available/example ด้วย nano editornano /etc/nginx/sites-available/example.comedit with the path of your project [for node applacation with proxy reverse…]server {    listen 80;    server_name example.com www.example.com;    charset utf-8;    location / {        proxy_pass http://localhost:3000;        proxy_http_version 1.1;        proxy_set_header Upgrade $http_upgrade;        proxy_set_header Connection &#39;upgrade&#39;;        proxy_set_header Host $host;        proxy_cache_bypass $http_upgrade;    }}activate the hostsudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/ตรวจสอบว่า nginx ของคุณทำงานได้sudo nginx -t//OUTPUTOutputnginx: the configuration file /etc/nginx/nginx.conf syntax is oknginx: configuration file /etc/nginx/nginx.conf test is successfulหากไม่ขึ้น Successful แสดงว่าคุณ config ผิดต้องกลับไป config ใหม่restart nginxsudo service nginx restartRun browser http://example.comPhase 4 ติดตั้ง phpmyadmininstallsudo apt updatesudo apt install phpmyadminในระหว่างขั้นตอนการติดตั้ง phpMyAdmin คุณจะได้รับแจ้งให้เลือกเว็บเซิร์ฟเวอร์ (Apache หรือ Lighttpd) อย่างไรก็ตามเนื่องจากคุณใช้ Nginx เป็นเว็บเซิร์ฟเวอร์คุณจึงไม่ควรเลือกตัวเลือกเหล่านี้ ให้กด TAB เพื่อไฮไลต์ &lt;Ok&gt; จากนั้นกด ENTER เพื่อดำเนินการติดตั้งต่อจากนั้นคุณจะได้รับแจ้งว่าจะใช้ dbconfig-common ในการกำหนดค่าฐานข้อมูลแอปพลิเคชันหรือไม่ เลือก : &lt;ใช่&gt;เมื่อติดตั้ง phpmyadmin จะยังใช้ไม่ได้จนว่าจะทำ symbolic link#access phpmyadmin with IPsudo ln -s /usr/share/phpmyadmin /var/www/html/phpmyadminหรือ#access phpmyadmin with your larvel domainsudo ln -s /usr/share/phpmyadmin /var/www/example.com/example/public/phpmyadminRunhttps://your_IP/phpmyadminhttps://server_domain/phpmyadminPhase 5 : Adjusting User Authentication and Privilegesเข้า Mysqlsudo mysqlเปลี่ยนแปลง rootALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;เพิ่ม userCREATE USER &#39;sammy&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;หรือCREATE USER &#39;sammy&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;มอบอำนาจให้หมดเลย ได้แก่ จัดการ user , จัดการ DB, จัดการ table , ฯลฯGRANT ALL PRIVILEGES ON *.* TO &#39;sammy&#39;@&#39;localhost&#39; WITH GRANT OPTION;ระบุตารางให้แก่บางคนGRANT USAGE ON *.* TO &#39;sammy&#39;@&#39;%&#39;;ALTER USER &#39;sammy&#39;@&#39;%&#39; REQUIRE NONE WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0;GRANT ALL PRIVILEGES ON `db_name`.* TO &#39;sammy&#39;@&#39;%&#39;;That’s allอ้างอิงติดตั้งแบบพื้นฐานHow To Install and Configure Laravel with Nginx on Ubuntu 20.04 (LEMP) | DigitalOceanHow To Install and Secure phpMyAdmin with Nginx on an Ubuntu 20.04 Server | DigitalOceanHow To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOceanวิธีติดตั้ง SSL ด้วย Let’s Encrypt on Ubuntu 20How To Secure Nginx with Let&#39;s Encrypt on Ubuntu 20.04 | DigitalOceanServer blockHow To Set Up a Node.js Application for Production on Ubuntu 20.04 | DigitalOceanHow To Deploy a React Application with Nginx on Ubuntu 20.04 | DigitalOceanDevahoy | วิธีการ Setup Server สำหรับ Node.js และ React ด้วย NGINXCheck DSNDNS Lookup | DigitalOceanSetup Google MailHow To Set Up Gmail with Your Domain on DigitalOcean | DigitalOceanCreate UserCreating a User AccountStackPathcut -d: -f1 /etc/passwdCrontabCrontab in Linux with 20 Useful Examples to Schedule Jobs - TecAdminDigitalOcean Setup Nginx Ubuntu 20.04 + PHPMYADMIN + SSL was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "วิทยาการคอมพิวเตอร์ รับสมัครนักศึกษา ปีการศึกษา 2564 รอบโควต้า(ปริญญาตรีภาคจันทร์-ศุกร์…",
      "link": "https://medium.com/cs-vru/%E0%B8%A7%E0%B8%B4%E0%B8%97%E0%B8%A2%E0%B8%B2%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%84%E0%B8%AD%E0%B8%A1%E0%B8%9E%E0%B8%B4%E0%B8%A7%E0%B9%80%E0%B8%95%E0%B8%AD%E0%B8%A3%E0%B9%8C-%E0%B8%A3%E0%B8%B1%E0%B8%9A%E0%B8%AA%E0%B8%A1%E0%B8%B1%E0%B8%84%E0%B8%A3%E0%B8%99%E0%B8%B1%E0%B8%81%E0%B8%A8%E0%B8%B6%E0%B8%81%E0%B8%A9%E0%B8%B2-%E0%B8%9B%E0%B8%B5%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%A8%E0%B8%B6%E0%B8%81%E0%B8%A9%E0%B8%B2-2564-%E0%B8%A3%E0%B8%AD%E0%B8%9A%E0%B9%82%E0%B8%84%E0%B8%A7%E0%B8%95%E0%B9%89%E0%B8%B2-%E0%B8%9B%E0%B8%A3%E0%B8%B4%E0%B8%8D%E0%B8%8D%E0%B8%B2%E0%B8%95%E0%B8%A3%E0%B8%B5%E0%B8%A0%E0%B8%B2%E0%B8%84%E0%B8%88%E0%B8%B1%E0%B8%99%E0%B8%97%E0%B8%A3%E0%B9%8C-%E0%B8%A8%E0%B8%B8%E0%B8%81%E0%B8%A3%E0%B9%8C-a2376904365?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1612332272000,
      "created": 1612332272000,
      "category": [
         "cats",
         "สมัครเรียน",
         "วิทยาการคอมพิวเตอร์",
         "ปริญญาตรี",
         "computer-science"
      ],
      "content": "วิทยาการคอมพิวเตอร์ รับสมัครนักศึกษา ปีการศึกษา 2564 “รอบโควต้า”(ปริญญาตรีภาคจันทร์-ศุกร์ และภาคเสาร์-อาทิตย์)หลักสูตรวิทยาการคอมพิวเตอร์ คณะวิทยาศาสตร์และเทคโนโลยี มหาวิทยาลัยราชภัฏวไลยอลงกรณ์ ในพระบรมราชูปถัมภ์ รับสมัคร นักศึกษาปริญญาตรีปีการศึกษา 64 สำหรับเรียนจันทร์-ศุกร์ “รอบโควต้า” และเรียนเสาร์-อาทิตย์ ตั้งแต่วันนี้เป็นต้นไป สนใจดูรายละเอียดและกรอกใบสมัครได้ที่นี่ สอบถามข้อมูลการรับสมัครเพิ่มเติม โทรด่วน. 083–138–0981รายะละเอียดการสมัครเรียนหลักสูตรวิทยาการคอมพิวเตอร์รับสมัครนักศึกษาปริญญาตรีระยะเวลาการสมัครผ่านเว็บไซต์กลางของมหาวิทยาลัย : http://ent.vru.ac.th/ปริญญาตรีเรียนจันทร์ — ศุกร์ สมัครเรียนได้ตั้งแต่ วันนี้ — พฤษภาคม 2564ปริญญาตรีเรียนเสาร์ — อาทิตย์ สมัครเรียนได้ตั้งแต่ วันนี้ — พฤษภาคม 2564(เปิดเทอม มิถุนายน 2564)(เปิดเทอม มิถุนายน 2564)ช่องทางการสมัครและชำระเงินสมัครเรียนผ่านส่วนกลางทุกประเภท(ค่าสมัคร 300 บาท)สมัครเรียนผ่านคณะประเภทจันทร์ — ศุกร์(ฟรีค่าสมัคร)ลิงค์สำรองกรอกผ่าน Google Formทุกประเภท(ค่าสมัคร 300 บาท)หลักจากนักศึกษามีชื่ออยู่ในระบบลงทะเบียนของมหาวิทยาลัยแล้ว นักศึกษาสามารถเข้าไปพิมพ์ใบชำระเงินได้ที่ http://ent.vru.ac.th/ โดยเลือกเข้าสู่ระบบก่อน ด้วยใช้รหัสบัตรประจำตัวประชาชน 13 หลัก ให้กรอกในช่อง Username และ Password ทั้งคู่ จากนั้นกดปุ่มพิมพ์ใบชำระเงินชำระเงินค่าสมัครได้ที่เคาน์เตอร์เซอร์วิส 7–11 ทุกสาขาใกล้บ้านตารางการรับสมัครนักศึกษา TCAS 64 รอบโควต้า (ปริญญาตรี จันทร์-ศุกร์)รับสมัคร 8 ก.พ. — 30 มี.ค. 64 http://ent.vru.ac.thชำระเงินค่าสมัคร 8 ก.พ. — 31 มี.ค. 64 เคาน์เตอร์เซอร์วิส/มหาวิทยาลัยประกาศรายขื่อผู้มีสิทธิ์สอบสัมภาษณ์ 3 เม.ย. 63 http://ent.vru.ac.thสอบสัมภาษณ์ 3 พ.ค. 64 มหาวิทยาลัยประกาศรายชื่อผู้ผ่านการคัดเลือก 8 พ.ค. 64 http://ent.vru.ac.thยืนยันสิทธิ์ Clearing House เข้าศึกษา 10–11 พ.ค.64 https://www.mytcas.com/ประกาศรายชื่อผู้มีสิทธิ์เข้าศึกษา 15 พ.ค. 64 http://ent.vru.ac.thชำระค่าธรรมเนียมแรกเข้า 20–31 พ.ค. 64 เคาน์เตอร์เซอร์วิส/มหาวิทยาลัยชำระเงินลงทะเบียนนักศึกษาใหม่ 1–10 มิ.ย. 64 เคาน์เตอร์เซอร์วิส/มหาวิทยาลัยรับรายงานตัวนักศึกษาใหม่ 14 มิถุนายน 2564 (สำนักส่งเสริมวิชาการและงานทะเบียน)ปฐมนิเทศนักศึกษาใหม่ 15–18 มิถุนายน 2564ตารางการรับสมัครนักศึกษาปริญญาตรี เสาร์-อาทิตย์ 64PDF ประกาศรับสมัครภาคเสาร์ — อาทิตย์เปิดรับสมัครออนไลน์ แนบวุฒิการศึกษา และชำระเงินค่าสมัครตั้งแต่วันนี้ ถึง 16 พฤษภาคม 2564ประกาศรายชื่อผู้มีสิทธิ์เข้าศึกษาและสาขาวิชาที่เปิดเรียนได้วันที่ 20 พฤษภาคม 2564ผู้สมัครเลือกสาขาวิชาใหม่ในสาขาวิชาที่ไม่สามารถเปิดเรียนได้ ในระบบรับสมัคร วันที่ 21–26 พฤษภาคม 2564ประกาศรายชื่อผู้มีสิทธิ์เข้าศึกษา (เพิ่มเติม)วันที่ 30 พฤษภาคม 2564ชำระเงินลงทะเบียนที่เคาน์เตอร์เซอร์วิส 7–11/มหาวิทยาลัยวันที่ 1–15 มิถุนายน 2564ปฐมนิเทศภายในมิถุนายน 2564 (รอประกาศอย่างเป็นทางการ)เปิดภาคการศึกษาที่ 1/2564 วันที่ 26 มิถุนายน 2564อัตราค่าธรรมเนียมการศึกษาวิทยาการคอมพิวเตอร์ #หมายเหตุ* อัตราค่าธรรมเนียมภาคเรียนที่ 3 (ฤดูร้อน) ขึ้นอยู่กับหน่วยกิตที่ลงTECHNOLOGY STACK 2021แต่ละชั้นปีเรียนอะไร …ปี 1 ฺคุณจะได้เรียนรู้การเขียนโปรแกรมพื้นฐาน เช่น C Python รวมไปถึงการพัฒนา Web Frontend เช่น HTML CSS JS รวมถึงหัดใช้งาน git serviceปี 2 คุณจะเริ่มได้เริ่มเรียนรู้อะไรเกี่ยวกับ Backend ต่างๆ ภาษา Object Oriented เช่น ตระกูล java รวมไปถึงฐานข้อมูลต่างๆ ที่อยู่ในความนิยมปี 3 คุณจะได้ลองทำระบบที่มีการนำ Backend และ Frondend มารวมกัน ทั้งในรูปแบบ Web Application , Mobile Application, Internet Of Thing หรือแม้กระทั่ง Application Standaloneปี 4 คุณจะได้ทำความรู้จักกับระบบ Infrastucture on cloud ต่างๆ ซึ่งมีอยู่ด้วยกันหลายค่าย รวมไปถึงความรู้พื้นฐานเกี่ยวกับ data science และปัญญาประดิษฐ์สุดท้าย รับประกันได้ว่าเมื่อคุณได้เก็บเกี่ยวทุกอย่างที่อยู่ในหลักสูตรเราแล้ว คุณพร้อมแล้วสำหรับการเริ่มต้นเป็นโปรแกรมเมอร์ได้เลยติดตามข่าวสารการสมัครได้ที่นี่หลักจากที่คุณได้สมัครเข้ามาแล้ว คุณสามารถติดตามข่าวสารการสมัครของคุณ รวมถึงการประกาศต่างๆ จากทางมหาวิทยาลัยอย่างใกล้ชิดให้ที่ Line กลุ่มของหลักสูตร โดยจะแบ่งเป็น 2 กลุ่ม ได้แก่่CS VUR #64 (จันทร์ — ศุกร์)http://line.me/ti/g/MbQa_Tw6BoCS VUR #64 (เสาร์ — อาทิตย์)LINE｜always at your side.วิทยาการคอมพิวเตอร์ รับสมัครนักศึกษา ปีการศึกษา 2564(ปริญญาตรีภาคจันทร์-ศุกร์ และภาคเสาร์-อาทิตย์)วิทยาการคอมพิวเตอร์ รับสมัครนักศึกษา ปีการศึกษา 2564 รอบโควต้า(ปริญญาตรีภาคจันทร์-ศุกร์… was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "วิทยาการคอมพิวเตอร์ รับสมัครนักศึกษา ปีการศึกษา 2564 “รอบโควต้า”(ปริญญาตรีภาคจันทร์-ศุกร์ และภาคเสาร์-อาทิตย์)หลักสูตรวิทยาการคอมพิวเตอร์ คณะวิทยาศาสตร์และเทคโนโลยี มหาวิทยาลัยราชภัฏวไลยอลงกรณ์ ในพระบรมราชูปถัมภ์ รับสมัคร นักศึกษาปริญญาตรีปีการศึกษา 64 สำหรับเรียนจันทร์-ศุกร์ “รอบโควต้า” และเรียนเสาร์-อาทิตย์ ตั้งแต่วันนี้เป็นต้นไป สนใจดูรายละเอียดและกรอกใบสมัครได้ที่นี่ สอบถามข้อมูลการรับสมัครเพิ่มเติม โทรด่วน. 083–138–0981รายะละเอียดการสมัครเรียนหลักสูตรวิทยาการคอมพิวเตอร์รับสมัครนักศึกษาปริญญาตรีระยะเวลาการสมัครผ่านเว็บไซต์กลางของมหาวิทยาลัย : http://ent.vru.ac.th/ปริญญาตรีเรียนจันทร์ — ศุกร์ สมัครเรียนได้ตั้งแต่ วันนี้ — พฤษภาคม 2564ปริญญาตรีเรียนเสาร์ — อาทิตย์ สมัครเรียนได้ตั้งแต่ วันนี้ — พฤษภาคม 2564(เปิดเทอม มิถุนายน 2564)(เปิดเทอม มิถุนายน 2564)ช่องทางการสมัครและชำระเงินสมัครเรียนผ่านส่วนกลางทุกประเภท(ค่าสมัคร 300 บาท)สมัครเรียนผ่านคณะประเภทจันทร์ — ศุกร์(ฟรีค่าสมัคร)ลิงค์สำรองกรอกผ่าน Google Formทุกประเภท(ค่าสมัคร 300 บาท)หลักจากนักศึกษามีชื่ออยู่ในระบบลงทะเบียนของมหาวิทยาลัยแล้ว นักศึกษาสามารถเข้าไปพิมพ์ใบชำระเงินได้ที่ http://ent.vru.ac.th/ โดยเลือกเข้าสู่ระบบก่อน ด้วยใช้รหัสบัตรประจำตัวประชาชน 13 หลัก ให้กรอกในช่อง Username และ Password ทั้งคู่ จากนั้นกดปุ่มพิมพ์ใบชำระเงินชำระเงินค่าสมัครได้ที่เคาน์เตอร์เซอร์วิส 7–11 ทุกสาขาใกล้บ้านตารางการรับสมัครนักศึกษา TCAS 64 รอบโควต้า (ปริญญาตรี จันทร์-ศุกร์)รับสมัคร 8 ก.พ. — 30 มี.ค. 64 http://ent.vru.ac.thชำระเงินค่าสมัคร 8 ก.พ. — 31 มี.ค. 64 เคาน์เตอร์เซอร์วิส/มหาวิทยาลัยประกาศรายขื่อผู้มีสิทธิ์สอบสัมภาษณ์ 3 เม.ย. 63 http://ent.vru.ac.thสอบสัมภาษณ์ 3 พ.ค. 64 มหาวิทยาลัยประกาศรายชื่อผู้ผ่านการคัดเลือก 8 พ.ค. 64 http://ent.vru.ac.thยืนยันสิทธิ์ Clearing House เข้าศึกษา 10–11 พ.ค.64 https://www.mytcas.com/ประกาศรายชื่อผู้มีสิทธิ์เข้าศึกษา 15 พ.ค. 64 http://ent.vru.ac.thชำระค่าธรรมเนียมแรกเข้า 20–31 พ.ค. 64 เคาน์เตอร์เซอร์วิส/มหาวิทยาลัยชำระเงินลงทะเบียนนักศึกษาใหม่ 1–10 มิ.ย. 64 เคาน์เตอร์เซอร์วิส/มหาวิทยาลัยรับรายงานตัวนักศึกษาใหม่ 14 มิถุนายน 2564 (สำนักส่งเสริมวิชาการและงานทะเบียน)ปฐมนิเทศนักศึกษาใหม่ 15–18 มิถุนายน 2564ตารางการรับสมัครนักศึกษาปริญญาตรี เสาร์-อาทิตย์ 64PDF ประกาศรับสมัครภาคเสาร์ — อาทิตย์เปิดรับสมัครออนไลน์ แนบวุฒิการศึกษา และชำระเงินค่าสมัครตั้งแต่วันนี้ ถึง 16 พฤษภาคม 2564ประกาศรายชื่อผู้มีสิทธิ์เข้าศึกษาและสาขาวิชาที่เปิดเรียนได้วันที่ 20 พฤษภาคม 2564ผู้สมัครเลือกสาขาวิชาใหม่ในสาขาวิชาที่ไม่สามารถเปิดเรียนได้ ในระบบรับสมัคร วันที่ 21–26 พฤษภาคม 2564ประกาศรายชื่อผู้มีสิทธิ์เข้าศึกษา (เพิ่มเติม)วันที่ 30 พฤษภาคม 2564ชำระเงินลงทะเบียนที่เคาน์เตอร์เซอร์วิส 7–11/มหาวิทยาลัยวันที่ 1–15 มิถุนายน 2564ปฐมนิเทศภายในมิถุนายน 2564 (รอประกาศอย่างเป็นทางการ)เปิดภาคการศึกษาที่ 1/2564 วันที่ 26 มิถุนายน 2564อัตราค่าธรรมเนียมการศึกษาวิทยาการคอมพิวเตอร์ #หมายเหตุ* อัตราค่าธรรมเนียมภาคเรียนที่ 3 (ฤดูร้อน) ขึ้นอยู่กับหน่วยกิตที่ลงTECHNOLOGY STACK 2021แต่ละชั้นปีเรียนอะไร …ปี 1 ฺคุณจะได้เรียนรู้การเขียนโปรแกรมพื้นฐาน เช่น C Python รวมไปถึงการพัฒนา Web Frontend เช่น HTML CSS JS รวมถึงหัดใช้งาน git serviceปี 2 คุณจะเริ่มได้เริ่มเรียนรู้อะไรเกี่ยวกับ Backend ต่างๆ ภาษา Object Oriented เช่น ตระกูล java รวมไปถึงฐานข้อมูลต่างๆ ที่อยู่ในความนิยมปี 3 คุณจะได้ลองทำระบบที่มีการนำ Backend และ Frondend มารวมกัน ทั้งในรูปแบบ Web Application , Mobile Application, Internet Of Thing หรือแม้กระทั่ง Application Standaloneปี 4 คุณจะได้ทำความรู้จักกับระบบ Infrastucture on cloud ต่างๆ ซึ่งมีอยู่ด้วยกันหลายค่าย รวมไปถึงความรู้พื้นฐานเกี่ยวกับ data science และปัญญาประดิษฐ์สุดท้าย รับประกันได้ว่าเมื่อคุณได้เก็บเกี่ยวทุกอย่างที่อยู่ในหลักสูตรเราแล้ว คุณพร้อมแล้วสำหรับการเริ่มต้นเป็นโปรแกรมเมอร์ได้เลยติดตามข่าวสารการสมัครได้ที่นี่หลักจากที่คุณได้สมัครเข้ามาแล้ว คุณสามารถติดตามข่าวสารการสมัครของคุณ รวมถึงการประกาศต่างๆ จากทางมหาวิทยาลัยอย่างใกล้ชิดให้ที่ Line กลุ่มของหลักสูตร โดยจะแบ่งเป็น 2 กลุ่ม ได้แก่่CS VUR #64 (จันทร์ — ศุกร์)http://line.me/ti/g/MbQa_Tw6BoCS VUR #64 (เสาร์ — อาทิตย์)LINE｜always at your side.วิทยาการคอมพิวเตอร์ รับสมัครนักศึกษา ปีการศึกษา 2564(ปริญญาตรีภาคจันทร์-ศุกร์ และภาคเสาร์-อาทิตย์)วิทยาการคอมพิวเตอร์ รับสมัครนักศึกษา ปีการศึกษา 2564 รอบโควต้า(ปริญญาตรีภาคจันทร์-ศุกร์… was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "Ubuntu Server",
      "link": "https://medium.com/ckartisan/ubuntu-server-c6f394fa4e8d?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1610535495000,
      "created": 1610535495000,
      "category": "ubuntu-server",
      "content": "Ubuntu Server and LAMP + PHPMyAdminรวบรวมเกี่ยวกับ Config ของ Ubuntu Server and LAMP + PHPMyAdminReferenceHow To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu 20.04 | DigitalOceanHow To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOceanHow to Downgrade Composer to Version 1How to Install Laravel PHP Web Framework on Ubuntu 20.04How to Allow Remote MySQL ConnectionsUbuntu Server was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "Ubuntu Server and LAMP + PHPMyAdminรวบรวมเกี่ยวกับ Config ของ Ubuntu Server and LAMP + PHPMyAdminReferenceHow To Install Linux, Apache, MySQL, PHP (LAMP) stack on Ubuntu 20.04 | DigitalOceanHow To Install and Secure phpMyAdmin on Ubuntu 20.04 | DigitalOceanHow to Downgrade Composer to Version 1How to Install Laravel PHP Web Framework on Ubuntu 20.04How to Allow Remote MySQL ConnectionsUbuntu Server was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "ระบบกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์ ด้วย Laravel + Using Fetch (no jquery)",
      "link": "https://medium.com/ckartisan/%E0%B8%A3%E0%B8%B0%E0%B8%9A%E0%B8%9A%E0%B8%81%E0%B8%A3%E0%B8%AD%E0%B8%81%E0%B8%88%E0%B8%B1%E0%B8%87%E0%B8%AB%E0%B8%A7%E0%B8%B1%E0%B8%94-%E0%B8%AD%E0%B8%B3%E0%B9%80%E0%B8%A0%E0%B8%AD-%E0%B8%95%E0%B8%B3%E0%B8%9A%E0%B8%A5-%E0%B8%A3%E0%B8%AB%E0%B8%B1%E0%B8%AA%E0%B9%84%E0%B8%9B%E0%B8%A3%E0%B8%A9%E0%B8%93%E0%B8%B5%E0%B8%A2%E0%B9%8C-%E0%B8%94%E0%B9%89%E0%B8%A7%E0%B8%A2-laravel-using-fetch-no-jquery-bb2643a8fe7a?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1610097049000,
      "created": 1610097049000,
      "category": [
         "asynchronous",
         "javascript",
         "laravel",
         "fetch-api",
         "thailand"
      ],
      "content": "จากบทความเก่าที่เคยแนะนำวิธีกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์แบบใช้ Jquery ไปแล้ว คราวนี้จะแนะนำวิธีที่ไม่ใช้ Jquery บ้าง และก็ยกเลิกการใช้ code ของจังหวัด อำเภอ ตำบล แต่จะใช้ชื่อตรงๆ เลย ซึ่งจะดูตรงไปตรงมากว่ามาก โดยระบบที่ทำเป็นตัวอย่างให้ดูนี้ใช ้Javascript Fetch เรียก API จาก Server ซึ่ง Fetch เป็นฟังก์ชันที่ไม่ต้องติดตั้งอะไรเพิ่มเพราะเป็น Library พื้นฐาน ในส่วนของ Server ก็ใช้ PHP Laravel เป็น Server สแตนบายรอการเรียกข้อมูล โดย quey ข้อมูลจาก MySQLDemoตัวอย่างดูได้ที่นี่ระบบกรอกที่อยู่ไทย จังหวัด อำเภอ ตำบล รหัสไปรษณีย์Databaseข้อมูลตำบล ในประเทศไทยหน้าตาประมาณนี้ี้ ใน version เก่า คอลัมน์ ตำบล จะใช้ชื่ออื่น แต่ version ทับศัพท์ไปเลยว่า ตำบลจะได้ไม่งงหลักๆ คือ มีข้อมูลต่างๆ ครบเลย ได้แก่7,493 ตำบล928 อำเภอ77 จังหวัด970 รหัสไปรษณีย์สำหรับฐานข้อมูลก็ได้มาจากไฟล์ JSON นี้เลย raw_database.json ผมเลยเอาไปแปลงเป็น SQL/CSV ต่อและ import เข้าฐานข้อมูลแต่สำหรับใครที่ใช้ SQL อยู่ถ้าอยากได้ไฟล์ SQL ก็มาโหลดตรงๆ ได้เลยที่นี่ tambons.sqlServer API (PHP Laravel)สร้าง Model : Tambonphp artisan make:model Tambonสร้าง View : tambon/index.blade.php (แค่สร้างโฟลเดอร์และไฟล์)&lt;!-- ปล่อยว่างไว้ก่อน --&gt;สร้าง Controller สำหรับ APIphp artisan make:controller API\\TambonControllerเพิ่มโค้ดใน API\\TambonController&lt;?phpnamespace App\\Http\\Controllers\\API;use Illuminate\\Http\\Request;use App\\Http\\Controllers\\Controller;use App\\Tambon;class TambonController extends Controller{    public function getProvinces()    {        $provinces = Tambon::groupBy(&#39;province_code&#39;)-&gt;get();        return $provinces;    }    public function getAmphoes($province)    {        $amphoes = Tambon::where(&#39;province&#39;,$province)            -&gt;groupBy(&#39;amphoe_code&#39;)            -&gt;get();        return $amphoes;    }    public function getTambons($province,$amphoe)    {        $tambons = Tambon::where(&#39;province&#39;,$province)            -&gt;where(&#39;amphoe&#39;,$amphoe)            -&gt;groupBy(&#39;tambon_code&#39;)            -&gt;get();        return $tambons;    }    public function getZipcodes($province,$amphoe,$tambon)    {        $zipcodes = Tambon::where(&#39;province&#39;,$province)            -&gt;where(&#39;amphoe&#39;,$amphoe)                    -&gt;where(&#39;tambon&#39;,$tambon)            -&gt;get();        return $zipcodes;    }}routes/api.phpRoute::get(&#39;/provinces&#39;,&#39;API\\TambonController@getProvinces&#39;);Route::get(&#39;/province/{province_code}/amphoes&#39;,&#39;API\\TambonController@getAmphoes&#39;);Route::get(&#39;/province/{province_code}/amphoe/{amphoe_code}/tambons&#39;,&#39;API\\TambonController@getTambons&#39;);Route::get(&#39;/province/{province_code}/amphoe/{amphoe_code}/tambon/{tambon_code}/zipcodes&#39;,&#39;API\\TambonController@getZipcodes&#39;);routes/web.phpRoute::get(&#39;/tambon&#39;, function () {    return view(&quot;tambon/index&quot;);});config database ใน config/database.php โดยเปลี่ยน strict ให้เป็น false เพื่อให้สามารถใช้คำสั่ง Group By&#39;mysql&#39; =&gt; [    &#39;driver&#39; =&gt; &#39;mysql&#39;,    &#39;host&#39; =&gt; env(&#39;DB_HOST&#39;, &#39;127.0.0.1&#39;),    &#39;port&#39; =&gt; env(&#39;DB_PORT&#39;, &#39;3306&#39;),    &#39;database&#39; =&gt; env(&#39;DB_DATABASE&#39;, &#39;forge&#39;),    &#39;username&#39; =&gt; env(&#39;DB_USERNAME&#39;, &#39;forge&#39;),    &#39;password&#39; =&gt; env(&#39;DB_PASSWORD&#39;, &#39;&#39;),    &#39;unix_socket&#39; =&gt; env(&#39;DB_SOCKET&#39;, &#39;&#39;),    &#39;charset&#39; =&gt; &#39;utf8mb4&#39;,    &#39;collation&#39; =&gt; &#39;utf8mb4_unicode_ci&#39;,    &#39;prefix&#39; =&gt; &#39;&#39;,    &#39;strict&#39; =&gt; false,    &#39;engine&#39; =&gt; null,],ClientHTML&lt;div&gt;    &lt;select id=&quot;input_province&quot; onchange=&quot;showAmphoes()&quot;&gt;        &lt;option value=&quot;&quot;&gt;กรุณาเลือกจังหวัด&lt;/option&gt;    &lt;/select&gt;&lt;/div&gt;&lt;div&gt;    &lt;select id=&quot;input_amphoe&quot; onchange=&quot;showTambons()&quot;&gt;        &lt;option value=&quot;&quot;&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;    &lt;/select&gt;&lt;/div&gt;&lt;div&gt;    &lt;select id=&quot;input_tambon&quot; onchange=&quot;showZipcode()&quot;&gt;        &lt;option value=&quot;&quot;&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;    &lt;/select&gt;&lt;/div&gt;&lt;div&gt;    &lt;input id=&quot;input_zipcode&quot; placeholder=&quot;รหัสไปรษณีย์&quot; /&gt;&lt;/div&gt;Javascript&lt;script&gt;document.addEventListener(&#39;DOMContentLoaded&#39;, (event) =&gt; {    console.log(&quot;START&quot;);    showProvinces();    });function showProvinces(){    //PARAMETERS    fetch(&quot;{{ url(&#39;/&#39;) }}/api/provinces&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_province = document.querySelector(&quot;#input_province&quot;);            input_province.innerHTML = &quot;&quot;;            for(let item of result){                let option = document.createElement(&quot;option&quot;);                option.text = item.province;                option.value = item.province;                input_province.appendChild(option);                            }            //QUERY AMPHOES            showAmphoes();        });}function showAmphoes(){    let input_province = document.querySelector(&quot;#input_province&quot;);    fetch(&quot;{{ url(&#39;/&#39;) }}/api/province/&quot;+input_province.value+&quot;/amphoes&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_amphoe = document.querySelector(&quot;#input_amphoe&quot;);            input_amphoe.innerHTML = &quot;&quot;;            for(let item of result){                let option = document.createElement(&quot;option&quot;);                option.text = item.amphoe;                option.value = item.amphoe;                input_amphoe.appendChild(option);                            }            //QUERY AMPHOES            showTambons();        });}function showTambons(){    let input_province = document.querySelector(&quot;#input_province&quot;);    let input_amphoe = document.querySelector(&quot;#input_amphoe&quot;);    fetch(&quot;{{ url(&#39;/&#39;) }}/api/province/&quot;+input_province.value+&quot;/amphoe/&quot;+input_amphoe.value+&quot;/tambons&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_tambon = document.querySelector(&quot;#input_tambon&quot;);            input_tambon.innerHTML = &quot;&quot;;            for(let item of result){                let option = document.createElement(&quot;option&quot;);                option.text = item.tambon;                option.value = item.tambon;                input_tambon.appendChild(option);                            }            //QUERY AMPHOES            showZipcode();        });}function showZipcode(){    let input_province = document.querySelector(&quot;#input_province&quot;);    let input_amphoe = document.querySelector(&quot;#input_amphoe&quot;);    let input_tambon = document.querySelector(&quot;#input_tambon&quot;);    fetch(&quot;{{ url(&#39;/&#39;) }}/api/province/&quot;+input_province.value+&quot;/amphoe/&quot;+input_amphoe.value+&quot;/tambon/&quot;+input_tambon.value+&quot;/zipcodes&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_zipcode = document.querySelector(&quot;#input_zipcode&quot;);            input_zipcode.value = &quot;&quot;;            for(let item of result){                input_zipcode.value = item.zipcode;                break;             }        });    }&lt;/script&gt;RunGood Luck+++ระบบกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์ ด้วย Laravel + Using Fetch (no jquery) was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "จากบทความเก่าที่เคยแนะนำวิธีกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์แบบใช้ Jquery ไปแล้ว คราวนี้จะแนะนำวิธีที่ไม่ใช้ Jquery บ้าง และก็ยกเลิกการใช้ code ของจังหวัด อำเภอ ตำบล แต่จะใช้ชื่อตรงๆ เลย ซึ่งจะดูตรงไปตรงมากว่ามาก โดยระบบที่ทำเป็นตัวอย่างให้ดูนี้ใช ้Javascript Fetch เรียก API จาก Server ซึ่ง Fetch เป็นฟังก์ชันที่ไม่ต้องติดตั้งอะไรเพิ่มเพราะเป็น Library พื้นฐาน ในส่วนของ Server ก็ใช้ PHP Laravel เป็น Server สแตนบายรอการเรียกข้อมูล โดย quey ข้อมูลจาก MySQLDemoตัวอย่างดูได้ที่นี่ระบบกรอกที่อยู่ไทย จังหวัด อำเภอ ตำบล รหัสไปรษณีย์Databaseข้อมูลตำบล ในประเทศไทยหน้าตาประมาณนี้ี้ ใน version เก่า คอลัมน์ ตำบล จะใช้ชื่ออื่น แต่ version ทับศัพท์ไปเลยว่า ตำบลจะได้ไม่งงหลักๆ คือ มีข้อมูลต่างๆ ครบเลย ได้แก่7,493 ตำบล928 อำเภอ77 จังหวัด970 รหัสไปรษณีย์สำหรับฐานข้อมูลก็ได้มาจากไฟล์ JSON นี้เลย raw_database.json ผมเลยเอาไปแปลงเป็น SQL/CSV ต่อและ import เข้าฐานข้อมูลแต่สำหรับใครที่ใช้ SQL อยู่ถ้าอยากได้ไฟล์ SQL ก็มาโหลดตรงๆ ได้เลยที่นี่ tambons.sqlServer API (PHP Laravel)สร้าง Model : Tambonphp artisan make:model Tambonสร้าง View : tambon/index.blade.php (แค่สร้างโฟลเดอร์และไฟล์)&lt;!-- ปล่อยว่างไว้ก่อน --&gt;สร้าง Controller สำหรับ APIphp artisan make:controller API\\TambonControllerเพิ่มโค้ดใน API\\TambonController&lt;?phpnamespace App\\Http\\Controllers\\API;use Illuminate\\Http\\Request;use App\\Http\\Controllers\\Controller;use App\\Tambon;class TambonController extends Controller{    public function getProvinces()    {        $provinces = Tambon::groupBy(&#39;province_code&#39;)-&gt;get();        return $provinces;    }    public function getAmphoes($province)    {        $amphoes = Tambon::where(&#39;province&#39;,$province)            -&gt;groupBy(&#39;amphoe_code&#39;)            -&gt;get();        return $amphoes;    }    public function getTambons($province,$amphoe)    {        $tambons = Tambon::where(&#39;province&#39;,$province)            -&gt;where(&#39;amphoe&#39;,$amphoe)            -&gt;groupBy(&#39;tambon_code&#39;)            -&gt;get();        return $tambons;    }    public function getZipcodes($province,$amphoe,$tambon)    {        $zipcodes = Tambon::where(&#39;province&#39;,$province)            -&gt;where(&#39;amphoe&#39;,$amphoe)                    -&gt;where(&#39;tambon&#39;,$tambon)            -&gt;get();        return $zipcodes;    }}routes/api.phpRoute::get(&#39;/provinces&#39;,&#39;API\\TambonController@getProvinces&#39;);Route::get(&#39;/province/{province_code}/amphoes&#39;,&#39;API\\TambonController@getAmphoes&#39;);Route::get(&#39;/province/{province_code}/amphoe/{amphoe_code}/tambons&#39;,&#39;API\\TambonController@getTambons&#39;);Route::get(&#39;/province/{province_code}/amphoe/{amphoe_code}/tambon/{tambon_code}/zipcodes&#39;,&#39;API\\TambonController@getZipcodes&#39;);routes/web.phpRoute::get(&#39;/tambon&#39;, function () {    return view(&quot;tambon/index&quot;);});config database ใน config/database.php โดยเปลี่ยน strict ให้เป็น false เพื่อให้สามารถใช้คำสั่ง Group By&#39;mysql&#39; =&gt; [    &#39;driver&#39; =&gt; &#39;mysql&#39;,    &#39;host&#39; =&gt; env(&#39;DB_HOST&#39;, &#39;127.0.0.1&#39;),    &#39;port&#39; =&gt; env(&#39;DB_PORT&#39;, &#39;3306&#39;),    &#39;database&#39; =&gt; env(&#39;DB_DATABASE&#39;, &#39;forge&#39;),    &#39;username&#39; =&gt; env(&#39;DB_USERNAME&#39;, &#39;forge&#39;),    &#39;password&#39; =&gt; env(&#39;DB_PASSWORD&#39;, &#39;&#39;),    &#39;unix_socket&#39; =&gt; env(&#39;DB_SOCKET&#39;, &#39;&#39;),    &#39;charset&#39; =&gt; &#39;utf8mb4&#39;,    &#39;collation&#39; =&gt; &#39;utf8mb4_unicode_ci&#39;,    &#39;prefix&#39; =&gt; &#39;&#39;,    &#39;strict&#39; =&gt; false,    &#39;engine&#39; =&gt; null,],ClientHTML&lt;div&gt;    &lt;select id=&quot;input_province&quot; onchange=&quot;showAmphoes()&quot;&gt;        &lt;option value=&quot;&quot;&gt;กรุณาเลือกจังหวัด&lt;/option&gt;    &lt;/select&gt;&lt;/div&gt;&lt;div&gt;    &lt;select id=&quot;input_amphoe&quot; onchange=&quot;showTambons()&quot;&gt;        &lt;option value=&quot;&quot;&gt;กรุณาเลือกเขต/อำเภอ&lt;/option&gt;    &lt;/select&gt;&lt;/div&gt;&lt;div&gt;    &lt;select id=&quot;input_tambon&quot; onchange=&quot;showZipcode()&quot;&gt;        &lt;option value=&quot;&quot;&gt;กรุณาเลือกแขวง/ตำบล&lt;/option&gt;    &lt;/select&gt;&lt;/div&gt;&lt;div&gt;    &lt;input id=&quot;input_zipcode&quot; placeholder=&quot;รหัสไปรษณีย์&quot; /&gt;&lt;/div&gt;Javascript&lt;script&gt;document.addEventListener(&#39;DOMContentLoaded&#39;, (event) =&gt; {    console.log(&quot;START&quot;);    showProvinces();    });function showProvinces(){    //PARAMETERS    fetch(&quot;{{ url(&#39;/&#39;) }}/api/provinces&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_province = document.querySelector(&quot;#input_province&quot;);            input_province.innerHTML = &quot;&quot;;            for(let item of result){                let option = document.createElement(&quot;option&quot;);                option.text = item.province;                option.value = item.province;                input_province.appendChild(option);                            }            //QUERY AMPHOES            showAmphoes();        });}function showAmphoes(){    let input_province = document.querySelector(&quot;#input_province&quot;);    fetch(&quot;{{ url(&#39;/&#39;) }}/api/province/&quot;+input_province.value+&quot;/amphoes&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_amphoe = document.querySelector(&quot;#input_amphoe&quot;);            input_amphoe.innerHTML = &quot;&quot;;            for(let item of result){                let option = document.createElement(&quot;option&quot;);                option.text = item.amphoe;                option.value = item.amphoe;                input_amphoe.appendChild(option);                            }            //QUERY AMPHOES            showTambons();        });}function showTambons(){    let input_province = document.querySelector(&quot;#input_province&quot;);    let input_amphoe = document.querySelector(&quot;#input_amphoe&quot;);    fetch(&quot;{{ url(&#39;/&#39;) }}/api/province/&quot;+input_province.value+&quot;/amphoe/&quot;+input_amphoe.value+&quot;/tambons&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_tambon = document.querySelector(&quot;#input_tambon&quot;);            input_tambon.innerHTML = &quot;&quot;;            for(let item of result){                let option = document.createElement(&quot;option&quot;);                option.text = item.tambon;                option.value = item.tambon;                input_tambon.appendChild(option);                            }            //QUERY AMPHOES            showZipcode();        });}function showZipcode(){    let input_province = document.querySelector(&quot;#input_province&quot;);    let input_amphoe = document.querySelector(&quot;#input_amphoe&quot;);    let input_tambon = document.querySelector(&quot;#input_tambon&quot;);    fetch(&quot;{{ url(&#39;/&#39;) }}/api/province/&quot;+input_province.value+&quot;/amphoe/&quot;+input_amphoe.value+&quot;/tambon/&quot;+input_tambon.value+&quot;/zipcodes&quot;)        .then(response =&gt; response.json())        .then(result =&gt; {            console.log(result);            //UPDATE SELECT OPTION            let input_zipcode = document.querySelector(&quot;#input_zipcode&quot;);            input_zipcode.value = &quot;&quot;;            for(let item of result){                input_zipcode.value = item.zipcode;                break;             }        });    }&lt;/script&gt;RunGood Luck+++ระบบกรอกจังหวัด อำเภอ ตำบล รหัสไปรษณีย์ ด้วย Laravel + Using Fetch (no jquery) was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "Python 101",
      "link": "https://medium.com/ckartisan/python-101-b0e57af2f00a?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1609246854000,
      "created": 1609246854000,
      "category": "python",
      "content": "Python 101 for beginnerสำหรับคนเริ่มใช้ Python ควรเริ่มต้นจากอะไรบ้าง ในบทความนี้จะเล่าในส่วนที่ใช้งานกันบ่อยๆ เนื้องานอาจจะไม่ได้ละเอียดเน้นการใช้งานเป็นหลักStep 1 : Create Project &amp; EnvironmentCreate project and virtual environement : tutorial-envpython -m venv tutorial-envChoose directory tutorial-envcd tutorial-envOn Windows, run:Scripts\\activateOn Unix or MacOS, run:source Scripts\\activateStep 2 : Requirement.txtเมื่อต้องการบันทึก dependency ลงไฟล์ requirements.txtpip freeze &gt; requirements.txtเมื่อต้องการ install dependency จาก requirement.txtpip install -r requirements.txtdependency ที่พื้นฐานที่จำเป็นต้องใช้งานpip install numpypip install pandaspip install notebook#runjupyter notebookPython 101 was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "Python 101 for beginnerสำหรับคนเริ่มใช้ Python ควรเริ่มต้นจากอะไรบ้าง ในบทความนี้จะเล่าในส่วนที่ใช้งานกันบ่อยๆ เนื้องานอาจจะไม่ได้ละเอียดเน้นการใช้งานเป็นหลักStep 1 : Create Project &amp; EnvironmentCreate project and virtual environement : tutorial-envpython -m venv tutorial-envChoose directory tutorial-envcd tutorial-envOn Windows, run:Scripts\\activateOn Unix or MacOS, run:source Scripts\\activateStep 2 : Requirement.txtเมื่อต้องการบันทึก dependency ลงไฟล์ requirements.txtpip freeze &gt; requirements.txtเมื่อต้องการ install dependency จาก requirement.txtpip install -r requirements.txtdependency ที่พื้นฐานที่จำเป็นต้องใช้งานpip install numpypip install pandaspip install notebook#runjupyter notebookPython 101 was originally published in ckartisan on Medium, where people are continuing the conversation by highlighting and responding to this story."
   },
   {
      "image_author": "https://cdn-images-1.medium.com/fit/c/150/150/0*qsb3-0gGWBbENcIt",
      "title": "Discrete Mathematics",
      "link": "https://medium.com/cs-vru/discrete-mathematics-6e24d0773241?source=rss-c3f4e365b5a7------2",
      "author": "Chavalit Koweerawong",
      "published": 1605431196000,
      "created": 1605431196000,
      "category": "course",
      "content": "Guideline — slide[2020–11–16] ตรรกศาสตร์และการพิสูจน์ — slide[2020–11–23] เซต ลำดับและการหาผลรวม — slide[2020–11–30] การเวียนบังเกิด — slide[2020–12–07] ฟังก์ชัน — slide[2020–12–14] การนับ — slide[2020–12–21] ความน่าจะเป็น — slide[2020–12–28] ทฤษฏีกราฟ — slide[2021–01–04] Midtermหัวข้อที่ไม่ได้สอนการพิสูจน์และอุปนัยเชิงคณิตศาสตร์ — slideความสัมพันธ์ — slideDiscrete Mathematics was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story.",
      "enclosures": [],
      "content_encoded": "Guideline — slide[2020–11–16] ตรรกศาสตร์และการพิสูจน์ — slide[2020–11–23] เซต ลำดับและการหาผลรวม — slide[2020–11–30] การเวียนบังเกิด — slide[2020–12–07] ฟังก์ชัน — slide[2020–12–14] การนับ — slide[2020–12–21] ความน่าจะเป็น — slide[2020–12–28] ทฤษฏีกราฟ — slide[2021–01–04] Midtermหัวข้อที่ไม่ได้สอนการพิสูจน์และอุปนัยเชิงคณิตศาสตร์ — slideความสัมพันธ์ — slideDiscrete Mathematics was originally published in Computer Science VRU on Medium, where people are continuing the conversation by highlighting and responding to this story."
   }
]